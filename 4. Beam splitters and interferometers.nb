(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    515141,       9506]
NotebookOptionsPosition[    504549,       9340]
NotebookOutlinePosition[    504989,       9357]
CellTagsIndexPosition[    504946,       9354]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Beam splitters and interferometry", "Title",
 CellChangeTimes->{{3.9277246217473526`*^9, 
  3.927724651795456*^9}},ExpressionUUID->"20abd8c8-a984-4647-9dc7-\
1d14845a7e13"],

Cell[CellGroupData[{

Cell["Quantum mechanics of Beam splitters", "Section",
 CellChangeTimes->{{3.926432341191336*^9, 
  3.9264323516839657`*^9}},ExpressionUUID->"f7f69500-eaed-7340-8307-\
f9417bc0394d"],

Cell[TextData[{
 "Classically a lossless beam-splitter can be described as a device with one \
input mode and two output modes , related to transmitted and reflected \
amplitudes. However, this description is not adequate in a fully quantum \
approach because the commutation relations do not hold  ",
 Cell[BoxData[
  FormBox[Cell[TextData[Cell[BoxData[
    FormBox[Cell[TextData[Cell[BoxData[
      FormBox[
       RowBox[{"[", 
        RowBox[{
         SubscriptBox["a", "i"], " ", ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            SubscriptBox["a", "j"], "\[Dagger]"], Cell[
           "]",ExpressionUUID->"44077053-af76-ee4f-9459-3181a56719c6"]}], " ",
           "=", " ", 
          SubscriptBox["\[Delta]", "ij"]}]}]}], TraditionalForm]],
      ExpressionUUID->"e7fc6457-0d26-8446-b0e5-56a8f35b2ff9"]],ExpressionUUID->
      "0d43d9a7-3226-e246-a0ac-eaff8c24320e"], TraditionalForm]],
    ExpressionUUID->"efcb9ee1-724f-104b-9513-2e08fa1afc06"]],ExpressionUUID->
    "27859192-6a98-4b4d-88ba-caa8a8699d0c"], TraditionalForm]],ExpressionUUID->
  "57d1d309-2a9e-f64b-bf79-7e2a6f296a4b"],
 ",  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"[", 
     RowBox[{
      SubscriptBox["a", "i"], " ", ",", " ", 
      SubscriptBox["a", "j"]}], "]"}], " ", "=", " ", "0"}], 
   TraditionalForm]],ExpressionUUID->"2142a94f-cd02-074b-b514-40fcc9befc00"],
 " , ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{Cell["[",ExpressionUUID->"40327880-d551-fc4a-81c7-9e9b65156bcd"], 
      SuperscriptBox[
       SubscriptBox["a", "i"], "\[Dagger]"]}], ",", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["a", "j"], "\[Dagger]"], Cell[
      "]",ExpressionUUID->"025426d7-6340-2648-9812-cb955af16552"]}]}]}], 
   TraditionalForm]],ExpressionUUID->"f9dd4e1d-d1c9-0543-b8e5-96069d96d9ed"],
 " = 0.\nA quantum description uses an extra mode that is  unused in the \
classical setup,  but in the quantum approach it can have a quantized field \
in the vacuum state that has relevant physical effects . Using this \
description the commutation relations hold and we can analyze behaviors that \
can not be explained classically."
}], "Text",
 CellChangeTimes->{{3.926432511542864*^9, 3.92643253876585*^9}, {
  3.926432585378004*^9, 3.926432639166134*^9}, {3.926432976260622*^9, 
  3.9264333069120502`*^9}, {3.926437963609699*^9, 3.926437969357947*^9}, {
  3.9264415649555225`*^9, 3.9264416337138963`*^9}, {3.926513415656475*^9, 
  3.926513416344763*^9}},ExpressionUUID->"a90ab608-82db-f74e-afe7-\
8ba7df2aa86e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"QuantumCircuitOperator", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<XSpider\>\"", "[", "\"\<BS\>\"", "]"}], "->", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}], "->", 
      RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}]}]}], "}"}], "]"}], "[", 
  RowBox[{"\"\<Diagram\>\"", ",", 
   RowBox[{"\"\<WireLabels\>\"", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Placed", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[OverscriptBox[\(a\), \(^\)], \(0\)]\)\>\"", 
           ",", "Left"}], "]"}], ",", 
         RowBox[{"Placed", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[OverscriptBox[\(a\), \(^\)], \(2\)]\)\>\"", 
           ",", "Right"}], "]"}]}], "}"}]}], ",", 
      RowBox[{"2", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Placed", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[OverscriptBox[\(a\), \(^\)], \(1\)]\)\>\"", 
           ",", "Left"}], "]"}], ",", 
         RowBox[{"Placed", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[OverscriptBox[\(a\), \(^\)], \(3\)]\)\>\"", 
           ",", "Right"}], "]"}]}], "}"}]}]}], "}"}]}], ",", 
   RowBox[{"FontSize", "->", "18"}]}], "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.926433334534904*^9, 3.926433357800177*^9}, {
   3.926433418788355*^9, 3.926433447162327*^9}, {3.926433488381021*^9, 
   3.926433550984234*^9}, {3.9264335868449097`*^9, 3.926433604278194*^9}, {
   3.926433640673331*^9, 3.926433660973995*^9}, {3.926433693922737*^9, 
   3.926433821222939*^9}, {3.9264341932214203`*^9, 3.9264342812471485`*^9}, {
   3.926434337401467*^9, 3.926434374312977*^9}, {3.926434613879326*^9, 
   3.92643467135606*^9}, {3.926434708238915*^9, 3.926434803684696*^9}, 
   3.926435081927653*^9},
 CellLabel->"In[47]:=",ExpressionUUID->"2d79e99f-d422-5240-b8b7-82a435ca1f76"],

Cell["", "Text",
 CellChangeTimes->{{3.926436579930496*^9, 3.926436586173839*^9}, {
   3.926436619139169*^9, 3.92643672571644*^9}, {3.9264367708393116`*^9, 
   3.926436855281637*^9}, {3.9264368903436966`*^9, 3.926436896092583*^9}, {
   3.926436975163925*^9, 3.926437019600706*^9}, 
   3.926437960846899*^9},ExpressionUUID->"02fbcd87-44c6-d24c-b864-\
bfb4224162de"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[{{
     {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
      {AbsoluteThickness[1], Opacity[0.3], 
       LineBox[{{0.375, -2}, {0.625, -2}}]}}, 
     {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
      {AbsoluteThickness[1], Opacity[0.3], 
       LineBox[{{0.375, -1}, {0.625, -1}}]}}, 
     {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
      {AbsoluteThickness[1], Opacity[0.3], 
       LineBox[{{1.375, -1}, {1.625, -1}}]}}, 
     {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
      {AbsoluteThickness[1], Opacity[0.3], 
       LineBox[{{1.375, -2}, {1.625, -2}}]}}}, 
    TagBox[
     TooltipBox[
      {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       AbsoluteThickness[1], CapForm[None]}], FaceForm[GrayLevel[0.85]], 
       DiskBox[{1., -1.5}, 0.15000000000000002], InsetBox[
        StyleBox["\<\"BS\"\>",
         StripOnInput->False,
         FontFamily->"Roboto",
         FontSize->18,
         FontColor->GrayLevel[0],
         Background->GrayLevel[0, 0]], {1., -1.5}], 
       {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], {
         {AbsoluteThickness[1], Opacity[0.3], 
          LineBox[{{0.9099999999999999, -1.62}, {0.625, -2}}]}, 
         {AbsoluteThickness[1], Opacity[0.3], 
          LineBox[{{0.9099999999999999, -1.38}, {0.625, -1}}]}}, {
         {AbsoluteThickness[1], Opacity[0.3], 
          LineBox[{{1.09, -1.62}, {1.375, -2}}]}, 
         {AbsoluteThickness[1], Opacity[0.3], 
          LineBox[{{1.09, -1.38}, {1.375, -1}}]}}}},
      RowBox[{"\"XSpider\"", "[", "\"BS\"", "]"}]],
     Annotation[#, 
      "XSpider"["BS"], "Tooltip"]& ], {{InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(a\\), \\(^\\)], \
\\(0\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->18,
        FontSlant->Italic,
        FontColor->RGBColor[0.537254, 0.537254, 0.537254],
        Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
       ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(a\\), \\(^\\)], \
\\(2\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->18,
        FontSlant->Italic,
        FontColor->RGBColor[0.537254, 0.537254, 0.537254],
        Background->GrayLevel[0, 0]], {1.71875, -1}, NCache[
       ImageScaled[{0, Rational[1, 2]}], ImageScaled[{0, 0.5}]]]}, {InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(a\\), \\(^\\)], \
\\(1\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->18,
        FontSlant->Italic,
        FontColor->RGBColor[0.537254, 0.537254, 0.537254],
        Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
       ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(a\\), \\(^\\)], \
\\(3\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->18,
        FontSlant->Italic,
        FontColor->RGBColor[0.537254, 0.537254, 0.537254],
        Background->GrayLevel[0, 0]], {1.71875, -2}, NCache[
       ImageScaled[{0, Rational[1, 2]}], ImageScaled[{0, 0.5}]]]}}},
   ImageSize->Medium], 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3ft/DOf///F+v59fPj9+/4Xvb59WP82BhARBkCBB6qzeWoc6NW+N4kPR
RCl1CN7S5i1VFEnEqapaoi2RonVKHPJGnUJRiVYcIuSczX5fXO18951sVrI7
uzs787jfpr3tXnPNzLUb89y5rpmd/b/jkgZN/N8vvfTSjP+U/w0aO7vH9Olj
5wz+P/Jk6Lszpkx6d8Lbfd+dOWHShOmdxv2HFA75Xy+9tEz+e/bYDgAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAM1VVVQcOfH/q1Al/NwQA
/lRXVzdx4tiwDq8FvfZfX+7c7u/mAIDdZmuY/t7ULp3Dzp8v2rDh85DgV/bv
3+fvRgGwtMbGxpSUud2iIi5d+kWVZGVuah/66pEjP/q3YQCsLDV1SXSPzsXF
1xwLt23d0jE8uLCwwF+tAmBl5Y8efbNn9+3bt5rPOnH8WF7eAd83CQAAAAAA
AAAAAAAAeFtVVdX27TmJiRP79e0VGdGhb5+ekyeNl5KammqZW1x8LW31Spm4
cgCAz+Tu+7ZH985Br/1X8yk+PubSpV82bPhcPc3K3OTvxgKwhIyMdMcsiugU
Onr0CDlq0koktaREPT59utDf7QVgfvv379MiaNQbwy5evGCz2dSssrKymTOn
OaZWSPArlZWV/m0wANN7+vRpt6gIFTuLFy1oaGhoXic5eY4WTQkJcb5vJABT
UqnidNamjevV3IED+tbW1jqtU15eHhnRXlWbN3eWN1sKwEJcRJM2gpSfn+di
DWPHjFLVtmzJ9E4bAVhOS9Fks9lCQ9qpueWPHrlYw4fz56lqZ8+e9lozAVhL
S9H04MF9NatXzyjXa5g8afzzMfB2VVVV3mkjAMtpKZrKy8vVrMiIDq7XEN3j
2SVPgwf1dzr3bmnpmTOFt285ubkTALSkpWhqbGzUxrdLSu60tPjRI4dVneTk
OU1mPX78+J0pE2RWl85h8v/Ro0f8/vtdnVsPwKRcDINPf2+qmjs/ZZ7TCtKD
6xMbrepszcluMvfdqVNCQ9pJdsnjc2fPSNCNHDlEuywKAFxwEU1XrlxuH/qq
qpCZubFJqty4Xjx82OvaRU1FRecc516/XiyFS5cs0ko2fvHsUoRjx37yxqsA
YDIuokmkp6dp4TNi+KB/pqfl5u6VmJo9a3p4WLA2S46O1Pd8NVu2ZEr5mTP/
/3srd+78JiWrVqV68cUAMAvX0VRXVydHPsFBLzv9bq900NSDoUMTmiy4ePEC
KX/ypMKxUPp006YleuVlADAX19GkFBScdOy7yRTTu/uOHVtPnDje0mDUvLmz
QoJfaVLYJzZ63LjRerYegEm1JpqUe/f+kA6aTI8fP35h5Q/mzQ4JbtekkGgC
0Eqtj6Y2UR266up/G4CK6tqRDh2A1vBSNGVnbZbV/vLLRa3k4cMHUrIidanu
2wJgPl6KpqtXr8hq165do5V8vXuXlKjLnADANS9Fk3hnyoTIiA7qeqcb14t7
9+o2ZPAAm83JTZ8AoAnvRZP04CZOGCMrj4rqFBz08ojhg27f5pt0AFrFe9Gk
lJTcKSw4devWTe9tAoD5eDuaAMANRBMAAyKaABgQ0QTAgIgmAAZENAEwIKIJ
gAERTQAMiGgCYEBEEwADIpoAGBDRBMCAiCYABkQ0ATAgogmAARFNAAyIaAJg
QEQTAAMimgAYENEEwICIJtHY2OjvJhiiDYBxEE33799fvvxjNxYsLDiVnp52
794f7m33yZOKzMyNufu+VU8z1nz666833FsVYD4Wj6ajRw6vXLGspqa6rQte
vnwpNKSdvHU7dmx1b9MzZyTJ4tE9OqunNpvtiw3rdu3a6d7aAJOxcjRt/GL9
9PemSia4sey6dZ+pt04yyo3FGxoawsOCZfGkpETH8lUrly9cmOLGCgGTsWw0
HTnyY6eOIWVlZe4tPm1aorxvQ4cMbE3lp0+flJaWOJZcuXxJvfOH8g46ltfW
1sb07r5t6xb3WgWYhjWj6datm50jw1akLnV7DUMGD2h9b27e3FknTx53LDl4
8AdZXFJIDp+aVN6+Lad96KunTxe63TbABKwZTcOGJkh/6v79+26voVtUhEyt
GaTat/ebiE6hdXV1joVyXCRv+6ZNG5rXlwOn3r269Yzu4sYIGGAaFoymU6dO
yEuePGm822uQnAkOevmzz/75wpo//PBdh/b/3WRASXz6yT+6dA578qTC6VIf
LZwvLfx69y63WwgEOgtGkzo1lp6e1nyWHEdJz2vLlsyFC1M+SVulCsvK7klW
LF68QKt2t7TURbAox4/9rDYk09S/T87O3lxQcFKbm5Iy10WyffXVl7LUyJFD
2vzaALOwWjTdu/eHOul/+HB+k1lyLLTu84z3Z89Q74kElBTevPmr9K3kqRwm
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
kLdRK5HUkhL1+PTpQn+31ww8H3fyMJqkU6n+oJJLX+3amZ21WWLTZ3d0sQI+
7j20f/8+7R0b9cawixcv2Gw2NausrGzmzGmOb2lI8CuVlZX+bbAJHMo76Pm4
k4fR9LdRw4KDXg4Naef491VDT/AcH/ceevr0abeoCPX+LF60oKGhoXmd5OQ5
2vuZkBDn+0aajzbuJJPbPSlPokkaENW1o2qAtEQO3uSoyS8/vmBKfNx7btPG
9er9GTigb21trdM65eXlkRHtVbV5c2f5uIVmpdJJ60C5cUGmJ9Ekm1u/fi1Z
5A183OtCO6TMz89zUW3smFGq2pYtmT5rm3Won7Rr67iT338iE07xce85OcjU
hhrKHz1yUfPD+fNUtbNnTzut8OjRQ3m3vdNMk9N+arOto+JEkzHxce+5Bw/u
qzenV88o1zUnTxr/vFPcrvldHa5fL/5g3myZ5cef2A5ojtHUpveQaDIgHT/u
rUyOc9SbExnRwXXN6B7PzoEOHtTfsbCk5M6M6e8GB70cHxej1xXO1iTp1Cc2
Wht3auUN6IgmA9Ll476srOzMmcIrVy7bbE7GqaygsbFR6/C6GIY9euSwqpOc
PMexvKzs3ltvvvHD9/vlk4Jo0osaHm9Nz45oMiAPP+7r6+ulDyIf9xGdQuX/
sTHdi86d9WZ7jWv6e1PVOzk/ZZ7TChLp6scfZdqak93SeogmXTheVPDCdCKa
DMjDj/stWzKl8Mud2+Xxw4cP+sfH9uvbS9bp9XYbjxw0tg99Vb1LmZkbtasv
lBvXi4cPe107y1lUdK6l9RBNuiCaTMCTj/sffzy0du0a7eknaauejVlZ9QRT
enqaFj4jhg/6Z3pabu5eianZs6aHhwVrs0JD2qkv/jhFNOmFDl2g0+vjXsyZ
8z+yDzZZg3XU1dUtXbJIOraOV6hq08iRQ7Rrhl2shGjSkTYM7jqmiCbD8vzj
vrKyUjp3IcHt0lav9HHjjaag4KRjmMsU07v7jh1bT5w47vroVCGavMF1545o
MiwPP+7vlpaqrzf+4x+p1hxoau7evT/OnCmUSf2KX+sRTbqTQyZtRMLpv2Gi
yeDc/rivqanZ8/VX6lTdzBlJlu3Q6YJo8gZ1NWZLP7VJNAUEtz/uxRcb1r3w
qnK4RjR5SUnJHS2XpFvn2LMjmkzv9q1b8ifOyEj3d0MCGNHkbeqnNh3HnYgm
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
knTyd9MAAAAAAAAAAAAAwOj+H/Tyi8k=
     "], {{0, 204.}, {235.79999999999998`, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{120., 120.},
     RasterInterpolation->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{300.7500000000001, Automatic},
   ImageSizeRaw->{235.79999999999998`, 204.},
   PlotRange->{{0, 235.79999999999998`}, {0, 204.}}]}]], "Input",
 CellChangeTimes->{{3.926435117000871*^9, 3.926435117001875*^9}},
 TextAlignment->Center,ExpressionUUID->"95bb4512-4c8c-874c-82eb-b970fd2c95e0"],

Cell["\<\
The beam splitter can be described as a device with 2 input modes and 2 \
output modes. The field creation operators can be related between input and \
output modes using  the complex reflectance and transmittance coefficients\
\>", "Text",
 CellChangeTimes->{{3.926513945040783*^9, 3.9265139758511505`*^9}, {
  3.926514213969295*^9, 3.926514299395981*^9}, {3.9265143969746265`*^9, 
  3.926514476944401*^9}},ExpressionUUID->"c96b4591-49f7-fd43-a757-\
7be54a9a1af1"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9265143845868683`*^9, 
  3.9265143900450706`*^9}},ExpressionUUID->"ab5008cc-0c9a-3045-917b-\
593e6e36d2fc"],

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        SubscriptBox["a", "2"]},
       {
        SubscriptBox["a", "3"]}
      }], ")"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         RowBox[{"t", "'"}], "r"},
        {
         RowBox[{"r", "'"}], "t"}
       }], ")"}], 
     RowBox[{"(", GridBox[{
        {
         SubscriptBox["a", "0"]},
        {
         SubscriptBox["a", "1"]}
       }], ")"}]}]}],
   FontSize->24], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"with", " ", Cell[TextData[{
     Cell[BoxData[
      FormBox[Cell[TextData[{
        "|",
        Cell[BoxData[
         FormBox[
          RowBox[{"r", "'"}], TraditionalForm]],ExpressionUUID->
         "18be426d-4616-3e42-a8db-ce196e4b5e13"],
        "|"
       }],ExpressionUUID->"cc2e548a-54c6-fc4e-9756-99ef6bdb0e5a"], 
       TraditionalForm]],ExpressionUUID->
      "d72d7fca-f2a0-ff48-97d8-8d785eaa7c25"],
     "=|r|,"
    }],ExpressionUUID->"b0923bab-116c-a44d-b80d-c4274a230c2c"], " ", Cell[
    TextData[{
     Cell[BoxData[
      FormBox["|", TraditionalForm]],ExpressionUUID->
      "f44d21e2-b96c-4047-8a8f-eb079590d88e"],
     Cell[BoxData[
      FormBox[
       RowBox[{"t", "'"}], TraditionalForm]],ExpressionUUID->
      "16105669-8730-6a4b-babb-0fe50312b0c1"],
     "|=|t|"
    }],ExpressionUUID->"02c70c13-1c4e-1543-9fb4-249e78c65a6e"]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
     Cell["|",ExpressionUUID->"99516349-34a1-8943-9810-9e59e3f3ee64"], "r", 
      SuperscriptBox[Cell[TextData[Cell[BoxData[
        FormBox["|", TraditionalForm]],ExpressionUUID->
        "0ae90661-55eb-5b49-82ef-3a7e84161878"]],ExpressionUUID->
        "958b0e9a-16dd-9f47-8ad7-3e85cd933a67"], "2"]}], "+", 
     RowBox[{
     Cell["|",ExpressionUUID->"58781d2c-6b94-ef4f-9ec2-d0c7da76f956"], "t", 
      SuperscriptBox[Cell[TextData[Cell[BoxData[
        FormBox["|", TraditionalForm]],ExpressionUUID->
        "b65b2b1c-ec33-ea43-b5d2-98c6149c8ec4"]],ExpressionUUID->
        "70a31ffe-fb2e-8c46-bf1b-a9fcf135774c"], "2"]}]}], " ", "=", " ", 
    "1"}], ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"r", "\[Conjugate]"}], 
      RowBox[{"t", "'"}]}], "+", 
     RowBox[{
      RowBox[{"r", "'"}], 
      RowBox[{"t", "\[Conjugate]"}]}]}], " ", "=", " ", "0"}], ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"r", "\[Conjugate]"}], "t"}], "+", 
     RowBox[{
      RowBox[{"r", "'"}], 
      RowBox[{
       RowBox[{"t", "'"}], "\[Conjugate]"}]}]}], " ", "=", " ", "0"}]}],
  FontSize->18]}], "DisplayFormula",
 CellChangeTimes->{{3.926435227952332*^9, 3.926435345475559*^9}, {
   3.926435879085108*^9, 3.926436194071453*^9}, {3.9264362608318424`*^9, 
   3.926436396723102*^9}, 3.927724660270094*^9},
 TextAlignment->Center,ExpressionUUID->"8387f8d0-d389-e247-8265-3acd17ba0e7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Properties of quantum beam-splitters", "Section",
 CellChangeTimes->{{3.92651433127009*^9, 
  3.926514370102629*^9}},ExpressionUUID->"820c52a7-ceb4-6f42-a610-\
b039788cfefd"],

Cell[BoxData[
 RowBox[{"setFockSize", "[", "40", "]"}]], "Input",
 CellChangeTimes->{{3.926437295594654*^9, 3.926437315266503*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"2f9b6557-83a0-334e-a403-772b9dab2ef0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a2", " ", "=", " ", 
   RowBox[{"QuantumTensorProduct", "[", 
    RowBox[{"a", ",", 
     RowBox[{"QuantumOperator", "[", 
      RowBox[{"\"\<I\>\"", "[", 
       RowBox[{"fockBasis", "[", "\"\<Dimension\>\"", "]"}], "]"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a3", " ", "=", " ", 
   RowBox[{"QuantumTensorProduct", "[", 
    RowBox[{
     RowBox[{"QuantumOperator", "[", 
      RowBox[{"\"\<I\>\"", "[", 
       RowBox[{"fockBasis", "[", "\"\<Dimension\>\"", "]"}], "]"}], "]"}], 
     ",", "a"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.926437347325535*^9, 3.926437349753544*^9}, {
  3.926438586575409*^9, 3.9264385921589184`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"e935656d-3c80-844e-92b9-49793630e025"],

Cell[TextData[{
 "Using the relations between ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", ",", "t"}], TraditionalForm]],ExpressionUUID->
  "c14fcde4-22b6-de4f-adf6-6c2f16d676c6"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"r", "'"}], ",", " ", 
    RowBox[{"t", "'"}]}], TraditionalForm]],ExpressionUUID->
  "c78d2538-4f39-c840-a809-f0412c0c7a3c"],
 " and considering a phase shift of \[PlusMinus] \[ImaginaryI] between \
reflected and transmitted beams we can get the matrix:\nBS(r, t) = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"r", 
       RowBox[{"\[ImaginaryI]", " ", "t"}]},
      {
       RowBox[{"\[ImaginaryI]", " ", "t"}], "r"}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "8aa1117b-8eb2-b24e-9abf-02d6cee8b093"]
}], "Text",
 CellChangeTimes->{{3.926513612011799*^9, 
  3.9265139135835667`*^9}},ExpressionUUID->"07a7c569-b4b4-c148-b519-\
d9245ae50d9e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BSMatrixEvolve", "[", 
   RowBox[{"r_", ",", "t_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"\[ImaginaryI]", " ", "t"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "t"}], ",", "r"}], "}"}]}], "}"}], " ", "/;",
    " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Abs", "[", "r", "]"}], "^", "2"}], "+", 
     RowBox[{
      RowBox[{"Abs", "[", "t", "]"}], "^", "2"}]}], " ", "==", " ", 
    "1"}]}]}]], "Input",
 CellChangeTimes->{{3.92643809967482*^9, 3.9264381056083775`*^9}, {
  3.926438264951853*^9, 3.926438280812311*^9}, {3.9264390803225403`*^9, 
  3.926439113180824*^9}, {3.926439195270624*^9, 3.926439225234314*^9}, {
  3.9264393813278484`*^9, 3.926439392728691*^9}, {3.926439444913122*^9, 
  3.926439446764158*^9}, {3.926439535746363*^9, 3.926439538262467*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"09e41dbe-65b0-2843-a198-93d6f3bf8e84"],

Cell[TextData[{
 "Expressing the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"0", ","}]], 
     SubscriptBox["a", 
      RowBox[{"1", " "}]], "operators", " ", "in", " ", "terms", " ", "of", 
     " ", 
     SubscriptBox["a", "2"]}], ",", 
    SubscriptBox["a", "3"], " "}], TraditionalForm]],ExpressionUUID->
  "ee47961a-da6e-324c-9241-a01bebd62aa8"]
}], "Text",
 CellChangeTimes->{{3.926440625766756*^9, 3.926440665643957*^9}, {
  3.926513643632311*^9, 
  3.9265136451248074`*^9}},ExpressionUUID->"3b5fcf11-a847-9c43-919e-\
70f95bf39cf1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a0", ",", "a1"}], "}"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"Inverse", "[", 
     RowBox[{"BSMatrixEvolve", "[", 
      RowBox[{
       RowBox[{"1", "/", 
        SqrtBox["2"]}], ",", " ", 
       RowBox[{"1", "/", 
        SqrtBox["2"]}]}], "]"}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"a2", ",", "a3"}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.926437996169632*^9, 3.926438031231182*^9}, {
  3.9264385954807568`*^9, 3.926438601387287*^9}, {3.926438655736395*^9, 
  3.926438679773874*^9}, {3.926439232713459*^9, 3.9264393124191074`*^9}, {
  3.926439551871517*^9, 3.926439605576277*^9}, {3.926440155503172*^9, 
  3.926440166164179*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"780b7d1b-a728-a846-be97-5bd7b0f858ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"a1", "[", "\"\<Dagger\>\"", "]"}], "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.9264402440260754`*^9, 3.926440260747093*^9}, 
   3.926440312340114*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"98091a52-6916-ff43-b29b-3c9609072a05"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox[Cell[
      "|0\[RightAngleBracket]",ExpressionUUID->
       "feba29c4-a588-9b49-aaa5-8c05053029e4"], "0"], 
     SubscriptBox[Cell[
      "|1\[RightAngleBracket]",ExpressionUUID->
       "5348a791-d91c-f94b-9386-f667273a9c11"], "1"]}], " ", 
    OverscriptBox["\[DoubleRightArrow]", "BS"]}], TraditionalForm]],
  ExpressionUUID->"5c90ec1c-5b9f-3348-adff-1e0b83631851"],
 "   ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "/", 
     SqrtBox["2"]}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox[Cell[
        "|0\[RightAngleBracket]",ExpressionUUID->
         "490faee8-908d-1646-910b-b98cf2fff729"], "2"], 
       SubscriptBox[Cell[
        "|1\[RightAngleBracket]",ExpressionUUID->
         "4ac75d3a-5d85-574a-85d2-032993b98358"], "3"]}], " ", "+", " ", 
      RowBox[{"\[ImaginaryI]", 
       SubscriptBox[Cell[
        "|1\[RightAngleBracket]",ExpressionUUID->
         "435d2979-f1c2-2c4b-b73d-a758797fe6c5"], "2"], 
       SubscriptBox[Cell[
        "|0\[RightAngleBracket]",ExpressionUUID->
         "60925f2e-823c-5944-86e9-d46f85605984"], "3"]}]}], " ", ")"}]}], 
   TraditionalForm]],ExpressionUUID->"8326c6de-ffa3-0a40-975f-90610e3b62c4"]
}], "Text",
 CellChangeTimes->{{3.92644038987442*^9, 3.926440583762195*^9}, {
  3.926446823706102*^9, 
  3.926446825537504*^9}},ExpressionUUID->"687f07d2-ff2f-9a41-a997-\
4eac83f08bee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "[", "\"\<Formula\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.926440315402561*^9, 3.926440319258017*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"f88b694c-5e01-d24b-9f62-01a7dee527c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", 
    SqrtBox["2"]], 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{"0", "\[InvisibleSpace]", "1"}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False]]}], "+", 
  RowBox[{
   FractionBox["\[ImaginaryI]", 
    SqrtBox["2"]], 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{"1", "\[InvisibleSpace]", "0"}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> 
     False]]}]}]], "Output",
 CellChangeTimes->{3.926440319651914*^9, 3.926460638497778*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"c30fafeb-aa03-4645-829d-1089831b8b37"]
}, Open  ]],

Cell["The output state results in  a entangled state:", "Text",
 CellChangeTimes->{{3.926440682722927*^9, 3.926440695676941*^9}, {
  3.926446493652548*^9, 
  3.9264465130025992`*^9}},ExpressionUUID->"92530059-97ca-b14e-80da-\
f87dd2c4df22"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumEntanglementMonotone", "[", 
  RowBox[{"%%", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.926438163660125*^9, 3.926438165604849*^9}, {
   3.926438248827799*^9, 3.926438249758171*^9}, 3.926438286819385*^9, {
   3.926438541306942*^9, 3.926438547091664*^9}, {3.926438686816717*^9, 
   3.926438706371952*^9}, {3.9264387471387634`*^9, 3.926438747545164*^9}, {
   3.926439099577671*^9, 3.926439120944139*^9}, {3.926439262082648*^9, 
   3.9264392759028797`*^9}, {3.9264396272324314`*^9, 3.926439659559418*^9}, {
   3.9264397552763786`*^9, 3.926439786857565*^9}, {3.926440180261678*^9, 
   3.926440182454967*^9}, {3.926440301783338*^9, 3.92644032355211*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"1c181c6f-7ba9-e448-83d4-e854c7cca65c"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.926438548314089*^9, 3.926438550496218*^9}, {
   3.926438688195589*^9, 3.926438749598118*^9}, {3.926439091057328*^9, 
   3.9264391229093113`*^9}, {3.9264392050327244`*^9, 3.926439206322598*^9}, {
   3.9264392390400543`*^9, 3.926439317643553*^9}, {3.926439543614769*^9, 
   3.9264395565449886`*^9}, {3.9264395993484*^9, 3.9264396420027256`*^9}, 
   3.926439752168717*^9, {3.926439787401099*^9, 3.926439791397019*^9}, {
   3.926440302429035*^9, 3.926440324095297*^9}, 3.926460642794657*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"63019719-8f84-ea45-89c9-9ca6e0c788a3"]
}, Open  ]],

Cell[TextData[{
 "If we put one photon in each of the input ports the two photons emerge \
together (explained by interference when the photons are indistinguishable)\n \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox[Cell[
      "|1\[RightAngleBracket]",ExpressionUUID->
       "24855d11-0e52-3447-bb20-8b9dd361506e"], "0"], 
     SubscriptBox[Cell[
      "|1\[RightAngleBracket]",ExpressionUUID->
       "a2c60e12-5f87-4e40-9e8c-1817149cd94b"], "1"]}], " ", 
    OverscriptBox["\[DoubleRightArrow]", "BS"]}], TraditionalForm]],
  ExpressionUUID->"dd55e9e1-bfec-b94b-9a9d-e3f4dab8eaa5"],
 "   ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[ImaginaryI]", "/", 
     SqrtBox["2"]}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox[Cell[
        "|2\[RightAngleBracket]",ExpressionUUID->
         "15c5cbe3-a9bd-564e-a74f-a7a9a9272caf"], "2"], 
       SubscriptBox[Cell[
        "|0\[RightAngleBracket]",ExpressionUUID->
         "50dd156f-3d40-8b4c-b549-f581b74258c9"], "3"]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox[Cell[
        "|0\[RightAngleBracket]",ExpressionUUID->
         "1f5c3017-1f85-544a-bf05-cfab37d7a3dc"], "2"], 
       SubscriptBox[Cell[
        "|2\[RightAngleBracket]",ExpressionUUID->
         "e420216d-f34a-594b-a54a-46474e1bd13f"], "3"]}]}], " ", ")"}]}], 
   TraditionalForm]],ExpressionUUID->"a691056d-aaa8-474a-ae31-369525689e7f"]
}], "Text",
 CellChangeTimes->{{3.926440850183687*^9, 3.9264408728250065`*^9}, {
  3.92644091621857*^9, 3.926440979514793*^9}, {3.926441041761711*^9, 
  3.926441085225416*^9}, {3.92644680808972*^9, 
  3.926446810725672*^9}},ExpressionUUID->"1337fbee-746f-a94c-95c9-\
535a6b1edac9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a1", "[", "\"\<Dagger\>\"", "]"}], "@", 
  RowBox[{
   RowBox[{"a0", "[", "\"\<Dagger\>\"", "]"}], "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.926440779646631*^9, 3.9264407939510326`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"9184447e-52f5-984a-87e3-55ac89cd0e60"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      RowBox[{
       FractionBox["\[ImaginaryI]", 
        SqrtBox["2"]], 
       FormBox[
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{
              FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
              FormBox["2", TraditionalForm]}]},
           "Ket"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[{0, 2}, "Dual" -> False]],
        TraditionalForm]}], "+", 
      RowBox[{
       FractionBox["\[ImaginaryI]", 
        SqrtBox["2"]], 
       FormBox[
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{
              FormBox["2", TraditionalForm], "\[InvisibleSpace]", 
              FormBox["0", TraditionalForm]}]},
           "Ket"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[{2, 0}, "Dual" -> False]],
        TraditionalForm]}]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{"None"}, {
        TemplateBox[{"\"QuantumState: \"", 
          RowBox[{
            RowBox[{"{", "}"}], "\[Rule]", 
            RowBox[{"{", 
              RowBox[{"40", ",", "40"}], "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumState[
    SparseArray[
    Automatic, {1600}, 0, {
     1, {{0, 3}, {{3}, {42}, {81}}}, {
      Complex[0, 1] 2^Rational[-1, 2], 0, Complex[0, 1] 2^Rational[-1, 2]}}], 
    Wolfram`QuantumFramework`QuantumBasis[<|
     "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
           
           Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
            False], 1} -> 1|>], "Output" -> 
      Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[2, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[3, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[4, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{5}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[5, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{6}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[6, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{7}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[7, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{8}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[8, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{9}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[9, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{10}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[10, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{11}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[11, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{12}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[12, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{13}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[13, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{14}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[14, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{15}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[15, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{16}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[16, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{17}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[17, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{18}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[18, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{19}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[19, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{20}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[20, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{21}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[21, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{22}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[22, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{23}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[23, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{24}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[24, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{25}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[25, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{26}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[26, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{27}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[27, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{28}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[28, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{29}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[29, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{30}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[30, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{31}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[31, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{32}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[32, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{33}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[33, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{34}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[34, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{35}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[35, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{36}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[36, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{37}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[37, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{38}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[38, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{39}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[39, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{40}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[2, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[3, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[4, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{5}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[5, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{6}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[6, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{7}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[7, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{8}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[8, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{9}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[9, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{10}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[10, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{11}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[11, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{12}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[12, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{13}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[13, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{14}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[14, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{15}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[15, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{16}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[16, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{17}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[17, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{18}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[18, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{19}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[19, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{20}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[20, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{21}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[21, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{22}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[22, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{23}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[23, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{24}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[24, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{25}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[25, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{26}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[26, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{27}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[27, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{28}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[28, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{29}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[29, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{30}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[30, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{31}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[31, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{32}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[32, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{33}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[33, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{34}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[34, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{35}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[35, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{36}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[36, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{37}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[37, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{38}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[38, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{39}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[39, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{40}}}, {1}}]|>], 
      "Picture" -> "Schrodinger", "Label" -> None, "ParameterSpec" -> {}|>]]],
   TraditionalForm]], "Output",
 CellChangeTimes->{{3.926440795308441*^9, 3.926440797505417*^9}, {
  3.926460646872732*^9, 3.926460650359556*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"d2679bcd-f228-3b4f-a800-e94ccd439416"]
}, Open  ]],

Cell[TextData[{
 "Now let\[CloseCurlyQuote]s try using a coherent state in the input port one \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[Cell[
     "|0\[RightAngleBracket]",ExpressionUUID->
      "215a0bdd-edcc-c24d-aab3-9c850a15e890"], "0"], 
    SubscriptBox[Cell[
     "|\[Alpha]\[RightAngleBracket]",ExpressionUUID->
      "270dd538-1451-3040-844c-020c23c8ffb2"], "1"], " "}], TraditionalForm]],
  ExpressionUUID->"0d177dd8-3eb4-8341-ba79-9a49f441572b"],
 ", using ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["D", "1"], "^"], "(", "\[Alpha]", ")"}], " ", "=", " ", 
    RowBox[{"exp", "(", 
     RowBox[{
      RowBox[{"\[Alpha]", " ", 
       SuperscriptBox[
        SubscriptBox["a", "1"], "\[Dagger]"]}], "-", 
      RowBox[{
       RowBox[{"\[Alpha]", "\[Conjugate]"}], 
       SubscriptBox["a", "1"]}]}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "24b18fe7-b748-0745-a77c-ab65c4dc0266"]
}], "Text",
 CellChangeTimes->{{3.9264416872628574`*^9, 3.926441725579281*^9}, {
  3.9264417959442177`*^9, 
  3.926441865169565*^9}},ExpressionUUID->"8809a3e9-c902-2446-89a0-\
2225619daa16"],

Cell[BoxData[
 RowBox[{
  RowBox[{"disp", "[", 
   RowBox[{
    RowBox[{"\[Alpha]_", "?", "NumericQ"}], ",", "creation_QuantumOperator"}],
    "]"}], ":=", " ", 
  RowBox[{"Exp", "[", 
   RowBox[{
    RowBox[{"\[Alpha]", " ", 
     RowBox[{
      RowBox[{"N", "[", "creation", "]"}], "[", "\"\<Dagger\>\"", "]"}]}], 
    "-", 
    RowBox[{
     RowBox[{"\[Alpha]", "\[Conjugate]"}], 
     RowBox[{"N", "[", "creation", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.926441885389843*^9, 3.926441985804329*^9}, {
  3.926442095882055*^9, 3.926442097547373*^9}, {3.926444022672978*^9, 
  3.92644403270945*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"6b7e4782-9802-e044-9fd5-4bba019f6877"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Alpha]coh", " ", "=", " ", 
  RowBox[{
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}], "]"}], 
   RowBox[{"Exp", "[", 
    RowBox[{"I", " ", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.926445282678995*^9, 3.926445317036096*^9}, {
  3.926445548277836*^9, 3.926445548603983*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"9cdf8c7c-70a6-5740-87c7-a0f5dfc28399"],

Cell[BoxData[
 RowBox[{"1.5315548459392465`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.584302055361517`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.92644531832658*^9, {3.926445449779648*^9, 3.926445465528591*^9}, {
   3.926445507499601*^9, 3.9264455122515125`*^9}, 3.9264455488602448`*^9, {
   3.926460668692444*^9, 3.9264606710045166`*^9}, 3.9265031320128136`*^9, {
   3.926504334193767*^9, 3.926504342850411*^9}, 3.9265044314361935`*^9, 
   3.9266816754945564`*^9, 3.9266818258724346`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"9785447c-242e-a846-801e-ea6f37969ccf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"cohBS", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"disp", "[", 
      RowBox[{"\[Alpha]coh", ",", " ", "a1"}], "]"}], "[", "]"}], "  ", "too",
     " ", "slow"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.9264479734435034`*^9, 3.9264479998654327`*^9}, {
  3.926448046208832*^9, 
  3.926448046678659*^9}},ExpressionUUID->"18223fb3-5014-a848-88b7-\
309e974f3e3b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RepeatedTiming", "[", 
  RowBox[{"cohBS", " ", "=", 
   RowBox[{"QuantumState", "[", 
    RowBox[{
     RowBox[{"MatrixExp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]coh", " ", 
           RowBox[{"a1", "[", "\"\<Dagger\>\"", "]"}]}], "-", 
          RowBox[{
           RowBox[{"\[Alpha]coh", "\[Conjugate]"}], " ", "a1"}]}], ")"}], 
        "[", "\"\<Matrix\>\"", "]"}], ",", 
       RowBox[{"PadRight", "[", 
        RowBox[{
         RowBox[{"{", "1", "}"}], ",", 
         SuperscriptBox[
          RowBox[{"fockBasis", "[", "\"\<Dimension\>\"", "]"}], "2"]}], 
        "]"}]}], "]"}], ",", 
     RowBox[{"a1", "[", "\"\<OutputDimensions\>\"", "]"}]}], "]"}]}], " ", 
  "]"}]], "Input",
 CellChangeTimes->{{3.926444131892742*^9, 3.926444168972925*^9}, {
   3.926444401846916*^9, 3.926444410607511*^9}, {3.926444621488857*^9, 
   3.926444668361084*^9}, {3.926445351804947*^9, 3.9264453959092464`*^9}, {
   3.9264454882608395`*^9, 3.926445489758672*^9}, {3.926445731987053*^9, 
   3.9264457666833878`*^9}, {3.926446305906475*^9, 3.926446308532364*^9}, 
   3.926446419204361*^9, {3.926461877485398*^9, 3.926461895209474*^9}, {
   3.926461929279667*^9, 3.92646196480686*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"ff18b1b9-941c-2949-9a73-84ab5821b85b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.18181635`", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumState",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], AspectRatio -> 1, Axes -> False, 
               Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
               Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> None, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 TagBox[
                  
                  TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, 
                   "RowDefault"], "SummaryItem"], 
                 RowBox[{
                   TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Vector\"", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1600", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], AspectRatio -> 1, Axes -> False, 
               Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
               Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> None, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 TagBox[
                  
                  TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, 
                   "RowDefault"], "SummaryItem"], 
                 RowBox[{
                   TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Vector\"", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1600", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Purity: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["$Aborted", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{"0", "\"\[RightArrow]\"", "2"}, 
                    "RowDefault"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Von Neumann Entropy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["$Aborted", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{
                    RowBox[{"{", "}"}], "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{"40", ",", "40"}], "}"}]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}], ""}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumState[
     SparseArray[Automatic, {1600}, 
      Complex[0., 0.], {1, {{0, 496}, CompressedData["
1:eJwt1VV0EAQYBeANRvdGjXT0Rnd3KM1GSbONTmlGSrNREgbdKs0oBSxawqBb
BZNUwKL9UM/5v4f//Z57w2IGRg1IEhAQ8FtgQID714s/KUEkIzkpSEkqUpOG
tKQjPRnISCaCCSEzWchKNrITSg5ykovc5CEv4URQlGIUpwQlKUVpylCWcpSn
AhWpRGWqUJVqVKcGNalFbepQl3rUpwGRRNGSVrSmDW15lXa0pwMd6URnutCV
aGKIpRvd6UFPetGbPvSlH/2JYxSjGcNYxjGe15nARCYxmSlMZRrTiSeBGcxk
FrOZwxvMZR7zWcBKVrGaNazlXd7jfdaxng1sZBOb2cJWEtnGdnawk118wIfs
Zg97OcoxjnOCL/iSr/iak5ziNGc4yznOc4GLXOIyV7jKN3zLd1zjOve4zwN+
5w/+5C/+5iGPeMwTnvKM57wIeiBJSEoQyUhOClKSilBykJNc5CYPeXmJMPKR
nwIUpBCFKUI4ERSlGMUpQUlKUZs61KUe9WnAy7xCQxrRmCY0pRnNaUEkUbSk
Fa1pQ1t604e+9KM/AxjIawxiMEMYyjCGM4KRxDGK0YxhLOOYyzzms4A3eYu3
eYeFLGIxS1jKMpazgpWsYjVrWMtu9rCXj/iYT/iUz9jHfg5wkEMc5gifc5Rj
HOcE17jO9/zAj/zEz/zCDW5yi9vc4S6/Bv7Xhfe4zwNSKcTUpCEt6UhPBjKS
iWBCyEwWspKN7ISSg9KUoSzlKE8FKlKJylShKtWoTg1qUovatKM9HehIJzrT
ha5EE0Ms3ehOD3rSiwlMZBKTmcJUpjGdeBKYwUxmMZs5rGM9G9jIJjazha0k
so3t7GAnuzjJKU5zhrOc4zwXuMglLnOFqzzkEY95wlOe8fz/cQokCUkJIox8
5KcABSlEYYoQTgRFaUgjGtOEpjSjOS2IJIpBDGYIQxnGcEYwkjgWsojFLGEp
y1jOCvaxnwMc5BCHOcINbnKL29zhLpkMbzAhZCYLlalCVaoRTQyxxJNAIv8A
uQ7qLg==
        "]}, {
        Complex[0.2405372599923271, -2.212163105439481*^-17], 
        Complex[0.17311713725799707`, -0.22906642449734316`], 
        Complex[-0.06614873095915434, -0.2331493113756836], 
        Complex[-0.1556759855863901, -0.060509628255327984`], 
        Complex[-0.08483281375606097, 0.05235132340633999], 
        Complex[-0.005008915128649523, 0.05297918473523969], 
        Complex[0.019125503582052603`, 0.01751373390857029], 
        Complex[0.011506506060546444`, -0.0021198609224715673`], 
        Complex[0.0022141572650972853`, -0.004413571361991907], 
        Complex[-0.0008698478342506294, -0.0017616867719414517`], 
        Complex[-0.0007284980734054843, -0.00013899408205255128`], 
        Complex[-0.00019799442716358136`, 0.00017901382861284018`], 
        Complex[8.076646252244464*^-6, 0.00009162274029274503], 
        Complex[0.00002581193198486027, 0.00001615573849540303], 
        Complex[9.076835853202706*^-6, -3.461982245008988*^-6], 
        Complex[8.354815538023996*^-7, -2.87519964014436*^-6], 
        Complex[-5.341953326422048*^-7, -7.162373752740009*^-7], 
        Complex[-2.58675651680825*^-7, -1.640264080031826*^-9], 
        Complex[-4.42492260064163*^-8, 5.778460364566027*^-8], 
        Complex[5.318390369992189*^-9, 1.92083426353181*^-8], 
        Complex[4.946188587723146*^-9, 1.958723247374923*^-9], 
        Complex[1.1838620871019422`*^-9, -7.20249871663379*^-10], 
        Complex[3.542018502268622*^-11, -3.5088079996400284`*^-10], 
        Complex[-6.435914121285991*^-11, -5.969008267423392*^-11], 
        Complex[-2.105815044322635*^-11, 3.741673787939092*^-12], 
        Complex[-2.318518550558221*^-12, 4.549393901238134*^-12], 
        Complex[5.223747579932971*^-13, 1.075074801772358*^-12], 
        Complex[2.695985727612053*^-13, 5.321207202419756*^-14], 
        Complex[4.582612435076991*^-14, -4.090792047692688*^-14], 
        Complex[-1.222580459813212*^-15, -1.495247891866301*^-14], 
        Complex[-3.011096725261576*^-15, -1.9113304702542295`*^-15], 
        Complex[0.22906642449734316`, 0.17311713725799713`], 
        Complex[0.3297229182054394, -0.09354843245620507], 
        Complex[0.10480575048533339`, -0.26963871655398786`], 
        Complex[-0.10470264681267996`, -0.16966562751212194`], 
        Complex[-0.11846505846051514`, -0.011200274721187438`], 
        Complex[-0.04289971156687685, 0.04684772484980078], 
        Complex[0.005608624814903746, 0.030443353495463413`], 
        Complex[0.012483464957260899`, 0.006262582467055002], 
        Complex[0.005285060315824355, -0.0026095435027518894`], 
        Complex[0.000439537880570393, -0.0023037131830058676`], 
        Complex[-0.0005937217017937785, -0.0006566732254829503], 
        Complex[-0.0003173904826314451, 0.000027978323327296413`], 
        Complex[-0.000058250343538163025`, 0.00009306624429020272], 
        Complex[0.000012953551439918127`, 0.00003396240991867044], 
        Complex[0.000011135600323300662`, 3.235806143940183*^-6], 
        Complex[2.864949501096001*^-6, -2.136781330568819*^-6], 
        Complex[6.762982055877016*^-9, -1.066547034655525*^-6], 
        Complex[-2.451593105161398*^-7, -1.877335666283584*^-7], 
        Complex[-8.372722442025535*^-8, 2.318232616509593*^-8], 
        Complex[-8.75967666047891*^-9, 2.212002782336528*^-8], 
        Complex[3.300599556179668*^-9, 5.425137626533052*^-9], 
        Complex[1.645776833970612*^-9, 1.661353940462679*^-10], 
        Complex[2.862635801182332*^-10, -3.0865559824196863`*^-10], 
        Complex[-1.833038312879506*^-11, -1.0316344702533596`*^-10], 
        Complex[-2.274696950619068*^-11, -1.159259275279108*^-11], 
        Complex[-5.481827392809147*^-12, 2.663599084416135*^-12], 
        Complex[-2.764980369657732*^-13, 1.400875277011387*^-12], 
        Complex[2.164643684695107*^-13, 2.424890571641169*^-13], 
        Complex[8.052156325220463*^-14, -6.583797266076436*^-15], 
        Complex[1.046878813405198*^-14, -1.649245599255702*^-14], 
        Complex[0.06614873095915431, 0.2331493113756836], 
        Complex[0.26963871655398786`, 0.10480575048533339`], 
        Complex[0.20779710714690708`, -0.12823402970495473`], 
        Complex[0.01583958041300781, -0.16753489234218205`], 
        Complex[-0.07407275686112003, -0.06783039975780085], 
        Complex[-0.0527294350069222, 0.009714423140004876], 
        Complex[-0.011716218974068661`, 0.023354424434934438`], 
        Complex[0.005219087005503776, 0.01057012063164871], 
        Complex[0.004886913640836885, 0.0009324006478190641], 
        Complex[0.0014683659711839246`, -0.0013276020849277478`], 
        Complex[-0.0000656149843338932, -0.0007443466608762473], 
        Complex[-0.0002279648107882051, -0.00014268361901032678`], 
        Complex[-0.00008658749545196888, 0.00003302520578123522], 
        Complex[-8.561138347680603*^-6, 0.000029462029154864012`], 
        Complex[5.851816676042231*^-6, 7.845987339317262*^-6], 
        Complex[3.0166505626373*^-6, 1.9128601891014975`*^-8], 
        Complex[5.473326980288466*^-7, -7.147560730965263*^-7], 
        Complex[-6.954697849528774*^-8, -2.51181673260766*^-7], 
        Complex[-6.817850463020817*^-8, -2.6999136733668373`*^-8], 
        Complex[-1.715579151972438*^-8, 1.043741224166864*^-8], 
        Complex[-5.383402048208374*^-10, 5.332926454205089*^-9], 
        Complex[1.0236948088112899`*^-9, 9.494288863960213*^-10], 
        Complex[3.498442699612457*^-10, -6.216135354830019*^-11], 
        Complex[4.015791927857785*^-11, -7.87978138058844*^-11], 
        Complex[-9.417244874764644*^-12, -1.9381186613747595`*^-11], 
        Complex[-5.050927641794377*^-12, -9.969278498452316*^-13], 
        Complex[-8.909616873910017*^-13, 7.953408753661575*^-13], 
        Complex[2.4634313673637002`*^-14, 3.012841019371965*^-13], 
        Complex[6.280140139887987*^-14, 3.986395756115014*^-14], 
        Complex[-0.060509628255327984`, 0.1556759855863901], 
        Complex[0.10470264681267993`, 0.16966562751212194`], 
        Complex[0.16753489234218205`, 0.01583958041300782], 
        Complex[0.07832379911881249, -0.08553185222677065], 
        Complex[-0.012541266346416944`, -0.06807340787891202], 
        Complex[-0.03302814377730189, -0.01656923577286089], 
        Complex[-0.016146125966448217`, 0.007972287087093818], 
        Complex[-0.001522603881998126, 0.007980296558064762], 
        Complex[0.00229947426332923, 0.002543284466195776], 
        Complex[0.001358984855885229, -0.00011979602343340438`], 
        Complex[0.00027321832934652893`, -0.00043651937892634404`], 
        Complex[-0.0000660504115624704, -0.00017317499090393777`], 
        Complex[-0.00006133010436696033, -0.00001782143061509239], 
        Complex[-0.00001694926982303539, 0.000012641368830682894`], 
        Complex[-4.277285414284108*^-8, 6.7454357224199865`*^-6], 
        Complex[1.650658444828796*^-6, 1.2640107221729548`*^-6], 
        Complex[5.979319807177986*^-7, -1.6555492311516852`*^-7], 
        Complex[6.613410849312119*^-8, -1.6700254776999022`*^-7], 
        Complex[-2.626691145242211*^-8, -4.317446185998034*^-8], 
        Complex[-1.376955689579019*^-8, -1.389988431909998*^-9], 
        Complex[-2.511952720944868*^-9, 2.708441882542486*^-9], 
        Complex[1.683337411701815*^-10, 9.473827616023305*^-10], 
        Complex[2.18181266835245*^-10, 1.1119224352152425`*^-10], 
        Complex[5.481827392809148*^-11, -2.663599084416136*^-11], 
        Complex[2.877882812353898*^-12, -1.458077216823653*^-11], 
        Complex[-2.341420139483254*^-12, -2.6229201880324252`*^-12], 
        Complex[-9.038523058115897*^-13, 7.39029410209109*^-14], 
        Complex[-1.217864020163184*^-13, 1.918614504397817*^-13], 
        Complex[-0.08483281375606097, 0.05235132340633998], 
        Complex[-0.011200274721187444`, 0.11846505846051514`], 
        Complex[0.07407275686112003, 0.06783039975780086], 
        Complex[0.06807340787891203, -0.012541266346416948`], 
        Complex[0.018524968761669106`, -0.03692658732834186], 
        Complex[-0.00976401772317955, -0.01977488497025002], 
        Complex[-0.010556940040592041`, -0.002014215608514288], 
        Complex[-0.003596747385066882, 0.0032519476895280786`], 
        Complex[0.00017969403515010677`, 0.0020384772838278435`], 
        Complex[0.0006901977401046766, 0.00043199610962052737`], 
        Complex[0.00028717823395078547`, -0.00010953221620063316`], 
        Complex[0.00003086762328890348, -0.00010622685679707718`], 
        Complex[-0.00002278955175553972, -0.00003055573071431428], 
        Complex[-0.000012619554698900786`, -8.002068282848192*^-8], 
        Complex[-2.447746238201733*^-6, 3.19648633354928*^-6], 
        Complex[3.311098462303371*^-7, 1.195863961435598*^-6], 
        Complex[3.442845721014645*^-7, 1.363389573865984*^-7], 
        Complex[9.158686426581619*^-8, -5.572053362650276*^-8], 
        Complex[3.0294095536931233`*^-9, -3.001005350304153*^-8], 
        Complex[-6.056260162472499*^-9, -5.616897040298285*^-9], 
        Complex[-2.170726608569492*^-9, 3.857010554637304*^-10], 
        Complex[-2.6076892569174156`*^-10, 5.116804262311369*^-10], 
        Complex[6.387086227254903*^-11, 1.3144960307896644`*^-10], 
        Complex[3.571545186795382*^-11, 7.049344429792879*^-12], 
        Complex[6.557300470081064*^-12, -5.853550348708138*^-12], 
        Complex[-1.8841626918876084`*^-13, -2.304380272369566*^-12], 
        Complex[-4.9847067026334*^-13, -3.164103539449087*^-13], 
        Complex[-0.05297918473523969, -0.005008915128649523], 
        Complex[-0.042899711566876865`, 0.04684772484980078], 
        Complex[0.009714423140004872, 0.052729435006922204`], 
        Complex[0.03302814377730189, 0.01656923577286089], 
        Complex[0.01977488497025002, -0.00976401772317955], 
        Complex[0.0022064626489245397`, -0.011564548396923535`], 
        Complex[-0.0038477563963429163`, -0.004255728897942119], 
        Complex[-0.0025784924701638024`, 0.00022729697320827781`], 
        Complex[-0.0005795836002761702, 0.000925997438874474], 
        Complex[0.00015490194566771743`, 0.0004061313532715544], 
        Complex[0.00015755989093348228`, 0.00004578408422708099], 
        Complex[0.000047336734475095085`, -0.00003530542176669493], 
        Complex[1.2902947403161636`*^-7, -0.00002034842053025805], 
        Complex[-5.348744681286305*^-6, -4.095862865205091*^-6], 
        Complex[-2.071297140147043*^-6, 5.734990765572622*^-7], 
        Complex[-2.438905413583049*^-7, 6.158749654586418*^-7], 
        Complex[1.0274358739072508`*^-7, 1.6887783336054832`*^-7], 
        Complex[5.694007306387562*^-8, 5.747900493086656*^-9], 
        Complex[1.0949348061550706`*^-8, -1.180582446045576*^-8], 
        Complex[-7.714021109274604*^-10, -4.341453217138982*^-9], 
        Complex[-1.0486328270991367`*^-9, -5.344172685710895*^-10], 
        Complex[-2.757310135953489*^-10, 1.3397665098341306`*^-10], 
        Complex[-1.511915942416505*^-11, 7.660111036928762*^-11], 
        Complex[1.2824486269918721`*^-11, 1.436632553521052*^-11], 
        Complex[5.152750935027829*^-12, -4.213115859729691*^-13], 
        Complex[7.215266196298099*^-13, -1.136688016733913*^-12], 
        Complex[-0.019125503582052603`, -0.01751373390857029], 
        Complex[-0.03044335349546341, 0.005608624814903741], 
        Complex[-0.011716218974068663`, 0.023354424434934438`], 
        Complex[0.007972287087093818, 0.016146125966448217`], 
        Complex[0.010556940040592043`, 0.002014215608514288], 
        Complex[0.0042557288979421185`, -0.003847756396342916], 
        Complex[-0.00024550879081596785`, -0.0027850901819881277`], 
        Complex[-0.001069249741206163, -0.0006692454952746785], 
        Complex[-0.0004974072920306619, 0.0001897153635251155], 
        Complex[-0.000059106998577614084`, 0.0002034089445385446], 
        Complex[0.000047803767054083326`, 0.00006409424147095457], 
        Complex[0.000028777012286762054`, 1.824752321213779*^-7], 
        Complex[6.0289468944606284`*^-6, -7.873138993360598*^-6], 
        Complex[-8.760343097703091*^-7, -3.163958643823127*^-6], 
        Complex[-9.737838223634174*^-7, -3.856248052318698*^-7], 
        Complex[-2.7577634706674*^-7, 1.677795756335521*^-7], 
        Complex[-9.675158235857087*^-9, 9.58444248498849*^-8], 
        Complex[2.0448287790748793`*^-8, 1.896482715236163*^-8], 
        Complex[7.725672621154334*^-9, -1.372720117025773*^-9], 
        Complex[9.757079770556078*^-10, -1.9145328464753723`*^-9], 
        Complex[-2.506473629036608*^-10, -5.158454918908516*^-10], 
        Complex[-1.4667995910358218`*^-10, -2.895098615837066*^-11], 
        Complex[-2.812768540016448*^-11, 2.5108933689056684`*^-11], 
        Complex[8.426231719459379*^-13, 1.0305501870055659`*^-11], 
        Complex[2.320254698111893*^-12, 1.4728100449401993`*^-12], 
        Complex[-0.0021198609224715686`, -0.011506506060546444`], 
        Complex[-0.012483464957260899`, -0.006262582467055003], 
        Complex[-0.010570120631648711`, 0.005219087005503777], 
        Complex[-0.0015226038819981262`, 0.007980296558064762], 
        Complex[0.0032519476895280794`, 0.0035967473850668824`], 
        Complex[0.002578492470163802, -0.0002272969732082779], 
        Complex[0.0006692454952746784, -0.001069249741206163], 
        Complex[-0.0002028142546623577, -0.0005317507624176425], 
        Complex[-0.0002306440635836224, -0.00006702103670563516], 
        Complex[-0.00007660727109967185, 0.00005713643001699731], 
        Complex[-2.287448090637459*^-7, 0.00003607389399884037], 
        Complex[0.00001030835868399525, 7.893744429924221*^-6], 
        Complex[4.311748831435538*^-6, -1.1938335283944774`*^-6], 
        Complex[5.453558295463936*^-7, -1.377138288405858*^-6], 
        Complex[-2.456041501500861*^-7, -4.0369523582986726`*^-7], 
        Complex[-1.449031501170369*^-7, -1.462746433558644*^-8], 
        Complex[-2.9554548529848514`*^-8, 3.186635496378556*^-8], 
        Complex[2.201249299646859*^-9, 1.2388637156031138`*^-8], 
        Complex[3.1542099845043557`*^-9, 1.607487617073345*^-9], 
        Complex[8.719380245081556*^-10, -4.236713703890231*^-10], 
        Complex[5.014457895552132*^-11, -2.5405714161952945`*^-10], 
        Complex[-4.451338181143125*^-11, -4.986505660473474*^-11], 
        Complex[-1.868030851020697*^-11, 1.527384207802221*^-12], 
        Complex[-2.727114285505105*^-12, 4.2962768722073706`*^-12], 
        Complex[0.0022141572650972853`, -0.004413571361991908], 
        Complex[-0.002609543502751888, -0.005285060315824356], 
        Complex[-0.004886913640836885, -0.0009324006478190641], 
        Complex[-0.0025432844661957754`, 0.0022994742633292297`], 
        Complex[0.0001796940351501068, 0.002038477283827843], 
        Complex[0.000925997438874474, 0.0005795836002761701], 
        Complex[0.0004974072920306618, -0.0001897153635251155], 
        Complex[0.00006702103670563516, -0.0002306440635836224], 
        Complex[-0.000060602335676714107`, -0.00008125428132416129], 
        Complex[-0.000040331839597264384`, -2.5574447128337154`*^-7], 
        Complex[-9.256235819533745*^-6, 0.000012087622007331004`], 
        Complex[1.46214149119646*^-6, 5.280792268029353*^-6], 
        Complex[1.75551375137431*^-6, 6.951950041771607*^-7], 
        Complex[5.340385997337003*^-7, -3.249037511312475*^-7], 
        Complex[2.0029480439257523`*^-8, -1.984168099316461*^-7], 
        Complex[-4.506583137318074*^-8, -4.179644336072559*^-8], 
        Complex[-1.805938682487766*^-8, 3.208844693700684*^-9], 
        Complex[-2.4112314256100178`*^-9, 4.731314976756532*^-9], 
        Complex[6.529214320707874*^-10, 1.343746741999796*^-9], 
        Complex[4.0169961167483595`*^-10, 7.928554090479725*^-11], 
        Complex[8.079062544167899*^-11, -7.211992128227766*^-11], 
        Complex[-2.5328801639970977`*^-12, -3.097778714821969*^-11], 
        Complex[-7.284691861544923*^-12, -4.624047246497626*^-12], 
        Complex[0.0017616867719414517`, -0.0008698478342506295], 
        Complex[0.0004395378805703934, -0.002303713183005867], 
        Complex[-0.0013276020849277476`, -0.0014683659711839242`], 
        Complex[-0.0013589848558852287`, 0.00011979602343340444`], 
        Complex[-0.0004319961096205274, 0.0006901977401046766], 
        Complex[0.00015490194566771743`, 0.0004061313532715543], 
        Complex[0.00020340894453854457`, 0.00005910699857761407], 
        Complex[0.00007660727109967184, -0.00005713643001699731], 
        Complex[2.557444712833715*^-7, -0.000040331839597264384`], 
        Complex[-0.000012741472346114166`, -9.7569292497873*^-6], 
        Complex[-5.838135516287753*^-6, 1.6164582389031313`*^-6], 
        Complex[-8.027420456019332*^-7, 2.027092673844095*^-6], 
        Complex[3.904857114314346*^-7, 6.418345181389487*^-7], 
        Complex[2.474692408469549*^-7, 2.498115114626403*^-8], 
        Complex[5.395897635559724*^-8, -5.817973813044024*^-8], 
        Complex[-4.278459591600913*^-9, -2.407918243317021*^-8], 
        Complex[-6.502570465744651*^-9, -3.313920618532918*^-9], 
        Complex[-1.900344866930771*^-9, 9.233703443985712*^-10], 
        Complex[-1.151992201626571*^-10, 5.83656004316714*^-10], 
        Complex[1.0751003101273778`*^-10, 1.204355536215455*^-10], 
        Complex[4.731935148964898*^-11, -3.869038359256291*^-12], 
        Complex[7.229568026380199*^-12, -1.138941117094925*^-11], 
        Complex[0.0007284980734054843, 0.00013899408205255128`], 
        Complex[0.0006566732254829504, -0.0005937217017937784], 
        Complex[-0.00006561498433389318, -0.0007443466608762472], 
        Complex[-0.00043651937892634404`, -0.0002732183293465289], 
        Complex[-0.0002871782339507854, 0.00010953221620063311`], 
        Complex[-0.000045784084227080965`, 0.00015755989093348225`], 
        Complex[0.000047803767054083326`, 0.00006409424147095456], 
        Complex[0.00003607389399884036, 2.2874480906374246`*^-7], 
        Complex[9.256235819533742*^-6, -0.000012087622007331004`], 
        Complex[-1.6164582389031311`*^-6, -5.838135516287755*^-6], 
        Complex[-2.126032732388578*^-6, -8.419229602255151*^-7], 
        Complex[-7.030944875403219*^-7, 4.277556650688994*^-7], 
        Complex[-2.8482894627657413`*^-8, 2.821583468816379*^-7], 
        Complex[6.883919450790547*^-8, 6.384512182681982*^-8], 
        Complex[2.949085519232766*^-8, -5.240021442269372*^-9], 
        Complex[4.19181485582321*^-9, -8.225173326998*^-9], 
        Complex[-1.203927634019192*^-9, -2.477746565441918*^-9], 
        Complex[-7.830567006768499*^-10, -1.545559723431995*^-10], 
        Complex[-1.660089542604359*^-10, 1.4819235088183097`*^-10], 
        Complex[5.471646521001996*^-12, 6.69196686393611*^-11], 
        Complex[1.650482481954844*^-11, 1.047663939824807*^-11], 
        Complex[0.00017901382861284016`, 0.00019799442716358136`], 
        Complex[0.0003173904826314451, -0.000027978323327296352`], 
        Complex[0.00014268361901032678`, -0.00022796481078820504`], 
        Complex[-0.00006605041156247042, -0.00017317499090393774`], 
        Complex[-0.00010622685679707717`, -0.000030867623288903475`], 
        Complex[-0.000047336734475095064`, 0.00003530542176669493], 
        Complex[-1.824752321213736*^-7, 0.000028777012286762054`], 
        Complex[0.00001030835868399525, 7.893744429924218*^-6], 
        Complex[5.280792268029351*^-6, -1.462141491196461*^-6], 
        Complex[8.02742045601933*^-7, -2.027092673844094*^-6], 
        Complex[-4.277556650688994*^-7, -7.030944875403218*^-7], 
        Complex[-2.947047818009413*^-7, -2.974941318969444*^-8], 
        Complex[-6.940696490728961*^-8, 7.483609429732796*^-8], 
        Complex[5.911541454232476*^-9, 3.327017167981465*^-8], 
        Complex[9.604933125920198*^-9, 4.894985159068433*^-9], 
        Complex[2.988274793877313*^-9, -1.451991358829808*^-9], 
        Complex[1.921382849498533*^-10, -9.7346721194602*^-10], 
        Complex[-1.895682921985701*^-10, -2.123593678186246*^-10], 
        Complex[-8.7949675158445*^-11, 7.191152375505193*^-12], 
        Complex[-1.412669768275166*^-11, 2.2255101246638923`*^-11], 
        Complex[8.076646252244457*^-6, 0.00009162274029274503], 
        Complex[0.00009306624429020271, 0.00005825034353816307], 
        Complex[0.00008658749545196887, -0.0000330252057812352], 
        Complex[0.00001782143061509238, -0.00006133010436696033], 
        Complex[-0.000022789551755539717`, -0.00003055573071431429], 
        Complex[-0.00002034842053025804, -1.29029474031614*^-7], 
        Complex[-6.028946894460628*^-6, 7.873138993360598*^-6], 
        Complex[1.1938335283944778`*^-6, 4.311748831435537*^-6], 
        Complex[1.75551375137431*^-6, 6.951950041771601*^-7], 
        Complex[6.418345181389485*^-7, -3.904857114314346*^-7], 
        Complex[2.8482894627657386`*^-8, -2.821583468816379*^-7], 
        Complex[-7.483609429732795*^-8, -6.94069649072896*^-8], 
        Complex[-3.46286925911356*^-8, 6.152927424855162*^-9], 
        Complex[-5.287188256412877*^-9, 1.0374513502439474`*^-8], 
        Complex[1.623375690542872*^-9, 3.340992787279422*^-9], 
        Complex[1.124063113728619*^-9, 2.218621810748615*^-10], 
        Complex[2.527582044012184*^-10, -2.25631398509531*^-10], 
        Complex[-8.807326991295425*^-12, -1.077159135908618*^-10], 
        Complex[-2.800372162538526*^-11, -1.7775704770316337`*^-11], 
        Complex[-0.000016155738495403027`, 0.00002581193198486027], 
        Complex[0.000012953551439918116`, 0.000033962409918670444`], 
        Complex[0.000029462029154864006`, 8.561138347680607*^-6], 
        Complex[0.000016949269823035388`, -0.000012641368830682895`], 
        Complex[8.002068282848272*^-8, -0.000012619554698900786`], 
        Complex[-5.348744681286304*^-6, -4.095862865205089*^-6], 
        Complex[-3.163958643823127*^-6, 8.760343097703092*^-7], 
        Complex[-5.453558295463935*^-7, 1.3771382884058578`*^-6], 
        Complex[3.249037511312475*^-7, 5.340385997337002*^-7], 
        Complex[2.474692408469549*^-7, 2.4981151146263994`*^-8], 
        Complex[6.38451218268198*^-8, -6.883919450790547*^-8], 
        Complex[-5.911541454232477*^-9, -3.327017167981465*^-8], 
        Complex[-1.0374513502439474`*^-8, -5.287188256412877*^-9], 
        Complex[-3.467112068756755*^-9, 1.684656569818808*^-9], 
        Complex[-2.383182117818074*^-10, 1.207437472650213*^-9], 
        Complex[2.503155620556194*^-10, 2.804100511577849*^-10], 
        Complex[1.2317785974015156`*^-10, -1.007156373328551*^-11], 
        Complex[2.091661511347093*^-11, -3.295188992793684*^-11], 
        Complex[-9.076835853202705*^-6, 3.461982245008988*^-6], 
        Complex[-3.235806143940187*^-6, 0.000011135600323300662`], 
        Complex[5.851816676042228*^-6, 7.84598733931726*^-6], 
        Complex[6.74543572241999*^-6, 4.27728541428405*^-8], 
        Complex[2.447746238201733*^-6, -3.19648633354928*^-6], 
        Complex[-5.734990765572624*^-7, -2.071297140147043*^-6], 
        Complex[-9.737838223634177*^-7, -3.856248052318697*^-7], 
        Complex[-4.0369523582986726`*^-7, 2.456041501500861*^-7], 
        Complex[-2.00294804392575*^-8, 1.984168099316461*^-7], 
        Complex[5.817973813044023*^-8, 5.3958976355597235`*^-8], 
        Complex[2.949085519232766*^-8, -5.240021442269374*^-9], 
        Complex[4.894985159068433*^-9, -9.604933125920198*^-9], 
        Complex[-1.623375690542873*^-9, -3.340992787279422*^-9], 
        Complex[-1.207437472650213*^-9, -2.383182117818073*^-10], 
        Complex[-2.902519781961224*^-10, 2.591012225130102*^-10], 
        Complex[1.0766954525432082`*^-11, 1.316826710810693*^-10], 
        Complex[3.631121417392854*^-11, 2.3048987261120864`*^-11], 
        Complex[-2.8751996401443594`*^-6, -8.354815538023996*^-7], 
        Complex[-2.8649495010960025`*^-6, 2.13678133056882*^-6], 
        Complex[-1.9128601891015283`*^-8, 3.016650562637299*^-6], 
        Complex[1.650658444828797*^-6, 1.264010722172955*^-6], 
        Complex[1.195863961435598*^-6, -3.311098462303372*^-7], 
        Complex[2.438905413583046*^-7, -6.158749654586419*^-7], 
        Complex[-1.6777957563355214`*^-7, -2.7577634706674*^-7], 
        Complex[-1.449031501170369*^-7, -1.4627464335586428`*^-8], 
        Complex[-4.179644336072558*^-8, 4.506583137318072*^-8], 
        Complex[4.278459591600912*^-9, 2.407918243317021*^-8], 
        Complex[8.225173326998*^-9, 4.19181485582321*^-9], 
        Complex[2.988274793877313*^-9, -1.45199135882981*^-9], 
        Complex[2.218621810748615*^-10, -1.124063113728619*^-9], 
        Complex[-2.5031556205561934`*^-10, -2.804100511577849*^-10], 
        Complex[-1.316826710810693*^-10, 1.0766954525432077`*^-11], 
        Complex[-2.3804891682471475`*^-11, 3.750206074031891*^-11], 
        Complex[-5.341953326422048*^-7, -7.162373752740009*^-7], 
        Complex[-1.066547034655525*^-6, -6.762982055877277*^-9], 
        Complex[-5.473326980288465*^-7, 7.147560730965261*^-7], 
        Complex[1.6555492311516862`*^-7, 5.979319807177987*^-7], 
        Complex[3.442845721014646*^-7, 1.363389573865984*^-7], 
        Complex[1.6887783336054835`*^-7, -1.027435873907251*^-7], 
        Complex[9.675158235857078*^-9, -9.58444248498849*^-8], 
        Complex[-3.186635496378556*^-8, -2.9554548529848514`*^-8], 
        Complex[-1.8059386824877656`*^-8, 3.2088446937006847`*^-9], 
        Complex[-3.313920618532917*^-9, 6.502570465744649*^-9], 
        Complex[1.203927634019191*^-9, 2.477746565441919*^-9], 
        Complex[9.7346721194602*^-10, 1.921382849498533*^-10], 
        Complex[2.527582044012184*^-10, -2.25631398509531*^-10], 
        Complex[-1.00715637332855*^-11, -1.2317785974015156`*^-10], 
        Complex[-3.631121417392854*^-11, -2.3048987261120867`*^-11], 
        Complex[1.640264080031809*^-9, -2.58675651680825*^-7], 
        Complex[-2.451593105161397*^-7, -1.8773356662835844`*^-7], 
        Complex[-2.51181673260766*^-7, 6.954697849528769*^-8], 
        Complex[-6.613410849312119*^-8, 1.6700254776999022`*^-7], 
        Complex[5.572053362650277*^-8, 9.15868642658162*^-8], 
        Complex[5.69400730638756*^-8, 5.747900493086658*^-9], 
        Complex[1.896482715236163*^-8, -2.0448287790748797`*^-8], 
        Complex[-2.2012492996468594`*^-9, -1.2388637156031121`*^-8], 
        Complex[-4.7313149767565315`*^-9, -2.4112314256100174`*^-9], 
        Complex[-1.90034486693077*^-9, 9.233703443985709*^-10], 
        Complex[-1.5455597234319944`*^-10, 7.830567006768498*^-10], 
        Complex[1.895682921985701*^-10, 2.123593678186242*^-10], 
        Complex[1.077159135908618*^-10, -8.807326991295425*^-12], 
        Complex[2.091661511347093*^-11, -3.295188992793684*^-11], 
        Complex[4.42492260064163*^-8, -5.778460364566027*^-8], 
        Complex[-2.31823261650959*^-8, -8.372722442025535*^-8], 
        Complex[-6.817850463020815*^-8, -2.6999136733668373`*^-8], 
        Complex[-4.317446185998035*^-8, 2.626691145242211*^-8], 
        Complex[-3.029409553693123*^-9, 3.0010053503041534`*^-8], 
        Complex[1.180582446045578*^-8, 1.0949348061550706`*^-8], 
        Complex[7.725672621154336*^-9, -1.372720117025774*^-9], 
        Complex[1.6074876170733448`*^-9, -3.1542099845043557`*^-9], 
        Complex[-6.529214320707874*^-10, -1.343746741999795*^-9], 
        Complex[-5.836560043167137*^-10, -1.151992201626571*^-10], 
        Complex[-1.660089542604359*^-10, 1.4819235088183094`*^-10], 
        Complex[7.19115237550519*^-12, 8.7949675158445*^-11], 
        Complex[2.800372162538526*^-11, 1.7775704770316337`*^-11], 
        Complex[1.9208342635318106`*^-8, -5.318390369992191*^-9], 
        Complex[8.759676660478918*^-9, -2.212002782336528*^-8], 
        Complex[-1.043741224166863*^-8, -1.715579151972438*^-8], 
        Complex[-1.376955689579019*^-8, -1.389988431909998*^-9], 
        Complex[-5.616897040298286*^-9, 6.0562601624725*^-9], 
        Complex[7.71402110927461*^-10, 4.341453217138982*^-9], 
        Complex[1.9145328464753723`*^-9, 9.757079770556078*^-10], 
        Complex[8.719380245081556*^-10, -4.236713703890234*^-10], 
        Complex[7.928554090479721*^-11, -4.0169961167483595`*^-10], 
        Complex[-1.0751003101273762`*^-10, -1.204355536215455*^-10], 
        Complex[-6.69196686393611*^-11, 5.47164652100199*^-12], 
        Complex[-1.4126697682751645`*^-11, 2.2255101246638923`*^-11], 
        Complex[4.946188587723148*^-9, 1.958723247374923*^-9], 
        Complex[5.425137626533053*^-9, -3.300599556179668*^-9], 
        Complex[5.38340204820839*^-10, -5.332926454205089*^-9], 
        Complex[-2.708441882542486*^-9, -2.511952720944868*^-9], 
        Complex[-2.170726608569492*^-9, 3.857010554637304*^-10], 
        Complex[-5.344172685710894*^-10, 1.0486328270991367`*^-9], 
        Complex[2.506473629036608*^-10, 5.158454918908516*^-10], 
        Complex[2.5405714161952945`*^-10, 5.014457895552129*^-11], 
        Complex[8.079062544167899*^-11, -7.211992128227769*^-11], 
        Complex[-3.869038359256293*^-12, -4.731935148964897*^-11], 
        Complex[-1.650482481954844*^-11, -1.047663939824807*^-11], 
        Complex[7.202498716633791*^-10, 1.1838620871019426`*^-9], 
        Complex[1.645776833970612*^-9, 1.6613539404626824`*^-10], 
        Complex[9.494288863960215*^-10, -1.0236948088112897`*^-9], 
        Complex[-1.683337411701813*^-10, -9.473827616023305*^-10], 
        Complex[-5.11680426231137*^-10, -2.6076892569174167`*^-10], 
        Complex[-2.757310135953489*^-10, 1.339766509834131*^-10], 
        Complex[-2.895098615837066*^-11, 1.4667995910358218`*^-10], 
        Complex[4.451338181143126*^-11, 4.986505660473474*^-11], 
        Complex[3.097778714821969*^-11, -2.532880163997102*^-12], 
        Complex[7.229568026380198*^-12, -1.138941117094925*^-11], 
        Complex[-3.542018502268624*^-11, 3.508807999640029*^-10], 
        Complex[3.086555982419686*^-10, 2.862635801182332*^-10], 
        Complex[3.498442699612457*^-10, -6.21613535483001*^-11], 
        Complex[1.1119224352152426`*^-10, -2.18181266835245*^-10], 
        Complex[-6.387086227254903*^-11, -1.314496030789665*^-10], 
        Complex[-7.660111036928762*^-11, -1.5119159424165046`*^-11], 
        Complex[-2.812768540016449*^-11, 2.510893368905668*^-11], 
        Complex[1.527384207802223*^-12, 1.868030851020697*^-11], 
        Complex[7.284691861544923*^-12, 4.624047246497626*^-12], 
        Complex[-5.969008267423393*^-11, 6.435914121285994*^-11], 
        Complex[1.833038312879504*^-11, 1.0316344702533598`*^-10], 
        Complex[7.87978138058844*^-11, 4.015791927857787*^-11], 
        Complex[5.48182739280915*^-11, -2.663599084416136*^-11], 
        Complex[7.049344429792882*^-12, -3.571545186795383*^-11], 
        Complex[-1.2824486269918721`*^-11, -1.436632553521052*^-11], 
        Complex[-1.0305501870055659`*^-11, 8.426231719459378*^-13], 
        Complex[-2.727114285505105*^-12, 4.2962768722073706`*^-12], 
        Complex[-2.1058150443226366`*^-11, 3.741673787939092*^-12], 
        Complex[-1.15925927527911*^-11, 2.274696950619068*^-11], 
        Complex[9.417244874764641*^-12, 1.9381186613747598`*^-11], 
        Complex[1.4580772168236532`*^-11, 2.8778828123539*^-12], 
        Complex[6.557300470081066*^-12, -5.853550348708139*^-12], 
        Complex[-4.213115859729691*^-13, -5.152750935027829*^-12], 
        Complex[-2.320254698111893*^-12, -1.4728100449401993`*^-12], 
        Complex[-4.549393901238137*^-12, -2.318518550558223*^-12], 
        Complex[-5.481827392809148*^-12, 2.663599084416135*^-12], 
        Complex[-9.969278498452329*^-13, 5.050927641794378*^-12], 
        Complex[2.341420139483254*^-12, 2.6229201880324252`*^-12], 
        Complex[2.304380272369566*^-12, -1.88416269188761*^-13], 
        Complex[7.2152661962981*^-13, -1.136688016733913*^-12], 
        Complex[-5.223747579932974*^-13, -1.0750748017723584`*^-12], 
        Complex[-1.400875277011387*^-12, -2.764980369657735*^-13], 
        Complex[-8.909616873910022*^-13, 7.953408753661575*^-13], 
        Complex[7.390294102091095*^-14, 9.0385230581159*^-13], 
        Complex[4.984706702633401*^-13, 3.164103539449087*^-13], 
        Complex[5.321207202419761*^-14, -2.695985727612055*^-13], 
        Complex[-2.164643684695107*^-13, -2.4248905716411694`*^-13], 
        Complex[-3.012841019371966*^-13, 2.463431367363696*^-14], 
        Complex[-1.217864020163185*^-13, 1.918614504397818*^-13], 
        Complex[4.582612435076995*^-14, -4.09079204769269*^-14], 
        Complex[-6.5837972660764306`*^-15, -8.052156325220463*^-14], 
        Complex[-6.280140139887987*^-14, -3.986395756115017*^-14], 
        Complex[1.495247891866302*^-14, -1.222580459813209*^-15], 
        Complex[1.046878813405198*^-14, -1.649245599255702*^-14], 
        Complex[3.011096725261577*^-15, 1.911330470254231*^-15]}}], 
     Wolfram`QuantumFramework`QuantumBasis[<|
      "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
            
            Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
             False], 1} -> 1|>], "Output" -> 
       Wolfram`QuantumFramework`QuditBasis[<|{
            Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[2, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[3, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[4, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{5}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[5, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{6}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[6, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{7}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[7, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{8}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[8, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{9}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[9, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{10}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[10, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{11}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[11, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{12}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[12, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{13}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[13, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{14}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[14, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{15}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[15, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{16}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[16, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{17}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[17, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{18}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[18, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{19}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[19, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{20}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[20, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{21}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[21, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{22}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[22, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{23}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[23, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{24}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[24, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{25}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[25, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{26}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[26, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{27}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[27, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{28}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[28, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{29}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[29, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{30}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[30, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{31}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[31, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{32}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[32, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{33}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[33, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{34}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[34, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{35}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[35, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{36}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[36, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{37}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[37, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{38}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[38, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{39}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[39, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{40}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[2, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[3, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[4, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{5}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[5, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{6}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[6, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{7}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[7, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{8}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[8, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{9}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[9, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{10}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[10, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{11}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[11, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{12}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[12, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{13}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[13, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{14}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[14, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{15}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[15, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{16}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[16, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{17}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[17, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{18}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[18, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{19}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[19, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{20}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[20, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{21}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[21, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{22}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[22, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{23}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[23, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{24}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[24, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{25}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[25, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{26}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[26, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{27}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[27, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{28}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[28, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{29}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[29, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{30}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[30, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{31}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[31, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{32}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[32, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{33}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[33, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{34}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[34, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{35}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[35, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{36}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[36, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{37}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[37, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{38}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[38, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{39}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[39, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{40}}}, {1}}]|>], 
       "Picture" -> "Schrodinger", "Label" -> None, "ParameterSpec" -> {}|>]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.926461896396979*^9, 3.926461904524818*^9}, {
  3.9264619470327415`*^9, 3.9264619876095333`*^9}},
 CellLabel->"Out[85]=",ExpressionUUID->"40ccd12b-9cfa-b34a-98e6-cfd521b14457"]
}, Open  ]],

Cell["\<\
Really close to zero , so it is a product state (not entangled)\
\>", "Text",
 CellChangeTimes->{{3.926446389740526*^9, 3.926446410175516*^9}, {
  3.926446520705206*^9, 
  3.926446524498853*^9}},ExpressionUUID->"6dfa2768-f2cd-6548-bbb3-\
5c1071b27651"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumEntanglementMonotone", "[", 
  RowBox[{"cohBS", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "2", "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.926445932455353*^9, 3.9264459380558205`*^9}, {
  3.926446207454609*^9, 3.926446266831781*^9}, {3.926446322089485*^9, 
  3.926446337258074*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"a31e82a0-b791-5941-b657-7902b609544b"],

Cell[BoxData["2.038355294343197`*^-9"], "Output",
 CellChangeTimes->{
  3.92644594593341*^9, 3.926446214361833*^9, 3.926446267816883*^9, {
   3.926446327644556*^9, 3.926446337993574*^9}, 3.926460683241625*^9, 
   3.926461951286461*^9, 3.926461990609535*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"b0cad6d4-485a-b348-a8e5-546af33c94a3"]
}, Open  ]],

Cell[TextData[{
 "The theoretical result represents that a coherent state resembles a \
classical field that divides evenly in a 50:50 BS (average photon number ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"|", "\[Alpha]", 
     SuperscriptBox["|", "2"], 
     RowBox[{
      RowBox[{"/", "2"}], " ", "in", " ", "each", " ", "output", " ", "mode", 
      " ", "and", " ", "phase", " ", "shift", " ", 
      RowBox[{"\[Pi]", "/", "2"}], " ", "for", " ", "the", " ", "reflected", 
      " ", "wave"}]}], ")"}], TraditionalForm]],ExpressionUUID->
  "7c05d9b3-a4c7-924b-ba37-997f912f3c20"],
 ":\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox[Cell[
      "|0\[RightAngleBracket]",ExpressionUUID->
       "6ff080b2-faf3-0049-945a-4e9618d8a4fd"], "0"], 
     SubscriptBox[Cell[
      "|\[Alpha]\[RightAngleBracket]",ExpressionUUID->
       "eb6736c0-b514-4e4f-ae0e-614ed37a2948"], "1"]}], " ", 
    OverscriptBox["\[DoubleRightArrow]", "BS"]}], TraditionalForm]],
  FontSize->18,ExpressionUUID->"51dd3227-a5ff-3f49-8bb3-9ce7f62ce080"],
 StyleBox["   ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox[Cell[TextData[{
       "|",
       Cell[BoxData[
        FormBox[
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}], 
          SqrtBox["2"]], TraditionalForm]],ExpressionUUID->
        "cb5ee934-d9f4-8c43-98ca-945db8e5f168"],
       "\[RightAngleBracket]"
      }],ExpressionUUID->"d769391c-052d-9f4c-81a8-be2f40d92875"], "2"], " ", 
     SubscriptBox[Cell[TextData[{
       "|",
       Cell[BoxData[
        FormBox[
         FractionBox["\[Alpha]", 
          SqrtBox["2"]], TraditionalForm]],ExpressionUUID->
        "1cf9d1aa-157d-bc4b-be5a-b40870e89abe"],
       "\[RightAngleBracket]"
      }],ExpressionUUID->"14aacbcc-df2c-304d-abcc-bb8bdfb06d56"], "3"]}], " ",
     ")"}], TraditionalForm]],
  FontSize->18,ExpressionUUID->"529b6a4e-9486-0b48-afee-893d0dc6a42a"]
}], "Text",
 CellChangeTimes->{{3.926446429580402*^9, 3.926446446864702*^9}, {
   3.926446543712391*^9, 3.926446679286932*^9}, {3.926446769609827*^9, 
   3.926446773130485*^9}, {3.926446882661115*^9, 3.926446987193007*^9}, {
   3.9264470209325047`*^9, 3.9264472081798763`*^9}, 
   3.9264607014638233`*^9},ExpressionUUID->"9aab44e5-f923-6945-a411-\
39c55d5173b7"],

Cell["Comparing the states:", "Text",
 CellChangeTimes->{{3.926447193191534*^9, 
  3.92644720324374*^9}},ExpressionUUID->"ce610fce-797a-324d-90d8-\
cad506830886"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"cohBS", " ", "-", " ", 
    RowBox[{"QuantumTensorProduct", "[", 
     RowBox[{
      RowBox[{"coh", "[", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"\[Alpha]coh", "/", 
         SqrtBox["2"]}]}], "]"}], ",", 
      RowBox[{"coh", "[", 
       RowBox[{"\[Alpha]coh", "/", 
        SqrtBox["2"]}], "]"}]}], "]"}]}], ")"}], "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.926444721826451*^9, 3.9264447495503006`*^9}, {
  3.926445405143175*^9, 3.926445413446504*^9}, {3.926446450449722*^9, 
  3.926446463645517*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"3751a749-dfbd-1744-ad6e-60acbd6bcf72"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox["0",
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{"None"}, {
        TemplateBox[{"\"QuantumState: \"", 
          RowBox[{
            RowBox[{"{", "}"}], "\[Rule]", 
            RowBox[{"{", 
              RowBox[{"40", ",", "40"}], "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumState[
    SparseArray[Automatic, {1600}, 0, {1, {{0, 0}, {}}, {}}], 
    Wolfram`QuantumFramework`QuantumBasis[<|
     "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
           
           Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
            False], 1} -> 1|>], "Output" -> 
      Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[2, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[3, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[4, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{5}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[5, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{6}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[6, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{7}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[7, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{8}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[8, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{9}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[9, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{10}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[10, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{11}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[11, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{12}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[12, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{13}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[13, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{14}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[14, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{15}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[15, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{16}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[16, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{17}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[17, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{18}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[18, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{19}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[19, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{20}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[20, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{21}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[21, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{22}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[22, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{23}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[23, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{24}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[24, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{25}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[25, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{26}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[26, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{27}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[27, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{28}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[28, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{29}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[29, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{30}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[30, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{31}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[31, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{32}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[32, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{33}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[33, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{34}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[34, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{35}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[35, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{36}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[36, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{37}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[37, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{38}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[38, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{39}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[39, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{40}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[2, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[3, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[4, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{5}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[5, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{6}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[6, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{7}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[7, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{8}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[8, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{9}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[9, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{10}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[10, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{11}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[11, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{12}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[12, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{13}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[13, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{14}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[14, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{15}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[15, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{16}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[16, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{17}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[17, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{18}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[18, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{19}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[19, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{20}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[20, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{21}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[21, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{22}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[22, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{23}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[23, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{24}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[24, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{25}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[25, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{26}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[26, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{27}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[27, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{28}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[28, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{29}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[29, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{30}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[30, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{31}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[31, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{32}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[32, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{33}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[33, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{34}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[34, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{35}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[35, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{36}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[36, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{37}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[37, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{38}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[38, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{39}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[39, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{40}}}, {1}}]|>], 
      "Picture" -> "Schrodinger", "Label" -> None, "ParameterSpec" -> {}|>]]],
   TraditionalForm]], "Output",
 CellChangeTimes->{{3.9264447499664745`*^9, 3.926444754008936*^9}, 
   3.92644541555114*^9, {3.926445459044388*^9, 3.926445521291349*^9}, 
   3.9264455534829063`*^9, 3.926445592948681*^9, 3.926445769748058*^9, 
   3.926446220999637*^9, {3.9264464643907375`*^9, 3.926446467541305*^9}, {
   3.926460690132253*^9, 3.926460693979027*^9}, {3.9264619946564064`*^9, 
   3.9264619970470314`*^9}},
 CellLabel->"Out[87]=",ExpressionUUID->"61c52f97-c735-1248-a62a-923aa6ff6fc0"]
}, Open  ]],

Cell[TextData[{
 "Also the beam splitter causes the transformation that the N photons are \
binomially distributed over the two modes\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox[Cell[
      "|0\[RightAngleBracket]",ExpressionUUID->
       "15a3c7b1-2a10-584f-b767-d7209ed960a2"], "0"], 
     SubscriptBox[Cell[
      "|N\[RightAngleBracket]",ExpressionUUID->
       "a5345faa-29b8-7244-9b36-3ebd846f7f05"], "1"]}], " ", 
    OverscriptBox["\[DoubleRightArrow]", "BS"]}], TraditionalForm]],
  FontSize->18,ExpressionUUID->"1b371c1b-0309-234b-8d2c-fa6201eccc23"],
 "  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "/", 
     SuperscriptBox["2", 
      RowBox[{"N", "/", "2"}]]}], " ", 
    RowBox[{
     StyleBox[
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "0"}], "N"],
      FontSize->24], 
     StyleBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"[", 
         FractionBox[
          RowBox[{"N", "!"}], 
          RowBox[{
           RowBox[{"n", "!"}], " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"N", "-", "n"}], ")"}], "!"}]}]], "]"}], 
        RowBox[{"1", "/", "2"}]], Cell[TextData[Cell[BoxData[
        FormBox[
         SubscriptBox[
          RowBox[{
           RowBox[{
            SubscriptBox[
             RowBox[{
              RowBox[{"|", "n"}], " ", "\[RightAngleBracket]"}], "2"], "|", 
            RowBox[{"N", "-", "n"}]}], " ", "\[RightAngleBracket]"}], "3"], 
         TraditionalForm]],ExpressionUUID->
        "2097c717-2104-2548-a4f2-c8171b504dca"]],ExpressionUUID->
        "fa6ae10f-0b0d-3448-a463-31c9ec58a560"]}],
      FontSize->18]}]}], TraditionalForm]],ExpressionUUID->
  "9a0e5783-4427-524d-b2d7-05361199b27f"],
 "             ",
 StyleBox["    ",
  FontSize->18]
}], "Text",
 CellChangeTimes->{{3.9264491548937035`*^9, 3.926449346856308*^9}, {
  3.926449400436724*^9, 3.926449415855652*^9}, {3.926460728783287*^9, 
  3.926460728783287*^9}},ExpressionUUID->"886c5ee5-92c2-8541-91a2-\
a98c3652e013"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Np", " ", "=", " ", "8"}], ";"}]], "Input",
 CellChangeTimes->{{3.9264478713278637`*^9, 3.926447895721594*^9}, {
  3.926448387084669*^9, 3.926448388209068*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"4a2deb9e-5ae0-1045-9945-0d7385bfbc27"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     SuperscriptBox["a1", "Np"], ")"}], "[", "\"\<Dagger\>\"", "]"}], " ", 
   "too", " ", "slow"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.92646160012919*^9, 
  3.9264616283709316`*^9}},ExpressionUUID->"adf3092d-0ee9-4b49-97df-\
5434e92dd990"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"QuantumState", "[", 
      RowBox[{
       RowBox[{"MatrixPower", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"a1", "[", "\"\<Dagger\>\"", "]"}], "[", "\"\<Matrix\>\"", 
          "]"}], ",", "Np", ",", 
         RowBox[{"PadRight", "[", 
          RowBox[{
           RowBox[{"{", "1", "}"}], ",", 
           SuperscriptBox[
            RowBox[{"fockBasis", "[", "\"\<Dimension\>\"", "]"}], "2"]}], 
          "]"}]}], "]"}], ",", 
       RowBox[{"a1", "[", "\"\<OutputDimensions\>\"", "]"}]}], "]"}], "//", 
     "Simplify"}], " ", ")"}], "[", "\"\<Normalize\>\"", "]"}], "//", 
  "RepeatedTiming"}]], "Input",
 CellChangeTimes->{{3.926447900108053*^9, 3.9264479481181126`*^9}, {
  3.9264481135118194`*^9, 3.926448251564817*^9}, {3.926448306747343*^9, 
  3.926448344111334*^9}, {3.926448458702579*^9, 3.926448485532474*^9}, {
  3.926460879265852*^9, 3.926460884860037*^9}, {3.926461039071792*^9, 
  3.926461085546583*^9}, {3.926461123257299*^9, 3.926461246825199*^9}, {
  3.9264612777563*^9, 3.9264613930736246`*^9}, {3.9264616742889*^9, 
  3.926461707309681*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"352a0394-5f1b-9942-8a39-52fcd9c243d5"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.03697298125`", ",", 
    InterpretationBox[
     TooltipBox[
      StyleBox[
       RowBox[{
        RowBox[{
         FractionBox["1", "16"], 
         FormBox[
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              RowBox[{
                FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                FormBox["8", TraditionalForm]}]},
             "Ket"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[{0, 8}, "Dual" -> False]],
          TraditionalForm]}], "+", 
        RowBox[{
         FractionBox["\[ImaginaryI]", 
          RowBox[{"4", " ", 
           SqrtBox["2"]}]], 
         FormBox[
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              RowBox[{
                FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                FormBox["7", TraditionalForm]}]},
             "Ket"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[{1, 7}, "Dual" -> False]],
          TraditionalForm], 
         RowBox[{"-", 
          FractionBox[
           SqrtBox["7"], "8"]}], 
         FormBox[
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              RowBox[{
                FormBox["2", TraditionalForm], "\[InvisibleSpace]", 
                FormBox["6", TraditionalForm]}]},
             "Ket"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[{2, 6}, "Dual" -> False]],
          TraditionalForm], 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "4"]}], " ", "\[ImaginaryI]", " ", 
          SqrtBox[
           FractionBox["7", "2"]]}], 
         FormBox[
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              RowBox[{
                FormBox["3", TraditionalForm], "\[InvisibleSpace]", 
                FormBox["5", TraditionalForm]}]},
             "Ket"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[{3, 5}, "Dual" -> False]],
          TraditionalForm]}], "+", 
        RowBox[{
         FractionBox[
          SqrtBox[
           FractionBox["35", "2"]], "8"], 
         FormBox[
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              RowBox[{
                FormBox["4", TraditionalForm], "\[InvisibleSpace]", 
                FormBox["4", TraditionalForm]}]},
             "Ket"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[{4, 4}, "Dual" -> False]],
          TraditionalForm]}], "+", 
        RowBox[{
         RowBox[{
          FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", 
          SqrtBox[
           FractionBox["7", "2"]]}], 
         FormBox[
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              RowBox[{
                FormBox["5", TraditionalForm], "\[InvisibleSpace]", 
                FormBox["3", TraditionalForm]}]},
             "Ket"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[{5, 3}, "Dual" -> False]],
          TraditionalForm], 
         RowBox[{"-", 
          FractionBox[
           SqrtBox["7"], "8"]}], 
         FormBox[
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              RowBox[{
                FormBox["6", TraditionalForm], "\[InvisibleSpace]", 
                FormBox["2", TraditionalForm]}]},
             "Ket"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[{6, 2}, "Dual" -> False]],
          TraditionalForm], 
         RowBox[{"-", 
          FractionBox["\[ImaginaryI]", 
           RowBox[{"4", " ", 
            SqrtBox["2"]}]]}], 
         FormBox[
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              RowBox[{
                FormBox["7", TraditionalForm], "\[InvisibleSpace]", 
                FormBox["1", TraditionalForm]}]},
             "Ket"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[{7, 1}, "Dual" -> False]],
          TraditionalForm]}], "+", 
        RowBox[{
         FractionBox["1", "16"], 
         FormBox[
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              RowBox[{
                FormBox["8", TraditionalForm], "\[InvisibleSpace]", 
                FormBox["0", TraditionalForm]}]},
             "Ket"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[{8, 0}, "Dual" -> False]],
          TraditionalForm]}]}],
       ShowStringCharacters->False],
      TagBox[
       GridBox[{{"None"}, {
          TemplateBox[{"\"QuantumState: \"", 
            RowBox[{
              RowBox[{"{", "}"}], "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"40", ",", "40"}], "}"}]}]}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
     Wolfram`QuantumFramework`QuantumState[
      SparseArray[
      Automatic, {1600}, 0, {
       1, {{0, 9}, {{9}, {48}, {87}, {126}, {165}, {204}, {243}, {282}, {
         321}}}, {
         Rational[1, 16], Complex[0, 
           Rational[1, 4]] 2^Rational[-1, 2], Rational[-1, 8] 
         7^Rational[1, 2], Complex[0, 
           Rational[-1, 4]] Rational[7, 2]^Rational[1, 2], Rational[1, 8] 
         Rational[35, 2]^Rational[1, 2], Complex[0, 
           Rational[1, 4]] Rational[7, 2]^Rational[1, 2], Rational[-1, 8] 
         7^Rational[1, 2], Complex[0, 
           Rational[-1, 4]] 2^Rational[-1, 2], 
         Rational[1, 16]}}], 
      Wolfram`QuantumFramework`QuantumBasis[<|
       "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
             
             Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
              False], 1} -> 1|>], "Output" -> 
        Wolfram`QuantumFramework`QuditBasis[<|{
             Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[2, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[3, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[4, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{5}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[5, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{6}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[6, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{7}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[7, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{8}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[8, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{9}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[9, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{10}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[10, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{11}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[11, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{12}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[12, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{13}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[13, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{14}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[14, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{15}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[15, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{16}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[16, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{17}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[17, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{18}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[18, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{19}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[19, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{20}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[20, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{21}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[21, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{22}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[22, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{23}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[23, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{24}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[24, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{25}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[25, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{26}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[26, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{27}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[27, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{28}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[28, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{29}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[29, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{30}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[30, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{31}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[31, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{32}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[32, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{33}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[33, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{34}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[34, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{35}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[35, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{36}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[36, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{37}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[37, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{38}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[38, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{39}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[39, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{40}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[2, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[3, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[4, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{5}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[5, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{6}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[6, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{7}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[7, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{8}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[8, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{9}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[9, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{10}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[10, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{11}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[11, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{12}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[12, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{13}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[13, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{14}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[14, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{15}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[15, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{16}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[16, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{17}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[17, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{18}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[18, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{19}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[19, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{20}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[20, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{21}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[21, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{22}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[22, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{23}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[23, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{24}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[24, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{25}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[25, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{26}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[26, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{27}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[27, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{28}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[28, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{29}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[29, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{30}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[30, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{31}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[31, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{32}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[32, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{33}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[33, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{34}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[34, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{35}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[35, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{36}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[36, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{37}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[37, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{38}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[38, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{39}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[39, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{40}}}, {1}}]|>], 
        "Picture" -> "Schrodinger", "Label" -> None, 
        "ParameterSpec" -> {}|>]]]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.926447930107517*^9, 3.926447938363954*^9}, 
   3.926448098089555*^9, {3.926448142869661*^9, 3.92644823275436*^9}, {
   3.926448310015238*^9, 3.926448349849766*^9}, {3.9264483944779*^9, 
   3.926448396316931*^9}, {3.926448466202892*^9, 3.926448489551544*^9}, {
   3.926448739043789*^9, 3.9264487419193497`*^9}, {3.926460749271347*^9, 
   3.926460752786972*^9}, 3.9264608864377193`*^9, {3.926461060731685*^9, 
   3.926461086436756*^9}, {3.926461126303766*^9, 3.9264613972142124`*^9}, {
   3.926461449523735*^9, 3.9264614804360447`*^9}, 3.926461532492855*^9, 
   3.9264616371361523`*^9, {3.926461688916508*^9, 3.926461715671795*^9}},
 CellLabel->"Out[72]=",ExpressionUUID->"6ba0fcff-cb4d-e74d-8376-c1aef6cda676"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"1", "/", 
     SuperscriptBox["2", 
      RowBox[{"Np", "/", "2"}]]}], 
    SuperscriptBox["\[ImaginaryI]", "n"], 
    SqrtBox[
     FractionBox[
      RowBox[{"Np", "!"}], 
      RowBox[{
       RowBox[{"n", "!"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Np", "-", "n"}], ")"}], "!"}]}]]]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "Np"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.926448564118978*^9, 3.926448649776642*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"4d9e1da9-1a11-5948-be7a-77ba5af37e66"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "16"], ",", 
   FractionBox["\[ImaginaryI]", 
    RowBox[{"4", " ", 
     SqrtBox["2"]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     SqrtBox["7"], "8"]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "4"]}], " ", "\[ImaginaryI]", " ", 
    SqrtBox[
     FractionBox["7", "2"]]}], ",", 
   FractionBox[
    SqrtBox[
     FractionBox["35", "2"]], "8"], ",", 
   RowBox[{
    FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", 
    SqrtBox[
     FractionBox["7", "2"]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     SqrtBox["7"], "8"]}], ",", 
   RowBox[{"-", 
    FractionBox["\[ImaginaryI]", 
     RowBox[{"4", " ", 
      SqrtBox["2"]}]]}], ",", 
   FractionBox["1", "16"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.926448651183191*^9, 3.926448744622656*^9, 3.926460756677597*^9, {
   3.926461417313368*^9, 3.926461451586231*^9}, 3.926461534695984*^9, 
   3.926461720421797*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"4bae1c2a-9340-c64f-b62e-346646d8ca12"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"%%", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "[", "\"\<AmplitudeList\>\"", "]"}], " ", 
  "==", " ", "%"}]], "Input",
 CellChangeTimes->{{3.926448722693964*^9, 3.926448731538652*^9}, {
  3.926461463588962*^9, 3.9264614854516983`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"1bf9ecae-f4f7-134a-b6aa-fe0ada629231"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.926448732384579*^9, 3.9264487521429443`*^9}, 
   3.926460762337122*^9, 3.926461440023737*^9, {3.9264614715454597`*^9, 
   3.926461485873548*^9}, 3.926461536930359*^9, 3.926461722812458*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"21052eca-f079-6c45-ba5f-0640246433a8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Single photon Mach-",
 StyleBox["Zehnder",
  IgnoreSpellCheck->True],
 "  Interferometer (Unbalanced BS)"
}], "Section",
 CellChangeTimes->{{3.924791873812699*^9, 3.924791896241991*^9}, {
  3.924873397204767*^9, 3.9248733999145184`*^9}, {3.9249556421217556`*^9, 
  3.924955647399626*^9}},ExpressionUUID->"e260609f-1da8-eb4d-8806-\
f77271dcdc43"],

Cell["\<\
What is the probability of finding a photon in output mode 5?\
\>", "Text",
 CellChangeTimes->{{3.9248734079145184`*^9, 
  3.924873421231432*^9}},ExpressionUUID->"d4668f41-2877-0c4d-a657-\
062dc9adfb91"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
V104f97ZyelfM382eXl6eXu9GvPJ55W3r4/v6zGffF/7vXnz1s/v7+nNmE3+
b/0DAwJoIv7+AfTXUU7sR/EPDgwKCQoODgqiP4zZFBRMP+dhoaH/TCFjM0WE
hUdGRIz5FBUZGRMdM+YTbRTEx8XFx8WP7fQu/l1iQmJSYmJKcsrLFy83b1Qc
GFeW/a06ft6Bq0D6+/kNHa7tV6omel3ZWVn0v1fnxO4wBwCO6O3tLS4uptXp
m9dvXF1cXJ1d/hUe7L96MO1BteDu6eXx9+RJ0yc5Qbd7eb365kS9QU9h89L6
k2qyfGrp5OAYFBiYmJBAK+G42Lgxn2Kio6MiIqMjogamyIGJPu+oVQ4fPCQm
JMx8aZpvJu/a1auvXLxEn4ZR4ZHMbH/fZegU+c8UER4eHhr2r4/jUUzsi/kO
TKEhIfRZHzR2E2UD+w+Bb/3ejuHkT9Pbt1RQ1GY+3r5UfWM6+Qz8zHh4jsn0
yvOfn0P6cR2zOHdxpdRnJreByXXsJxdX178nl1FO7Ad0+3v652HHZqLHdGH/
dl+9fGXD2nXz+OYw16qjP2xYu/a1j8/g12Z/pWoqLy93cnA4c/Jk3ZCLbwLA
r6q/v582kd6/f19VVVVaUvKlqbSstLSsrKy87DN0c2npPxNb+TenioqK1JRU
T4+/j9A9fvjI6qklrcypagry82tqapqamt6P8TGfvw0cm2KOVQ1ObImJiVcu
XZZbspSqiVbytI28acOG+/fu0aI2vW9iH42q/2T6R109rSrH42gdvRXVY4t9
yJL+Vx44zloxxlNFeUX53z8PYzvRD2BJSXFxSXHJWEzFg1NxUVFRYeHYTgMK
CgtIfv7YTvl5+XnjITc3Nyc3Z+zk5eYlvEug1rWzsX3l6amnoystLsH1+zRm
AMxdO1S82CeH02rn4b0Hv0w10U/oMysrXS2tr10ZHABgNKgG3vr5DexfevLU
0d7B/+3b9PR0zl5hjT6Vrly6JCEqNoubZ8bvf9CmsbKSEq38KSY5uFQAPx3a
kggPC3d3dWtpbo6JjjY1NhYXEWWGR6Nfrt0qKoH+/lRKD+7eW/GrVFNpaemL
58/1dHRQTQAwHqoqKwP8/W1eWtOGZ8K7d7W1NZPhHMrsrOy9u/fQpjH/rNnM
obo1q+RdnZ0bGho4vWgAP436+rqIsHAPN/cm9uWT6BfcQE9PREBwcADM9WsU
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
xMJ+x5hUE70P9DJ9fX3U9u3j45k5m2cmreolRcWOmx6rqMQFquDXN+bVRNJS
04z0Bi65wsvFTb9Qc2fziQoODE1w8c8LtWM9HHdfX19nZ+f7xkarp0+VFDet
WbXq8cNH1VXVY/ssADA1faea/j3yQFtbm421tZ2tXWZmJicW9jvGpJoYtNYN
8Pc/fPDg/Dn8tJ6nSUZK2sTIOCcnZ/QPDjCZjUc10W9NdmamnraOhIgoM44T
TTN+/+PsqdOlpWM2ai6ztLTYfm/eGOnryy1ZyjeTd83KVfm5udhRDABj4htn
g98wM5OWkHxmZTVYTTTb+TNngoOCJ+dlR8awmj6wEzE4KOjwgYOC8+YxXwJa
KCXt4+2Da9XBr208qukD+1t1iQmJ2hqawvMFuKdN5+UauASk4voNtBU2Vs/S
3t4eFBhw5tSpHcrbRAQF6dd28YKF165c6fo4ThQAwCh9rZq6u7tdnJ11tbXf
+vkxVxhhsVhpqakmhkaJCQkcWtjvGNtqIt0slv/bt+qHDosJCQvwz9u7a3dY
aCiutwK/tnGqJkZwYJCOppaEiChthgx+qy40JHSUG2Itzc3x8fEO9vaqe/bO
4uaZ8fsflEzT/vvbAVXVrMxMjPgNAGPla9XU19/f2NhYUlLS9P49s3O7srLS
+sXLG2bX8/PzJ2bZ+tmGP/+YVxPjXVy8lobmnp274mPjsJ8ffnnjWk0kKTFJ
X/eo8HwBXi5u7mnTZ8/k3bB2XXJy8gjCiRaP7lVdXU0bdzt37Jg/Zy73H3+P
tzaLi1to3vyrly9PzgsZAMBP6mvVRH+lDTSKhMHNtOTEZBNDI/+3/rQuHe+l
oiellSEtVUdHx/DvNR7VxJwcTpurSYmJrEl5XBJgbI13NdFaJSM93eDowMnh
zLFv5lt1r319f+j3ndYSdXW1Hm7uWkfUpcUlBOfOo8fhm8nLnDQ1m4fn7OnT
OdnZY778ADCVfa2aPhcVGUlbiEVFRX3jv+1WUlxy7coVjSPqgQEBtG4c5qp7
nPY1fWAfr5ycp3IBjLnxrqYP7GPfKckpRw4eEuCfN+O33yly5vDO2rVDxc3V
rWN45yA1NDQE+gcYGRgorJKXFBWTFBFdLisnPF+AHofCiaalMjKe7u592DkM
AGNqoJoMv19NtbW1vt4+d27dbmlpGe9FamxspK1O9cOHNY+oX7l0OTwsfJjh
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
L6+ZvQD0s0c/w9evXhPknys0d965M2eozCd4qQAAJhVKnct/XZQUFXv+7FlE
eHhIcHBcXBxVx1FtnfDwcPqYHnpGTWdnp81La8qqivLyoaOycKqaVsotU92z
h7Jh8Ma+3r7GhkZDPf0FEpKe7u7MoJ1O9g4yUtLnzpwtLysf+gipKakGevqL
pBfEx8UPcxxRppo2bdpUOuQI4FDv378/efIkNze3ra3t0ENmWVlZ27dv5+Hh
iYiIYN7S169f79u379atW4OH9phqsrGx+dqxtvj4eHl5+ZUrV+bm5g49S9/e
3n7evHkaGhrV1dXDeRUwOXG2muiXt6Ky8sihQ/v37hu4/G5fH/0w/3Xhgoig
kPB8gSsXL1FQTeRYKAAAk1BrayvFkqmx8YN79155vUpOSqqpqTluYnrv7l3a
rqTqGFx7U1fk5uSePnmK/tXDze39kFHNOVhNanv3Nf77NNSO9g4j/YFqCgoM
ZPLDzcVloZT0AVW1d+/eDZ2TIjA6Kvrl8xdUU8Nccqaali9f7urqGhYWFhkZ
mZ6eTtkz+GlCNXX48OEZM2bExsYO/eCjntHS0po2bZqnpydzjv2dO3cEBARo
5rKyMmYepprOnTsXEBBAD075WlhYyOxT+sDeFeDn5ycqKqqpqflJHdH8MjIy
69atG84FWGHS4mw1VVZWmF27Nn8O/3alrQFv39LGyJ3bt2lzQ0xI+OSx49lZ
WTj+CwDwgX36d3paWlBAYEpKCjNQcGJCYkZ6Bm1pDp2NGiMzI9P65UvF9Ruo
VTIzMv5JBY5Uk6Xl8qWy25S2xsfFlZWWFhUWFeQXUMPYvHy5W0Xl8IGDlR93
lFF+HD54UEpM4tTJkz7e3kmJifn5+RSHHe3tH37wg4CpJm5ubiEhIQoYSUlJ
RUXFM2fOxMfHM4css7Ozt2/fTtWUmJg49I4NDQ36+vrTp0+3srJi9oBRwt26
dcvDw2PwTCemmvj5+UVEROjBly5dum/fPktLy4qKCuboiYODw/z58/X09Ibu
XiPh4eHLli0TFhbOzc0dzVsKnMXBaqKf3tCQ0EXS0vP45ly+eOldfLzV06cL
JCXFhYVNjU1SU1IncmEAACazwV0Zn/janPfu3j2qrRMcFDx48I4j1fTMymqJ
zKJF0guMDQ3Pnzl79tTpE8eOqR8+LCYsrKyk5OnuPvgS6DPI/63/jq3KEqKi
9EGgtGnTMROTJ48eBQcGFRUVUQ0O/xOK4sfZ2ZnqhWqH/nvt2jUFBYV58+Yd
PHiQKZbU1NQNGzZQHX1eTQYGBnT77du3mUyid496deiV/tLS0qip6PHpwamg
jIyMKIQon+7fv0+hxWKxqKDouT6vpoiIiOXLl0+bNg1n6v7UOFhNxUVF5jdv
Cc6dt3nDxhfPnls+eSrIP1dEUNDUyIi2SiZySQAAfjFv37y5f/duRHgEZ6vp
+bNnixYsnD+Hf+mixauWLadphazckoUydIvc4iU3zK5TkzB7w+i/7W3tZWVl
zo6Oulraq5avWLxwoYy0tIyU9EG1/b7ePsP/zj59llFlMS+c/kv98+7dO8ok
fn7+Fy9eDFwR/nvVZGFh8bWv0dG7N7jMVFOURg8fPqRwUlRUpByiaqKm+kY1
cXNzZ2ZmjuCdhEmCg9Xk/cp72VJZ/tl8N66ZmRgZS4qJiwgInD55MikxsYvV
1YvTmQAAho2ioqSkpLCwkPmrrbW1hbl5JfuwEXMLZ/Y1WVrJLVm6bo2Cg519
wNu3b16/9vXx8XR3t3zyRG3vvi0bFW2sXzb9+yBjQ319WmrqWz8/e1vbexZ3
9+9TXS4rRzMnJCQM53J7XzQwvJW5+dy5c0+cOEFplJeXt2vXri8eoWOqydnZ
efgjUlZUVGzevFlQUJAZ6NLFxUVAQOBr1bRy5cpvfEEPJj9OVVN2dvbpk6cE
+OfKLVmyX1VVdvESCRFRU2MTvzd+Tg6Od+9YODs6Decq3gAAQKg9qDSeW1ml
pqQU5Of7vPIOCggY+t26SXU2eGtrq4X5Hdpwpn+i6mhra8vLzc1Izxi62md1
dVHGhAaH6GppS4mJ0+dCTU3NyBaD3gc7OzsKm6NHj9KD0DNqampycXFR5wx9
N+h2dXX1adOmhYaGDv8S883NzWpqanx8fL6+vvRXekwJCYk9e/aUl//ry4B+
fn5SUlKqqqqVlZUjexUwGXCqmmxtbDYorJs7a/ZyWVlRIWFJUbE9O3fdu2Nx
68bN7crbVsjKnTx2fMSbFQAAU01LS4uvt/e1K1fdXFypNGrZgcHxK6oMjjzw
efC88vJS2rRl47r1ZWVltFRPHj4+d+ZsVVXV5w/i6uyyQEJSW12joKBgZItB
MWZhYTF37tzLly/TG0Wfd6dOneLm5r579+7QI3Hx8fFr1qwRExOj7frhPzhV
0MaNGxcuXBgZGfmBfQI5PYi4uHhSUtLgqfj0cfbgwQN+fv5r167Rs4/sVcBk
MPHVRM9SX19vamwsNG8+30xe+i//rFlrVslraWhqqquLiYgIzZ+/dcuWp0+e
YF8TAMAw0aq1t7eXVpsURV8csIVzo1wu27dnD5NDzBnszOLZ2tjSmn+bklJF
RUVBfsGpEyeWyMh4eXgw3wpkZmPmdrS3l5FecML0WOkwvrNP92phY0YdZwZS
zsrK2rRpE+WQj48PMyiltbW1kJAQ3ZicnMwMs0wfgvfu3aMbz50719DQwDxa
W1sbRVFjYyOz64nmpD+3t7czf2We68WLF9RIBw4cYA690cvR0dGZOXMmdRoz
3AEzLOGePXukpaWprDCczk9t4qtpYAQ2a5u1q9fMnME1i5tnNs9M2UWLF0kv
EOCfO49vjrSEpLGhUUR4eN+w944CAMB3cWrkgWVLlyorKcXHxZWyT7vKy8tP
Sky0fPJEcf0GKTHxv/680MBOC1cXl1XLlq9ctvzalatJiUldnV29Pb2lpaW2
NjbblZUXLVj45vXr1tbW7z4jfZY9fvz4zJkzlpaWr9jor5s3b6ZkOnv27ODR
sZKSkiNHjsyfP59qx9bW1sPD4+rVq8uXL9+6dSt11GDYODg4rF+/nu7IDL6U
nZ1tZGRkZmbm5OTk6+vr6up66tQpGRmZNWvWuLu7M8dH6O318vKiGxcsWHD5
8mV6ZHt7e3quRYsW0VN8MlIE/HQmvppKikv27Nw1fw4/z/QZvFzcfDN5aeKZ
MYPC6czJU35+fsVFxbgwNADA2OJINT19/ITSSFRI6KCamq6Wto6mlraG5pFD
h7ds3LheQcHE0CgxIZGJDcqYB/furVutoLBq9UG1/fRx8OfZc0e1dbZu3kLT
xT8vVFVVDedDqqOjg0Ll0KFD8vLyoqKigoKCS5Ys2bNnz4MHDwoKCgbPVqIu
SkhIOH369OrVq5nZ5OTkjh49GhwcPPTkkIcPH9I/aWhoMCcpVVRUXLx4UVlZ
eeHChcLCwuLi4tRL+vr6VFCUQ4OLR3+2s7NTVVVdvHgxM2YUZdutW7eGf1EY
mLQmuJqam5rdXN0WSkpxT5tO1cT8d6nMIo0jR55ZWg5cd3J4A+YDAMAP4Ug1
vX3jR7G0W2XnDuVtO5SVVZS37dy+Y9+evfpHjz568DA5MWlwzr7+/urqapuX
Lw2O6m1TUlq3eo3CKnnF9Rs0jqhbPnmal5s7/ANbbW1tFEjx8fGBgYH+/v5R
UVH018HhuwfRXxsaGpKSkqiUaLbY2FiKok/ODKFYCgsLS09PZ1KKoquuri4j
I4NuDAgIoDsmscdp//wtZbFY1EjR0dE0W1BQEN2FPmRxbO4XMMHVlJKccmj/
gfn8/Fx/TOObySstLkG/Qbdv3nz37h3O/QYAGD8TX00UCcypVh3t7X9PpLOj
s7OTooIW45OBOgdOzerpYXV1VVVWpianxMXEFhYWtrS00INgFw1MEhNZTfQU
z62e8c4YOConPF9g9YqVZ0+dLigYuBA2fiMAAMYVR/Y1jQxlEmUVfTQwZcXp
xQH4x0RWU3Bw8H5VNV4u7rmz+P48ey4mOrq6qqqbhS/KAQCMu5+omgAmrYms
piePHm9ct15XW8fe1jYvL4+FU5gAACYKqglg9Caymvzfvr1/915cbOzwx1wF
AIAxgWoCGL0Jqyb2OX84PA0AwBmoJoDR4+DVewEAYMKgmgBGD9UEADAVoJoA
Rg/VBAAwFaCaAEYP1QQAMBWgmgBGD9UEADAVoJoARg/VBAAwFaCaAEYP1QQA
MBWgmgBGD9UEADAVoJoARg/VBAAwFaCaAEYP1QQAMBWgmgBGD9UEADAVoJoA
Rg/VBAAwFaCaAEYP1QQAMBWgmgBGD9UEADAVoJoARg/VBAAwFaCaAEYP1QQA
MBWgmgBGD9UEADAVoJoARg/VBAAwFaCaAEYP1QQAMBWgmgBGD9UEADAVoJoA
Rg/VBAAwFaCaAEYP1QQAMBWgmgBGD9UEADAVoJoARg/VBAAwFaCaAEYP1QQA
MBWgmgBGD9UEADAVoJoARg/VBAAwFaCaAEYP1QQAMBWgmgBGD9UEADAVoJoA
Rg/VBAAwFaCaAEYP1QQAMBWgmgBGD9UEADAVoJoARg/VBAAwFaCaYPx0d3fH
xcVduHBh165dmzdv1tDQePnyZWlpaW9v7+A81BiVlZWPHj06ePDgli1b9u/f
//jx4+Li4m//QPb19VVUVNjZ2R0+fJjutWfPnrt379ItdPvQ2eiJsrKybt68
qaKismnTJk1NTRcXl4aGhjEPG1QTAMBUgGqCcfL+/XsqGVlZ2RUrVmxiU1BQ
WLhwoY6OTnZ2NjMPVU1iYuK+ffuWLFmybt066p+1a9cuWLCACopy65MEGor+
VVVVddmyZatXr6bHl5CQEBISortHRUVRqjHz0B/8/f2VlZVpGTZs2KCoqEhz
SklJGRoa5uTkfOPBRwDVBAAwFaCaYJyEhYWtWrVKTk7OycmpoKCgtLSUUkdd
XV1MTOzJkycsFovmKS8vNzAw4Ofnv3jxYlJSUmVlZUpKip6enrCw8NmzZ6m7
vvbg1tbWBw4coCqLjo6mh33+/Lm8vDwXFxfdt66ujpknNzd37969VFaWlpaU
SSUlJcHBwUpKSrQAFhYWra2tY/hiUU0AAFMBqgnGQ3d3t5WV1dy5cy9cuEAZ
w4REb2+vo6MjU0QtLS19fX1eXl4LFixQUVHJy8tjDtvRjbGxsStWrKDayczM
/NrjFxYW0r/Sg9C96C5tbW3Xr1+fPXs23ZFuZ/YjUUqJi4ufP3++sbGxn41+
yN3d3elGqqn8/PwxfL2oJgCAqQDVBOOBusXOzm7evHn6+vrV1dXMjZQTL168
EBERMTMz6+zspNS5ceMGHx/fw4cPh+75qamp0dXVpdt9fHyYw23UUfv37zcw
MKBY+tqRNWtr6/nz58vKyiYlJTEBpqmpSUlGmTQ0Y+hJV61aRXEVFhY2hq8X
1QQAMBWgmmCcxMfHb9iwgRrp2bNnFRUVlCsJCQnbt2/ftGkTFQulRX19vYmJ
CS8vb0hIyNDSaGlpuXz58uzZs62srNrb2+kWV1dXepzly5fTIww9k3wQpdSD
Bw/mzJmzfv36kpISuoV+nteuXSsvLx8VFfXJzGpqalRTr169GsMXi2oCAJgK
UE0wTiiTnJ2d161bJyMjc/To0QsXLmzcuFFFRcXJyYnSgmaglDp48CAPD88n
YUOldPPmTT4+vitXrjCnNmVnZ5ubmz99+rSqquqLTVJbW6ujozN9+vQzZ840
NjbSLTSnnJycgoJCbGzsJzNra2sLCgra2tqO4YtFNQEATAWoJhg/1D8hISEU
Try8vFRHs2fPNjMzq6ysZI6ylZSU7Nixg4uL6/NqunXrFlXTsWPH6uvrP7B3
JbHYvhgk9KPr7e29ZMkSyjNqJOYnmUJr8eLFX6wmXV3dWbNmUYON4StFNQEA
TAWoJhgn3d3dkZGRe/fulZOTo1AxNDRcuHAhtc2FCxeolygt6L8qKirfqKaT
J08y1fRtaWlpu3btEhERefnyZVtbG3NjTk7ON6qJOfw3Vq/0A6oJAGBqQDXB
eKAfJ+Zr/uvXr3dzc6uoqKirqwsKCtq3b5+4uPjly5epLqqqqjQ0NL54hI6p
pk/OEv+i0tJSY2NjGRmZixcv1tbWDhYL5dayZcu+Vk3S0tIeHh5j+HpRTQAA
UwGqCcYDNdKxY8fExMRcXV3b2tqYkOju7g4PD5eXl1+0aFFaWlpDQ8OJEyd4
eXlfvXo1ODQlofD4888/Z82a5enpOfT2z+Xl5RkYGCxcuPD8+fOFhYVDc6Wv
r09RUVFOTo7i7ZN77dy5c/ny5ZRwY/h6UU0AAFMBqgnGQ0lJCcWJrKws1dHQ
2ysrK9XV1WfOnBkVFTV41vfFixeHDmhZWlq6a9cuUVHRhISEbzxFQUGBnp7e
7Nmzz507V1xc/Pl363R0dISFhV+8eDH0nyiuaKmUlJQ+WbBRQjUBAEwFqCYY
D+Xl5fv37+fn53dwcKCQYE7/ZrFYFEsKCgrMCJZ0o7e394IFC5YuXRodHd3V
1UW3dHZ2urm5SUtLa2lpDQ70RDdWVVXV1NQM7nqiKjM2NhYRETl+/HheXl5H
Rwfro8FGol6i9NLQ0GCaih68tbX16tWrdCOFFvNVu7GCagIAmApQTTAe2tra
Hj9+LC4uvmTJkkuXLlEIvX792tLSUllZmW6kdGEGH6AWMjU15ePj27Fjx7Nn
zzw9Pe/du7dmzRoqqzdv3gz2T1BQ0KZNm1RVVbOyspgAs7CwoPhZuHDh2bNn
Hz58+OSjp0+fhoeHM5drKSgooHITFBTU09OjeKNlOH/+vKSkpIqKSkxMzNj+
wKOaAACmAlQTjAcqh7KysgcPHmzfvn3p0qXCwsJUL4sWLaJqunPnDvUMkxaU
QOnp6X/99de6deuopmgeGRmZQ4cOeXh4MFnFoJqiRlq5cmVycjJTTcbGxrNn
z+bi4uLn5587xPz588+cOdPS0vKBvWsrIiKC5ly1apWIiAgtw4oVK7S0tOjG
jo6OsX29qCYAgKkA1QTjhOKhra0tPz8/JiYmMDDQ398/MjIyJyentbV1aFfQ
n6k0UlNTQ0JCmHmKi4s7OzuHzlNXVxceHh4bG0s5xNyemZkZFBTk/5mAgICs
rKzBH+be3t6ampqEhASamZbh3bt3VVVV4/GjjmoCAJgKUE0Ao4dqAgCYClBN
AKOHagIAmApQTQCjh2oCAJgKUE0Ao4dqAgCYClBNAKOHagIAmApQTQCjh2oC
AJgKUE0Ao4dqAgCYClBNAKOHagIAmApQTQCjh2oCAJgKUE0Ao4dqAgCYClBN
AKOHagIAmApQTQCjh2oCAJgKUE0Ao4dqAgCYClBNAKOHagIAmApQTTBp9bMN
c87xXphvQzUBAEwFqCbgrLa2tpycnPi4uJiYmNiYAXGxselpafX19V+7S11d
XWREhK21zfNnz3x9vAsLCiZygb8I1QQAMBWgmoCziouL79+9p697VFtTU0dL
i5kM9fSvXr7i4uRM+dTb2zs4c3tbW3Bw8M3rN3Q0tfbt3rNv9+5D+/efPX3a
2ckpLy+3u7ubU68C1QQAMBWgmoCzkhITVXfvEeCfu1xWdrOi4uaNGzeuW7d6
xUopcQm5JUtPHT9RVVXFzNnZ2RkVGblDeZuM9IKtm7cYGxnRv+7ft0928WK5
JUsuX7xIAcapV4FqAgCYClBNwFlUTQfV9suvWPHWz6+1tbWxsbGhvr6+rt7d
1XXPrl1yi5e89vWl22nOsrIyzSPqy5fKWtw2Ly0paWajSnn9+vV+VbUFEpJe
Hp5trW0ceRWoJgCAqQDVBJyVmDBQTWtXr46Jjh56e0tLy9PHT6TFJS799VdZ
aSndkpmZKSUuobp3X1ho6NA56+rqbF6+XLJwoeWTpzXV1RO69B+hmgAApgJU
E3DWYDXFxcYOvZ3FYj2ztJISE79/925NTQ3dkpOTI7t46cZ16+3t7Ji9T4OK
i4pePn/+Lj6eWmtCl/4jVBMAwFSAagLOYo7QrVy2zMXZuaSkpKCgIJ/k5fl4
exsZGChvUaKa6urqojlrqmvOnz23VGbRAVU1m5fW8XFxWZlZZaVl79+/72Zx
7DxwBqoJAGAqQDUBZyUnJR3YpyYlJs7+NtyZs6dPnz550kjfYKXcslXLV96z
uEtRxMxJP6LUU/RPi6QXiIuIrF29WltD84bZdS8Pz6zMzPb29r6+Pk69ClQT
AMBUgGoCzqJq2r9PVYB/roy0tPyKFTStXLZ8+VJZofkCokLCGkfUS0tKBmem
n9K6urqQ4OBLf/21eaPikoUyYsIiIoJCVFD3Le4Ofttu4qGaAACmAlQTcFZS
YuIBVbWlixaZ37rl7+f3xtfX18fXx9vb0cHh5LHjCvKrT504kZeTO/Qu7e3t
Bfn5YaGh7q5uz589P25qul5BQX7FSjsbG+YMqImHagIAmApQTcBZzNng69as
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
     "], {{0, 263.4}, {471.59999999999997`, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{120., 120.},
     RasterInterpolation->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{401.4, Automatic},
   ImageSizeRaw->{471.59999999999997`, 263.4},
   PlotRange->{{0, 471.59999999999997`}, {0, 263.4}}], 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
EyZMmDDhbvwXMxxBTw==
     "], {{0, 44.4}, {114.6, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{120., 120.},
     RasterInterpolation->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{213.8999999999998, Automatic},
   ImageSizeRaw->{114.6, 44.4},
   PlotRange->{{0, 114.6}, {0, 44.4}}], 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztmF0oZGEYx7VuprjYcIEIUaSWxGZ8xVKyKcNso0zmwjazY1zYGqO1lCRF
KHMhIUoukBsiJbcobtZHvhcl3zMG4/tjhv3vnJqmMXN2xjlnXOz7qzmdM73z
P+/znOf9v8+ZkK/fhd/eubm5lfFwEBb9+KRUFv388h4XotIyhbxUJv1cqpLJ
ZUr+V3d8+QEfGT5/z58JBAKBQCAQCAQCgUAgEAgEggX39/dqtbqgoKC+vv7i
4oJ1/bOzs7a2NolE0tzcfHJywrq+i0EUjY2Nvb29kZGRSNrt7S2L4nd3dx0d
HbW1tTjGxcWJxeKbmxsW9V3P+Pj4w8ODwWCYmJgICwtjt8CgNj09Df3Hx8fR
0dH4+Pj9/X0W9V2P0WikTubn51NTU6+urlgUfzJBnU9NTQkEgvPzcxb135D2
9vb+/n6UARfikO3r6+vs7DRnj7ng5OQkK1KvYG9vr7y8nDtj2dzchINdXl4y
l4K7Dg0NxcTEBAQEsJV8p4DDNDU1IRa27o7d0HLRHR0dwepPT0+Z60Ph4OBg
d3c3OTnZx8fH9elCllpaWhAdbo3j6uoqbN/eYCQWFof9jl6wrq5ubW2NutRo
NN3d3VqtFiaJNEKf4YQxT6xEqVTKdbogTkWKE8rScczNzfX19Q0x4efnt729
TTOHnZ2drKwsnU5nbwBKqKamJj8/nxpzeHiI5gSyQUFBwcHB6FXm5uaYB4LM
l5SUcJQuiM/OziqVytDQ0MHBQZQQ+h/M3GgCAWotoCktgGRmZGTY6zZXVlby
8vK8vb1jY2PhhCgzlIFerzeL417oilmJiLt0PZvaRbQ9PB4Pa6Gqqio7Ozsx
MfEV96JPF/qrkZERVBGsGLsGfeYtQRqxuAS2EAqFDQ0NVuO5ThcCqa6uxm7S
2toKq0S8x8fHDv4WgSMcnQksJXgstjnqEl4EZcsoKisro6OjYcXOTg/L/Lcd
MGGr8VynC5tvSkqKSCRCj+3sLQYGBpKSkj6aiIiI8Pf3j4qKoi7T0tLW19fN
I5E9OJtCobi+vnZ2hk+0WA3mNF3QRC15enqqVCrLYnAQbAeoRo0JVBefz9/Y
2KAuUWCWXoTUhYeH4/XT/KbgIHia+O0vW2AjhgNYjec0XfDbrq4uDw+Pra0t
hlL03oX3AqRrcXHRWVlsCnK5XGyLwsJCtVptNZ7TdOHZwTBhm84+9JfQpAtl
JpFIcnJy0HGNjY057vMAg7F+9bZAp/fyXQOBFBcXe3l5mdPFPDQzuGNgYGBP
Tw9zKZp0Yc1mZmamp6dXVFRgAHcNJPwE/p+QkODu7g4rphpsNHhOPSB6/aWl
JVb+CkAN4O3SZu+EJT8zMzM8PPzP5o0hEMdb1fLy8sLCAiZDbSsc/TPAKQYT
b/LaSyAQCAQCgUAgEP4T/gB9+r7n
     "], {{0, 27.}, {60.599999999999994`, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{120., 120.},
     RasterInterpolation->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{90.6, Automatic},
   ImageSizeRaw->{60.599999999999994`, 27.},
   PlotRange->{{0, 60.599999999999994`}, {0, 27.}}]}]], "Input",
 CellChangeTimes->{{3.9248737853011513`*^9, 3.924873805365906*^9}, 
   3.924955618726881*^9},ExpressionUUID->"a7c72224-9ec9-f740-afcb-\
288f23654f45"],

Cell[BoxData[
 RowBox[{"setFockSize", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.9253954902975025`*^9, 3.925395493714277*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"a13fde38-db65-aa4a-95c7-5022ddb01c62"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a1", " ", "=", " ", 
   RowBox[{"QuantumTensorProduct", "[", 
    RowBox[{"a", ",", 
     RowBox[{"QuantumOperator", "[", 
      RowBox[{"\"\<I\>\"", "[", 
       RowBox[{"fockBasis", "[", "\"\<Dimension\>\"", "]"}], "]"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a2", " ", "=", " ", 
   RowBox[{"QuantumTensorProduct", "[", 
    RowBox[{
     RowBox[{"QuantumOperator", "[", 
      RowBox[{"\"\<I\>\"", "[", 
       RowBox[{"fockBasis", "[", "\"\<Dimension\>\"", "]"}], "]"}], "]"}], 
     ",", "a"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.924806570343157*^9, 3.924806617500357*^9}, {
  3.924873911141077*^9, 3.924873918169697*^9}, {3.924874545266476*^9, 
  3.924874552213236*^9}, {3.925301354896601*^9, 3.9253013727006454`*^9}, {
  3.925395452630829*^9, 3.9253954811828804`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"f4429ee0-db2d-fc43-b2c4-8f6b62695f4c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a1", "@", 
   RowBox[{"a2", "[", "\"\<Dagger\>\"", "]"}]}], "-", 
  RowBox[{
   RowBox[{"a2", "[", "\"\<Dagger\>\"", "]"}], "@", "a1"}]}]], "Input",
 CellChangeTimes->{{3.924806672139061*^9, 3.924806698874021*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"1f7345f1-4f85-8044-9e28-fe69587fa776"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox["0",
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{
        RowBox[{
          RowBox[{"-", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{"(", 
                  RowBox[{"\"I\"", "\[CircleTimes]", 
                    SuperscriptBox[
                    RowBox[{"\"I\"", "[", "5", "]"}], "\[Dagger]"]}], ")"}], 
                "@*", 
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{"\"I\"", "[", "5", "]"}], "\[CircleTimes]", 
                    "\"I\""}], ")"}]}], ")"}]}], "+", 
          RowBox[{
            RowBox[{"(", 
              RowBox[{
                RowBox[{"\"I\"", "[", "5", "]"}], "\[CircleTimes]", "\"I\""}],
               ")"}], "@*", 
            RowBox[{"(", 
              RowBox[{"\"I\"", "\[CircleTimes]", 
                SuperscriptBox[
                 RowBox[{"\"I\"", "[", "5", "]"}], "\[Dagger]"]}], 
              ")"}]}]}]}, {
        TemplateBox[{"\"QuantumOperator: \"", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                SubscriptBox["5", "1"], ",", 
                SubscriptBox["5", "2"]}], "}"}], "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                SubscriptBox["5", "1"], ",", 
                SubscriptBox["5", "2"]}], "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumOperator[
    Wolfram`QuantumFramework`QuantumState[
     SparseArray[
     Automatic, {625}, 0, {
      1, {{0, 16}, {{31}, {57}, {83}, {109}, {161}, {187}, {213}, {239}, {
        291}, {317}, {343}, {369}, {421}, {447}, {473}, {499}}}, {0, 0, 0, 0, 
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}], 
     Wolfram`QuantumFramework`QuantumBasis[<|
      "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
            Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
          SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
          SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[2, "Dual" -> True], 1} -> 
          SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[3, "Dual" -> True], 1} -> 
          SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[4, "Dual" -> True], 1} -> 
          SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{5}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
          SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
          SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[2, "Dual" -> True], 2} -> 
          SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[3, "Dual" -> True], 2} -> 
          SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[4, "Dual" -> True], 2} -> 
          SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{5}}}, {1}}]|>], 
       "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
            Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[2, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[3, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[4, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{5}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[2, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[3, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[4, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{5}}}, {1}}]|>], 
       "Picture" -> "Schrodinger", "Label" -> -Composition[
           CircleTimes["I", 
            SuperDagger[
             "I"[5]]], 
           CircleTimes[
            "I"[5], "I"]] + Composition[
          CircleTimes[
           "I"[5], "I"], 
          CircleTimes["I", 
           SuperDagger[
            "I"[5]]]], "ParameterSpec" -> {}|>]], {{1, 2}, {1, 2}}]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.92480668607753*^9, 3.924806701881588*^9}, {
   3.924873845651312*^9, 3.924873847545903*^9}, {3.92487393023521*^9, 
   3.924873931647194*^9}, {3.924875056270836*^9, 3.924875077391173*^9}, 
   3.924880834588236*^9, {3.9249498815833797`*^9, 3.924949884136194*^9}, {
   3.9253955647957497`*^9, 3.925395568942528*^9}, {3.926679285755066*^9, 
   3.926679287979782*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"6e0c496c-ed4a-b342-9713-01b21d970e84"]
}, Open  ]],

Cell["\<\
There is also other type of BS that has a phase shift of \[Pi] of the \
reflected wave and has the following matrix:\
\>", "Text",
 CellChangeTimes->{{3.926679195607345*^9, 
  3.926679259499595*^9}},ExpressionUUID->"f7297ddc-acc3-0d40-a055-\
3c1173c7a3a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BSMatrixEvolve2", "[", 
   RowBox[{"r_", ",", "t_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", "t"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "r"}]}], "}"}]}], "}"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Abs", "[", "r", "]"}], "^", "2"}], "+", 
     RowBox[{
      RowBox[{"Abs", "[", "t", "]"}], "^", "2"}]}], " ", "==", " ", 
    "1"}]}]}]], "Input",
 CellChangeTimes->{{3.924874136324501*^9, 3.92487413934427*^9}, {
   3.926164535378004*^9, 3.926164547531893*^9}, 3.926679176684795*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"7312e1ea-2a09-e74d-8dbc-822b3eefeaff"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"a1", ",", "a2"}], "]"}]], "Input",
 CellChangeTimes->{{3.924874002006068*^9, 3.924874009813682*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"48ed03ec-f537-5a4b-b709-8da64240b950"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a5", " ", "=", " ", 
   RowBox[{"QuantumTensorProduct", "[", 
    RowBox[{"a", ",", 
     RowBox[{"QuantumOperator", "[", 
      RowBox[{"\"\<I\>\"", "[", 
       RowBox[{"fockBasis", "[", "\"\<Dimension\>\"", "]"}], "]"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a6", " ", "=", " ", 
   RowBox[{"QuantumTensorProduct", "[", 
    RowBox[{
     RowBox[{"QuantumOperator", "[", 
      RowBox[{"\"\<I\>\"", "[", 
       RowBox[{"fockBasis", "[", "\"\<Dimension\>\"", "]"}], "]"}], "]"}], 
     ",", "a"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.924799258585815*^9, 3.924799276058394*^9}, {
   3.924799307211368*^9, 3.924799412765457*^9}, {3.924799574082619*^9, 
   3.9247996509034805`*^9}, 3.924799762881521*^9, {3.924873947425913*^9, 
   3.924873975429447*^9}, {3.924874018776161*^9, 3.924874024392666*^9}, {
   3.924874558661202*^9, 3.9248745642179956`*^9}, {3.925301428070952*^9, 
   3.9253014304276714`*^9}, {3.9253955841194477`*^9, 3.925395592843792*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"883ec6cc-d309-894a-a3e4-512f2be33012"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"backEvolve", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"BSMatrixEvolve2", "[", 
      RowBox[{
       RowBox[{"1", "/", 
        SqrtBox["2"]}], ",", 
       RowBox[{"1", "/", 
        SqrtBox["2"]}]}], "]"}], " ", ".", " ", 
     RowBox[{
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<P\>\"", "[", "\[Phi]", "]"}], "]"}], "[", 
      "\"\<Matrix\>\"", "]"}], ".", " ", 
     RowBox[{"BSMatrixEvolve2", "[", 
      RowBox[{
       SqrtBox[
        RowBox[{"4", "/", "5"}]], ",", 
       SqrtBox[
        RowBox[{"1", "/", "5"}]]}], "]"}]}], " ", "//", "Inverse"}], " ", "//",
    "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.924799418852688*^9, 3.924799445520485*^9}, {
   3.924799676713442*^9, 3.924799677577402*^9}, {3.924799735100664*^9, 
   3.924799740919119*^9}, 3.9248063447941227`*^9, {3.924806625921268*^9, 
   3.92480663453274*^9}, {3.924874030305729*^9, 3.924874118569641*^9}, {
   3.924874149786499*^9, 3.924874157162447*^9}, {3.9249550822617702`*^9, 
   3.92495509380965*^9}, {3.924955127937282*^9, 3.9249551510864697`*^9}, {
   3.924955382095553*^9, 3.924955390725733*^9}, {3.92496533935273*^9, 
   3.924965342062748*^9}, {3.924965398473728*^9, 3.924965407415003*^9}, {
   3.926679180133762*^9, 3.92667918841126*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"56088c61-5209-4a46-8125-6d0e9340829b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"2", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]]}], 
      SqrtBox["10"]], ",", 
     FractionBox[
      RowBox[{"2", "-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]]}], 
      SqrtBox["10"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}], ")"}]}], 
      SqrtBox["10"]], ",", 
     FractionBox[
      RowBox[{"1", "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]]}]}], 
      SqrtBox["10"]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.924880860401682*^9, 3.924949895115984*^9, 3.924955156695307*^9, {
   3.924955392074047*^9, 3.924955399323536*^9}, 3.924965345006539*^9, 
   3.92496540782489*^9, 3.9253955975430355`*^9, 3.926679302870855*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"0c30c707-2b55-af47-8702-7f536f13e712"]
}, Open  ]],

Cell["\<\
Relating the final and initial operators (Heisenberg like evolution):\
\>", "Text",
 CellChangeTimes->{{3.925158026829614*^9, 3.9251580487825546`*^9}, {
  3.926679316224041*^9, 
  3.926679335940647*^9}},ExpressionUUID->"8474990e-d8bc-0943-9b2e-\
f2fe39be7844"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a1", ",", "a2"}], "}"}], " ", "=", " ", 
  RowBox[{"backEvolve", ".", 
   RowBox[{"{", 
    RowBox[{"a5", ",", "a6"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.9247995153290615`*^9, 3.924799556162548*^9}, 
   3.92479971204167*^9, {3.924874163232664*^9, 3.92487418110354*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"ce141670-ce10-bd4a-9679-03f4d9ff6c8d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["QuantumOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[
                 RasterBox[
                 SparseArray[
                  Automatic, {10, 10}, 0.93, {
                   1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                  0}, {10, 10}}, {0, 1}], AspectRatio -> 1, Axes -> False, 
                 Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> 
                 None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]]}], ")"}],
                     " ", 
                    RowBox[{"\"I\"", "\[CircleTimes]", 
                    RowBox[{"\"I\"", "[", "5", "]"}]}]}], 
                   SqrtBox["10"]], "+", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]]}], ")"}],
                     " ", 
                    RowBox[{
                    RowBox[{"\"I\"", "[", "5", "]"}], "\[CircleTimes]", 
                    "\"I\""}]}], 
                   SqrtBox["10"]]}]], 
               Annotation[#, 
                10^Rational[-1, 2] (2 - 
                  E^(Complex[0, -1] $CellContext`\[Phi])) CircleTimes["I", 
                   "I"[5]] + 
                10^Rational[-1, 2] (2 + 
                  E^(Complex[0, -1] $CellContext`\[Phi])) CircleTimes[
                   "I"[5], "I"], "Tooltip"]& ], 
              GridBox[{{
                 TagBox[
                  TemplateBox[{"\"Pure\"", "\" \"", "\"map\""}, "RowDefault"],
                   "SummaryItem"], ""}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{"25", "\"\[RightArrow]\"", "25"}, 
                    "RowDefault"], "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}]}, "RowDefault"], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[
                 RasterBox[
                 SparseArray[
                  Automatic, {10, 10}, 0.93, {
                   1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                  0}, {10, 10}}, {0, 1}], AspectRatio -> 1, Axes -> False, 
                 Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> 
                 None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]]}], ")"}],
                     " ", 
                    RowBox[{"\"I\"", "\[CircleTimes]", 
                    RowBox[{"\"I\"", "[", "5", "]"}]}]}], 
                   SqrtBox["10"]], "+", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]]}], ")"}],
                     " ", 
                    RowBox[{
                    RowBox[{"\"I\"", "[", "5", "]"}], "\[CircleTimes]", 
                    "\"I\""}]}], 
                   SqrtBox["10"]]}]], 
               Annotation[#, 
                10^Rational[-1, 2] (2 - 
                  E^(Complex[0, -1] $CellContext`\[Phi])) CircleTimes["I", 
                   "I"[5]] + 
                10^Rational[-1, 2] (2 + 
                  E^(Complex[0, -1] $CellContext`\[Phi])) CircleTimes[
                   "I"[5], "I"], "Tooltip"]& ], 
              GridBox[{{
                 TagBox[
                  TemplateBox[{"\"Pure\"", "\" \"", "\"map\""}, "RowDefault"],
                   "SummaryItem"], ""}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{"25", "\"\[RightArrow]\"", "25"}, 
                    "RowDefault"], "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Hermitian: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{"2", "\"\[RightArrow]\"", "2"}, 
                    "RowDefault"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Unitary: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{"5", ",", "5"}], "}"}], "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "5"}], "}"}]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}], ""}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumOperator[
     Wolfram`QuantumFramework`QuantumState[
      SparseArray[
      Automatic, {625}, 0, {
       1, {{0, 40}, {{2}, {28}, {54}, {80}, {132}, {158}, {184}, {210}, {
         262}, {288}, {314}, {340}, {392}, {418}, {444}, {470}, {522}, {
         548}, {574}, {600}, {6}, {32}, {58}, {84}, {110}, {136}, {162}, {
         188}, {214}, {240}, {266}, {292}, {318}, {344}, {370}, {396}, {
         422}, {448}, {474}, {500}}}, {
        10^Rational[-1, 2] (2 - E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[1, 5]^Rational[1, 2] (2 - 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[3, 10]^Rational[1, 2] (2 - 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[2, 5]^Rational[1, 2] (2 - 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         10^Rational[-1, 2] (2 - E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[1, 5]^Rational[1, 2] (2 - 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[3, 10]^Rational[1, 2] (2 - 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[2, 5]^Rational[1, 2] (2 - 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         10^Rational[-1, 2] (2 - E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[1, 5]^Rational[1, 2] (2 - 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[3, 10]^Rational[1, 2] (2 - 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[2, 5]^Rational[1, 2] (2 - 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         10^Rational[-1, 2] (2 - E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[1, 5]^Rational[1, 2] (2 - 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[3, 10]^Rational[1, 2] (2 - 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[2, 5]^Rational[1, 2] (2 - 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         10^Rational[-1, 2] (2 - E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[1, 5]^Rational[1, 2] (2 - 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[3, 10]^Rational[1, 2] (2 - 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[2, 5]^Rational[1, 2] (2 - 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         10^Rational[-1, 2] (2 + E^(Complex[0, -1] $CellContext`\[Phi])), 
         10^Rational[-1, 2] (2 + E^(Complex[0, -1] $CellContext`\[Phi])), 
         10^Rational[-1, 2] (2 + E^(Complex[0, -1] $CellContext`\[Phi])), 
         10^Rational[-1, 2] (2 + E^(Complex[0, -1] $CellContext`\[Phi])), 
         10^Rational[-1, 2] (2 + E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[1, 5]^Rational[1, 2] (2 + 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[1, 5]^Rational[1, 2] (2 + 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[1, 5]^Rational[1, 2] (2 + 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[1, 5]^Rational[1, 2] (2 + 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[1, 5]^Rational[1, 2] (2 + 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[3, 10]^Rational[1, 2] (2 + 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[3, 10]^Rational[1, 2] (2 + 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[3, 10]^Rational[1, 2] (2 + 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[3, 10]^Rational[1, 2] (2 + 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[3, 10]^Rational[1, 2] (2 + 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[2, 5]^Rational[1, 2] (2 + 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[2, 5]^Rational[1, 2] (2 + 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[2, 5]^Rational[1, 2] (2 + 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[2, 5]^Rational[1, 2] (2 + 
          E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[2, 5]^Rational[1, 2] (2 + 
          E^(Complex[0, -1] $CellContext`\[Phi]))}}], 
      Wolfram`QuantumFramework`QuantumBasis[<|
       "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
             Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[2, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[3, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[4, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{5}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[2, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[3, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[4, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{5}}}, {1}}]|>], 
        "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
             Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[2, "Dual" -> True], 1} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[3, "Dual" -> True], 1} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[4, "Dual" -> True], 1} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{5}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[2, "Dual" -> True], 2} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[3, "Dual" -> True], 2} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[4, "Dual" -> True], 2} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{5}}}, {1}}]|>], 
        "Picture" -> "Schrodinger", "Label" -> 
        10^Rational[-1, 2] (2 - E^(Complex[0, -1] $CellContext`\[Phi])) 
          CircleTimes["I", 
            "I"[5]] + 
         10^Rational[-1, 2] (2 + E^(Complex[0, -1] $CellContext`\[Phi])) 
          CircleTimes[
            "I"[5], "I"], "ParameterSpec" -> {}|>]], {{1, 2}, {1, 2}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[
                 RasterBox[
                 SparseArray[
                  Automatic, {10, 10}, 0.93, {
                   1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                  0}, {10, 10}}, {0, 1}], AspectRatio -> 1, Axes -> False, 
                 Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> 
                 None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]]}]}], 
                    ")"}], " ", 
                    RowBox[{"\"I\"", "\[CircleTimes]", 
                    RowBox[{"\"I\"", "[", "5", "]"}]}]}], 
                   SqrtBox["10"]], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}], ")"}], " ", 
                    RowBox[{
                    RowBox[{"\"I\"", "[", "5", "]"}], "\[CircleTimes]", 
                    "\"I\""}]}], 
                   SqrtBox["10"]]}]], 
               Annotation[#, 
                10^Rational[-1, 2] (1 + 
                  2 E^(Complex[0, -1] $CellContext`\[Phi])) CircleTimes["I", 
                   "I"[5]] + 
                10^Rational[-1, 2] 
                 E^(Complex[0, -1] $CellContext`\[Phi]) (-2 + 
                  E^(Complex[0, 1] $CellContext`\[Phi])) CircleTimes[
                   "I"[5], "I"], "Tooltip"]& ], 
              GridBox[{{
                 TagBox[
                  TemplateBox[{"\"Pure\"", "\" \"", "\"map\""}, "RowDefault"],
                   "SummaryItem"], ""}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{"25", "\"\[RightArrow]\"", "25"}, 
                    "RowDefault"], "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}]}, "RowDefault"], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[
                 RasterBox[
                 SparseArray[
                  Automatic, {10, 10}, 0.93, {
                   1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                  0}, {10, 10}}, {0, 1}], AspectRatio -> 1, Axes -> False, 
                 Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> 
                 None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]]}]}], 
                    ")"}], " ", 
                    RowBox[{"\"I\"", "\[CircleTimes]", 
                    RowBox[{"\"I\"", "[", "5", "]"}]}]}], 
                   SqrtBox["10"]], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}], ")"}], " ", 
                    RowBox[{
                    RowBox[{"\"I\"", "[", "5", "]"}], "\[CircleTimes]", 
                    "\"I\""}]}], 
                   SqrtBox["10"]]}]], 
               Annotation[#, 
                10^Rational[-1, 2] (1 + 
                  2 E^(Complex[0, -1] $CellContext`\[Phi])) CircleTimes["I", 
                   "I"[5]] + 
                10^Rational[-1, 2] 
                 E^(Complex[0, -1] $CellContext`\[Phi]) (-2 + 
                  E^(Complex[0, 1] $CellContext`\[Phi])) CircleTimes[
                   "I"[5], "I"], "Tooltip"]& ], 
              GridBox[{{
                 TagBox[
                  TemplateBox[{"\"Pure\"", "\" \"", "\"map\""}, "RowDefault"],
                   "SummaryItem"], ""}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{"25", "\"\[RightArrow]\"", "25"}, 
                    "RowDefault"], "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Hermitian: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{"2", "\"\[RightArrow]\"", "2"}, 
                    "RowDefault"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Unitary: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{"5", ",", "5"}], "}"}], "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "5"}], "}"}]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}], ""}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumOperator[
     Wolfram`QuantumFramework`QuantumState[
      SparseArray[
      Automatic, {625}, 0, {
       1, {{0, 40}, {{2}, {28}, {54}, {80}, {132}, {158}, {184}, {210}, {
         262}, {288}, {314}, {340}, {392}, {418}, {444}, {470}, {522}, {
         548}, {574}, {600}, {6}, {32}, {58}, {84}, {110}, {136}, {162}, {
         188}, {214}, {240}, {266}, {292}, {318}, {344}, {370}, {396}, {
         422}, {448}, {474}, {500}}}, {
        10^Rational[-1, 2] (1 + 2 E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[1, 5]^Rational[1, 2] (1 + 
          2 E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[3, 10]^Rational[1, 2] (1 + 
          2 E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[2, 5]^Rational[1, 2] (1 + 
          2 E^(Complex[0, -1] $CellContext`\[Phi])), 
         10^Rational[-1, 2] (1 + 2 E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[1, 5]^Rational[1, 2] (1 + 
          2 E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[3, 10]^Rational[1, 2] (1 + 
          2 E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[2, 5]^Rational[1, 2] (1 + 
          2 E^(Complex[0, -1] $CellContext`\[Phi])), 
         10^Rational[-1, 2] (1 + 2 E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[1, 5]^Rational[1, 2] (1 + 
          2 E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[3, 10]^Rational[1, 2] (1 + 
          2 E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[2, 5]^Rational[1, 2] (1 + 
          2 E^(Complex[0, -1] $CellContext`\[Phi])), 
         10^Rational[-1, 2] (1 + 2 E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[1, 5]^Rational[1, 2] (1 + 
          2 E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[3, 10]^Rational[1, 2] (1 + 
          2 E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[2, 5]^Rational[1, 2] (1 + 
          2 E^(Complex[0, -1] $CellContext`\[Phi])), 
         10^Rational[-1, 2] (1 + 2 E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[1, 5]^Rational[1, 2] (1 + 
          2 E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[3, 10]^Rational[1, 2] (1 + 
          2 E^(Complex[0, -1] $CellContext`\[Phi])), 
         Rational[2, 5]^Rational[1, 2] (1 + 
          2 E^(Complex[0, -1] $CellContext`\[Phi])), 10^Rational[-1, 2] 
         E^(Complex[0, -1] $CellContext`\[Phi]) (-2 + 
          E^(Complex[0, 1] $CellContext`\[Phi])), 10^Rational[-1, 2] 
         E^(Complex[0, -1] $CellContext`\[Phi]) (-2 + 
          E^(Complex[0, 1] $CellContext`\[Phi])), 10^Rational[-1, 2] 
         E^(Complex[0, -1] $CellContext`\[Phi]) (-2 + 
          E^(Complex[0, 1] $CellContext`\[Phi])), 10^Rational[-1, 2] 
         E^(Complex[0, -1] $CellContext`\[Phi]) (-2 + 
          E^(Complex[0, 1] $CellContext`\[Phi])), 10^Rational[-1, 2] 
         E^(Complex[0, -1] $CellContext`\[Phi]) (-2 + 
          E^(Complex[0, 1] $CellContext`\[Phi])), 5^Rational[-1, 2] 
         E^(Complex[0, -1] $CellContext`\[Phi]) (-2 + 
          E^(Complex[0, 1] $CellContext`\[Phi])), 5^Rational[-1, 2] 
         E^(Complex[0, -1] $CellContext`\[Phi]) (-2 + 
          E^(Complex[0, 1] $CellContext`\[Phi])), 5^Rational[-1, 2] 
         E^(Complex[0, -1] $CellContext`\[Phi]) (-2 + 
          E^(Complex[0, 1] $CellContext`\[Phi])), 5^Rational[-1, 2] 
         E^(Complex[0, -1] $CellContext`\[Phi]) (-2 + 
          E^(Complex[0, 1] $CellContext`\[Phi])), 5^Rational[-1, 2] 
         E^(Complex[0, -1] $CellContext`\[Phi]) (-2 + 
          E^(Complex[0, 1] $CellContext`\[Phi])), 
         Rational[3, 10]^Rational[1, 2] 
         E^(Complex[0, -1] $CellContext`\[Phi]) (-2 + 
          E^(Complex[0, 1] $CellContext`\[Phi])), 
         Rational[3, 10]^Rational[1, 2] 
         E^(Complex[0, -1] $CellContext`\[Phi]) (-2 + 
          E^(Complex[0, 1] $CellContext`\[Phi])), 
         Rational[3, 10]^Rational[1, 2] 
         E^(Complex[0, -1] $CellContext`\[Phi]) (-2 + 
          E^(Complex[0, 1] $CellContext`\[Phi])), 
         Rational[3, 10]^Rational[1, 2] 
         E^(Complex[0, -1] $CellContext`\[Phi]) (-2 + 
          E^(Complex[0, 1] $CellContext`\[Phi])), 
         Rational[3, 10]^Rational[1, 2] 
         E^(Complex[0, -1] $CellContext`\[Phi]) (-2 + 
          E^(Complex[0, 1] $CellContext`\[Phi])), 
         Rational[2, 5]^Rational[1, 2] 
         E^(Complex[0, -1] $CellContext`\[Phi]) (-2 + 
          E^(Complex[0, 1] $CellContext`\[Phi])), 
         Rational[2, 5]^Rational[1, 2] 
         E^(Complex[0, -1] $CellContext`\[Phi]) (-2 + 
          E^(Complex[0, 1] $CellContext`\[Phi])), 
         Rational[2, 5]^Rational[1, 2] 
         E^(Complex[0, -1] $CellContext`\[Phi]) (-2 + 
          E^(Complex[0, 1] $CellContext`\[Phi])), 
         Rational[2, 5]^Rational[1, 2] 
         E^(Complex[0, -1] $CellContext`\[Phi]) (-2 + 
          E^(Complex[0, 1] $CellContext`\[Phi])), 
         Rational[2, 5]^Rational[1, 2] 
         E^(Complex[0, -1] $CellContext`\[Phi]) (-2 + 
          E^(Complex[0, 1] $CellContext`\[Phi]))}}], 
      Wolfram`QuantumFramework`QuantumBasis[<|
       "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
             Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[2, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[3, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[4, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{5}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[2, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[3, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[4, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{5}}}, {1}}]|>], 
        "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
             Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[2, "Dual" -> True], 1} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[3, "Dual" -> True], 1} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[4, "Dual" -> True], 1} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{5}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[2, "Dual" -> True], 2} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[3, "Dual" -> True], 2} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[4, "Dual" -> True], 2} -> 
           SparseArray[Automatic, {5}, 0, {1, {{0, 1}, {{5}}}, {1}}]|>], 
        "Picture" -> "Schrodinger", "Label" -> 
        10^Rational[-1, 2] (1 + 2 E^(Complex[0, -1] $CellContext`\[Phi])) 
          CircleTimes["I", 
            "I"[5]] + 
         10^Rational[-1, 2] 
          E^(Complex[0, -1] $CellContext`\[Phi]) (-2 + 
           E^(Complex[0, 1] $CellContext`\[Phi])) CircleTimes[
            "I"[5], "I"], "ParameterSpec" -> {}|>]], {{1, 2}, {1, 2}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.924799527151011*^9, 3.924799559241368*^9, 3.924799718341935*^9, 
   3.924874182985379*^9, 3.9248744184946766`*^9, 3.924874572819758*^9, 
   3.924875123814293*^9, 3.924880871495632*^9, 3.924949898084967*^9, 
   3.924955163917532*^9, 3.924955402057417*^9, 3.924965349129284*^9, 
   3.9249654104461365`*^9, {3.925395601512463*^9, 3.9253956046862545`*^9}, 
   3.925398987501097*^9, 3.926679341214813*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"a8c72b5d-6dea-104e-a727-7b5a9120587c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"a1", "[", "\"\<Dagger\>\"", "]"}], "@", 
     RowBox[{"QuantumState", "[", 
      RowBox[{"\"\<00\>\"", ",", "fockBasis"}], "]"}]}], ")"}], "[", 
   "\"\<Probability\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.9248742043842754`*^9, 3.924874295509463*^9}, {
   3.924874466101572*^9, 3.924874495368555*^9}, {3.9248745851470985`*^9, 
   3.9248746358684673`*^9}, {3.924875133476135*^9, 3.9248751973720303`*^9}, {
   3.924880884583353*^9, 3.924880893267561*^9}, {3.924881095851853*^9, 
   3.9248810963430786`*^9}, 3.92488180550936*^9, {3.924881857188467*^9, 
   3.924881857996305*^9}, {3.924883117600685*^9, 3.9248831202899*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"9388ef32-38ee-234a-a78f-077870c5bd9b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False]], "\[Rule]", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{"2", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Conjugate", "[", "\[Phi]", "]"}]}]]}], "]"}], "2"], 
     RowBox[{"10", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", "10"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"2", "-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"Conjugate", "[", "\[Phi]", "]"}]}]]}], "]"}], "2"]}], 
        "+", 
        RowBox[{
         FractionBox["1", "10"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"2", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"Conjugate", "[", "\[Phi]", "]"}]}]]}], "]"}], "2"]}]}],
        ")"}]}]]}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]], "\[Rule]", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Conjugate", "[", "\[Phi]", "]"}]}]]}], "]"}], "2"], 
     RowBox[{"10", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", "10"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"2", "-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"Conjugate", "[", "\[Phi]", "]"}]}]]}], "]"}], "2"]}], 
        "+", 
        RowBox[{
         FractionBox["1", "10"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"2", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"Conjugate", "[", "\[Phi]", "]"}]}]]}], "]"}], "2"]}]}],
        ")"}]}]]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.924874204966913*^9, 3.924874207221796*^9}, {
   3.9248742736304626`*^9, 3.924874298361065*^9}, {3.9248743547267704`*^9, 
   3.924874356847203*^9}, {3.9248744763193836`*^9, 3.9248744978921413`*^9}, {
   3.924874575411024*^9, 3.924874638212336*^9}, {3.924875142102104*^9, 
   3.924875224915115*^9}, 3.924875414161621*^9, {3.924875486081045*^9, 
   3.924875502090143*^9}, 3.924880895598486*^9, {3.924880969222292*^9, 
   3.924880983029009*^9}, 3.924881099248146*^9, 3.9248818615754642`*^9, 
   3.924883122171892*^9, 3.9249551664441433`*^9, 3.924955211150001*^9, {
   3.924955252465624*^9, 3.924955268748894*^9}, 3.92495540540835*^9, 
   3.92495547681121*^9, 3.924955999920332*^9, 3.924956173519218*^9, 
   3.924956222102892*^9, 3.924965352094848*^9, {3.92496541583337*^9, 
   3.92496543888138*^9}, 3.925395610068569*^9, 3.926679344826319*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"23141020-d7db-d945-afbf-7ca35f624ae3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"%", "//", "Values"}], ",", 
     RowBox[{"Element", "[", 
      RowBox[{"\[Phi]", ",", "Reals"}], "]"}]}], "]"}], "//", 
   "ComplexExpand"}], " ", "//", "TrigReduce"}]], "Input",
 CellChangeTimes->{{3.924875228288706*^9, 3.924875294171833*^9}, {
  3.924875380366445*^9, 3.924875505056692*^9}, {3.924955202830412*^9, 
  3.924955266228636*^9}, {3.92496542286305*^9, 3.924965444866978*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"970832b7-1ab0-444b-9409-c77e93e461d8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "10"], " ", 
    RowBox[{"(", 
     RowBox[{"5", "-", 
      RowBox[{"4", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "10"], " ", 
    RowBox[{"(", 
     RowBox[{"5", "+", 
      RowBox[{"4", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9248752820818977`*^9, {3.924875408652212*^9, 3.924875416401354*^9}, {
   3.924875450200247*^9, 3.924875505417578*^9}, 3.924955169265194*^9, {
   3.924955213838068*^9, 3.924955228360836*^9}, {3.924955258422898*^9, 
   3.9249552710706825`*^9}, 3.924955409567804*^9, 3.9249554789158936`*^9, 
   3.924956002539393*^9, 3.924956175753927*^9, 3.9249562248719482`*^9, 
   3.9249653552897797`*^9, {3.9249654185074844`*^9, 3.9249654454293175`*^9}, 
   3.9253956146850624`*^9, 3.9266793477466946`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"6d663ce5-a705-844a-be3b-0e21358e937a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", 
     RowBox[{"6", "Pi"}]}], "}"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Phi]\>\"", ",", "\"\<Probability\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Output 5\>\"", ",", "\"\<Output 6\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.924955298110052*^9, 3.924955312268593*^9}, 
   3.924955424661337*^9, {3.924955456980158*^9, 3.92495548454344*^9}, {
   3.924955759988764*^9, 3.924955761881449*^9}, {3.9249559729560986`*^9, 
   3.924955994255993*^9}, {3.9249561230069504`*^9, 3.924956166398735*^9}, {
   3.9249562158152657`*^9, 3.92495621924028*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"09e97ac5-de05-e14d-84e9-5ae498ae6b18"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    InterpretationBox[{
      TagBox[{{{}, {}, 
         TagBox[{
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           Opacity[1.], 
           LineBox[CompressedData["
1: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
QC8tzPxvW6ytdB3weNuXy5/TwhbFuOhLK7UgQDcu6fLWQvOy/CtSI7UgaUx5
IuWrhVGHCiPnkmtB4/hQTFWAFp6l3IOUTbWgk9sY6XpFC/XGV7v1rKqF7V+K
Q/mCtPDblrMugm01sPtqWNCRG1qY0xc0w2lXAw7JBmf+3tHC9Kdz8ievVsOx
CXW3rLtamLpuMnODWTW4UTccMw8n9e//uPGdRDV4l/2wS40i5xfL0bhWXgUh
/XmGevFamK8fIu3NWgURkon6Uwkk/9NTP+8PVcL9o7f+C0/Swnl/uc6m/Ep4
sOBMG0kl9ZjlUjl8pBKerxFdH/hIC33GllIOtlUAw2q1qHy2Fhp3WWzmyKmA
msTPgl05WrjUMsXZcpPMs4odHFJ5WviZM/XVjd0V0ONZvqrpqRYqrzMKCFKq
gFelWctnCkj8Vqvy3poKGDcMWqws1kKeL047vw4wYDrU46NLiRYG13puNKpg
ALPXfpa3VAvZSl1qcsl8/cNpy6hDOYnTF+wZPgxYzqa8YWNooan8rf7jTgxY
9Ulg4GkFOf99dj65vQzgDZhvW67WQk4kUufkGbC2YajxUS3pT9DZwwvCDBDj
aaoxq9fCR3Gi2bzsDNiw/xnjWwPZb925JwY/6EBJSCtNaSLnNVkXETFLB6Wx
sCKjFi20fB116etbOqgp+OcRrVrItz8w4mwPHbQ83LJj2kk+HacJ9mY6bH1u
83BHpxbW3v9UWFJJB/0/BimTXWS/sbjFS8/pYLiTFh/WrYUx1761H8yng8md
DdHavaT/xbFmljl02NfDHf6uj7wffRwhzhl0sBFbuh08oIXSJn2hdx7Qwd5x
8rrqIOnnviCnjmQ6OGf1Bg4Mkfs5HsenkEQHV6L6YsAbLfz//zf7P+iQvIU=

            "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
         TagBox[{
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2], 
           Opacity[1.], 
           LineBox[CompressedData["
1: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
//9/s/8B4c/IVQ==
            "]]}, Annotation[#, "Charting`Private`Tag#2"]& ]}, {}}, {
       "WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
      StyleBox[
       DynamicBox[
        (Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               Line[CompressedData["
1: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
QC8tzPxvW6ytdB3weNuXy5/TwhbFuOhLK7UgQDcu6fLWQvOy/CtSI7UgaUx5
IuWrhVGHCiPnkmtB4/hQTFWAFp6l3IOUTbWgk9sY6XpFC/XGV7v1rKqF7V+K
Q/mCtPDblrMugm01sPtqWNCRG1qY0xc0w2lXAw7JBmf+3tHC9Kdz8ievVsOx
CXW3rLtamLpuMnODWTW4UTccMw8n9e//uPGdRDV4l/2wS40i5xfL0bhWXgUh
/XmGevFamK8fIu3NWgURkon6Uwkk/9NTP+8PVcL9o7f+C0/Swnl/uc6m/Ep4
sOBMG0kl9ZjlUjl8pBKerxFdH/hIC33GllIOtlUAw2q1qHy2Fhp3WWzmyKmA
msTPgl05WrjUMsXZcpPMs4odHFJ5WviZM/XVjd0V0ONZvqrpqRYqrzMKCFKq
gFelWctnCkj8Vqvy3poKGDcMWqws1kKeL047vw4wYDrU46NLiRYG13puNKpg
ALPXfpa3VAvZSl1qcsl8/cNpy6hDOYnTF+wZPgxYzqa8YWNooan8rf7jTgxY
9Ulg4GkFOf99dj65vQzgDZhvW67WQk4kUufkGbC2YajxUS3pT9DZwwvCDBDj
aaoxq9fCR3Gi2bzsDNiw/xnjWwPZb925JwY/6EBJSCtNaSLnNVkXETFLB6Wx
sCKjFi20fB116etbOqgp+OcRrVrItz8w4mwPHbQ83LJj2kk+HacJ9mY6bH1u
83BHpxbW3v9UWFJJB/0/BimTXWS/sbjFS8/pYLiTFh/WrYUx1761H8yng8md
DdHavaT/xbFmljl02NfDHf6uj7wffRwhzhl0sBFbuh08oIXSJn2hdx7Qwd5x
8rrqIOnnviCnjmQ6OGf1Bg4Mkfs5HsenkEQHV6L6YsAbLfz//zf7P+iQvIU=

                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Line[CompressedData["
1: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
//9/s/8B4c/IVQ==
                "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{0, 6 Pi}, {0., 0.8999999999999706}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                Opacity[1.], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0, 6 Pi}, {0., 0.8999999999999706}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[2]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>], 
        ImageSizeCache -> {{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
       False]}, 
     Annotation[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]], 
           Line[CompressedData["
1:eJw1W2k4le/XlcwZy1yKYzymg0S/ir1FkYgQJaEiGlASJUqlkkzJPESEIlMS
55jnOWOUMiTzeUpp0CC9z//D64trXc+2773W2vdzWa5D5piXlSsrCwuL+2oW
lv99v7lRsPRVT6L+x4eJ5Bcd3qp3P7Ut8AN/4ncddxIdKhpl18gW3AbnP8Fa
9sl0YPu14BRefw+2zdrOhqbSIU9g3zbugniYiXk0mpxOByuFp8I3E1NB6sUL
/vBHdAjYeNMvqP4hSE3Mezk+oUMP9bmLfvkjiMosWRIopIPslg/7l/NzID8q
IfFhKR18cS0wMnMh9ISO8boqOrTvNVC9mJgPqUrw2aWJDhEq5bzJxkXgY+R/
Pe4lHbYWW6z2ry+GVHrjXM5rOkzozPw6qFcCVbuEBBM/0CGs8spn3fLnMBnj
PnJygQ5jLfkj3/PL4NG6ttW53AwIMd81MKBEhxYNa1kJcQZo9b9rL8lkwMzJ
eV83RQbcGl1Tfi6xCo7c1Nd6aMIAmktmgaVwDbi5bNkfZs8Awie1L964FrR/
5q+19WBA3G/tNt/6OjBeeDgYHMuA01VBRtNX6yHdRvLaXC4DMKiz5oBeA+Rv
FtioWseAeXaXF9rljfBR5/op088M0BO6n7mY3wKMDV+Cpg5WwNqB0Y3HTrdC
aNK/f5svVMB0nHJSr1Ib6Cn7vXCMroCoDfVRRZnt0PhEp9W4uwImFb8EeiZ2
wbbfzWuOWlcCfX7HrxHbl1BVShm/41sJEfkhPubC3ZA7a1gellQJKRJRW+KM
eyBmk7/OpqlK2JWmqHqhvheGO9kPeAZXQVFQ15yqTB/06H/RdyyoAslj53Mm
r/aB0ULGNfk3VfBJroZio9cP23zLE7ZqVkNCrq3E5vIBsAy+YH+CWQ1E6U2O
L/lDIG2daFpvWAvW0jP26cKvwZ8Wp/f8aC0wQk0KLS6/hvKk603SQbUQ4rTm
YIHJG0h/+viQe3UtyHPfe3L6wzBsK/3y/DHWgaNDitm0+Cgc0DYyyTxcD03N
f9Njr46CxUUTqti1elDVdPpuND0KHndPK7Hk1MMfdsqDzJIx6OG9+Yv2rR46
h/r9NHLGgcet7vOf+w3gfu1Q20eDCQgO3l46N9sIKTqh53ddmAAvtf9oV0Wa
oJvJkEp9PAHlT4xlb+xsAh3bDd5mAh/A8vL3xwOpTcCmMiaZ9+4DFLn6br13
qBnSB1zOuPtNQd8rs93sUy3wRvGswIens+DscS3VxKQDxPX9y/rfzUIL82Lb
dGAHHLQJdmrknQN57QdTgyUdMBiUUJh1Zg5O9QZx50l3Qt+bWgt31XlwW9kT
K7LSCZ13haI+5jFBLmtF+lbLS6hdeCb4M/cThDVwXc8w6YWBt79DbtksApcj
b/bbs6/gUUzCqxvaP6GKbbOoUfAo6I98Cv99fwWCtRO3d+yahOnpypnGvBW4
8ijYosxuEiI+hxpENqxAxf37bYknJ2FsteJ32a8r4NPNaWUQPglByk4O5lb/
QLj89gnRgUl4X+EmYsnFgsTg7ssvnKZAlvv1h4xmFjxzqvFYvcc0/OSrEQzp
Y8Gr1XxnNa5MQ+fabD2PURaUE/KhREVMg88Gn3jdHywYEDI/JVs4DY00wb2d
8qswtXvwV8LCNLjamjz7HrwKuV6+OZDkMQM5meVBJoasWPhbVYL7yCwkSfil
q1qy4ibWMx7JZ2YhInJLreARVqzsn3ovFjALvpef/Xvty4p26szQl0mzYGT9
9MrJXFZ0ORB0U31oFiZY0wNChVZj4S9l6fi9czB40THFc+NqDP7ZtJF+aA7a
P22otFJZjQfGmK/q3eageDjxj+Su1Zhw1/Rd2I05CHp23z/v4mq8sOLqsESf
g43Hbl/sHFuNoRHl8ZyUeVj7eldCEbEaWTfuiItRnweOfWzlMb9WY8y3eDnO
7fPw8b9rSw7r2HCY55VXivU8VApd9v24mw2JogsmwTfm4VCdpw9/ARsKu9yj
qo/Og5muWswigw1zUg0T2OfmAfOZJYMtbLgh59mz2q/zoJTo/vXBezZ0HU+5
/J6LCT/OHvOmibDjRGLR8XZNJsRI2561DGDHfI9DJZQrTDhlluf8M4QdU8qy
4lZuMQEusuxPj2VHAQ/P9KpIJsx352p+LmBHuWb1nsl0JuDVf4uR79mxfemo
+as6Jojm2XzQ/cSOIoejBFrbmMAcfNI/9psdy34K70/tZUKcus1zmjAHSt1h
YVsYZwIx8vhC924OlEtjiKqtMKGee8XVz5oDjfs/V2uyExC/xdp2kzMHiuV1
7BfnJWBn+F8dr0scWNaUtRgqQUDCDquf/E85cFj4mwXbZgI83XNmX5Rz4Km3
e/xF/yPAMGb5tWMTB2aYu/DxAAGfmNn0glEODIlL04o1JcAo+Y//PiFOFOjj
Zv7nTIBki+XpH1KcGMBp0nHAlYCFxazDD5Q5MakrPMvqFAFJppY7PhlyoqRL
pOjCeQLO+mapxlmS9e56sREXCdiV8XuD/hFObHo4NMIfSMDnX4/+hvtyonGY
QHrxTQKa5X9/3HKDE+1tBNkG7hCQvN9idCSSEymlDRxD4QTsfvKrWu0JJ0on
u9VeiSUg5eC+oK635HlqEyvWmQR4B2eevTDLiT3VUZb+2QQYF/10lvrOiSY6
+r+CnhCwyJlp4MHPhUYySZq0QgJaN//UFFnPhYrrhEoGiwlIdTKnVClyoeQa
cS/H5wSYlC2x8hlw4aYdvYH8dAI2fjD7+tycCx/xtjbqVBDwlT/jg4M9FwbR
XqtDFdlv21I/mxtZr8l8oVhDwIMTZo1Pz3Oh2MltBz/XEuAT/fC5TRAXUjgs
+BPrCTCt/vFoOYwLjSVYX8k0EiA9vzf2USIX6qUHPA5tIuC7yMObZtlcyBWp
e7O/mQD+pDOlks+4sDM93meuhQCFjVunZqvIet1/ER9aCdDPWC1S1saFx4rN
++raCLBV6Da6+YoL7fjTdgS3k/7nJvlYv+dCjy97O5U7CLitfuKRzEcubMya
u1pK4vRnmgMLP7nQWcbUVq6TgHKdv6ur2bixkjNgnx+Jexitm8MEuXEgr92t
gMRz+jHH7TdwY6lQ9cM2ErM2ON1XUuLGwAXJ5VYSSxqrNPzYzI3j+RO+T0ms
1fFjsRG4Ucrdeq0Pifda1FPu7+XGIObMy00kdukPtzpqx40HXtjlF5LzBNgd
uk47zo02P+IKZEkc81bu2V9Pbgy7Ndh/meST7/T5fYc/N74ibmwsJ/k2f6gQ
SrrFjfm2e6Jek3qMut02cI/mxphYPpURUq8fTKtzOg+48bPkt89NpJ4CZzc+
ZMvlRtevDpPRpN54sZTlYR03Pi53cXxD+nNwOUjDq4vkH7s4b1VHwLkgM2e9
N9wYnDheVET6mxHyoebNZ25UC7RZEq8kgMFbuJCzzI1LKvlXZRkE9Ef5b/Ll
4sFtEWv2ry0ngC1R6OpaaR5cqyz2PqWEgA1SIwXjKjyYyuL/ZCu5f1sePh4t
0OXBs4XmL8sLCDjxBPT3WvCgouoewxPk/l5RW+MpcZgH29dypd0n9zu+eDB1
5gQPLs+5emaR+99K9/h74woPTg7XXvNNJWBc7z81q1AePPhdu39LEgG/6tiO
SMfx4NXJLSVv4ghQbk+urMznwY88jju6Iwm4O9x2+fs7sr9P7z7vIAIeOcbm
NczyoOWh+59sAwionHB+e+8bD55Z9+mINHmfifmlbeq8a/Dp0uGeo14E7Psj
//vE9jW4VHtzXboDAWs3XL/4OnENPprYZ7FOi9x3IfnkrOw1SCm3utGhQsB1
jtYq75I1qDa9N9xFnryfn/lW83WtwS27WFz/Eyegrykx3ICFF12GWVjPLjMh
2qs4I/cELyrLNs9J1zCh3cWmye88L444bXvz6QUTWO2XZoyCeFFszWjbgwIm
eBvpqY0l8mLQX1m2rFQmWEm0la3r4kVFj3OG5v5MWNcw3hmwmQ/9DtxdL6PO
BLPyGwt7kA/j16+vlpBjQnC+wloxcz5Ue9n75rsEE77Fn7ErPsGHB3leTx5k
Z8LAmZ/vpxL5sP2cjFbX8DzEiAou7WPhR+UN99/eCpoH4VMgI9PFj1krgfv4
y+cgsuzgDeE3/NjOfUIwOm8OeNi9pzin+FFSaFGPJW0OWNIfPfm0zI/v5g6a
pdycA+IVt1alqgBu6b5uPbh/DhoNBnbahQlg+CPhiNPTs8AI037WLC+ISitP
1n5mmYWTLm39y5OCKBg3kBnLOg3iJ2Q8Xs8LYmPYoBPr4hQ0u13ieP5ZEGNE
6IePvZ8Cymnqf6eXBfHwj9cPl2um4N25Ow/erBNCydMeNg8CpsDy6p6TL3YK
oaJGJ/+Lr5Ogk9S24pUuhInxO1P/G/4ArD1t1A+H16JL3Zrx2aj3EOFUPpyz
uA4jYs8zeQTewKddunxxP9fhkZ30TaHzr8Fc9QUEr6zDU7Qd0+LNr4H3V8kj
Zx5hPJK+89SJwNdwN7rQU4IijB85b3G1E0MQ0pTNene/MO7/cefrz5eDcF0l
VtmzSBjFMxNjxDIHYEJI+IjDC2EU9OlEmWsDYPAzOtK0Uhjl5Qc1jZwGgKUp
6ptCqzBeV/2+Zmj9AFx1DKseGxPGEY6sF1vj+iHg3g2r/QIi6EHvHVSJ6gO/
pXP+2p4iGCUjttCQ1AMn4hwUMnxE0Lr6zN+fl3rAdotxn8BlEZzxr5K1PdQD
2uc3KDNvi2DHibXcoeI9sPip+c3DhyL41CvrSb1mN3hOr/9P4JUIEg+frlIx
7ALHmxxTAW9FsOwMt8UURxeYy32Jmn8vgsPrVT7/au8E1WPNs02fRDBjz3C8
tk0nzI+cTQjgEkVh4780ltMd4PqqaWluuygOs+5mO5/bBjY+RZl2O0XRlbqT
V8KnDYzWJVs0mYhieHR5BkW/DSj7z+akHxDFCxqROcf6W2G8U9LOzksUXegu
AlmsreDQ6PWiMUMUr4pdnM3xaQbrEokLadxiONBh7LY2twG08y24FwTE8DG/
fMTEtQYQzrmZqi8qhmuHfvnI2DfAQNKXphGKGCrfM+b7uKYBbK+3iW7YIYa/
N83/aPKph4P7L5UneIrh5tv+d7oP18HWvYVmsz5iKG9eXlC2rQ4kdk2N614W
w53uISAsWQfDW/dzD90WQ8qt0hmV4Vo4LE21F3kohioLzh9HnGrBceH1n3v9
YuiyTrh5/eoa0J/jj3r/Rgx5Wtbn1XZXw6YPRnKa42Lo/Nf5sl1qNYwPFpn1
EGK4dGNLr8P2ajhaHZLKzyGOIzvrfPuvV8HO8mpNR15xVGYdmxe2qwLKs29N
+WvFUSyt/+te1SqYyHL+ZLZJHJdOvjud8qYSXMK3wt2t4uh2+8rqPqgEo9ue
/cP64ii8U1S/Y30lyF175Ka8Sxz9FK03Vv2sgCkfwai2/WR/w0PKYaUV0Oy5
W07ioDg6px37ezK2ArLdA8rdHcWxqzey0cC3Ak44zI5znhbH2vubjo9vq4Dd
thsv2J0TR8FV+1/mbKwARUsb7hw/cdSI2nng1OoKmDWs1dwdLI6pomoN77sZ
0Kr3oyk2VBwVs84ox5cx4LGuqv1UlDgWGf3MN0lnwEmVhOvBqeIYKBSxkO7D
gFP77+i4ZZLzJUfT0o4y4Iyf//yeJyT/LdvPXrJgwNkGByuBUpJPe0NEvRoD
vOfMORYZ4jjg97BUcyMDfASAMVArjtp/pLwCBRhw8bAMJamTPI/vjFjeNzr4
X1s7GNAnjuFSFhg+S4eAnNWhTq/J825/9TIbocOVrm96O0fFkW3zi+rZPjpc
/Tr1RW5SHHUtRQyPtdEhSGIoi3NeHHtki4TotXS4Dq2H5hfI897t1vtYTodg
Vzpf13dyPnfG4EoxHW7dza0r/COOw9a8Hz/m0SGkOPlC9CoJtMxyDGdk0yF0
KIx6gVMC+Rq+1rtk0CHsb+CIHZ8EStmrxxMP6BAu63Vv2zoJlDa9J2SVQoeI
Pc67pCQkkC22Rjc2iQ5RXvt//dsogbVWAXwvEukQHbszf0KO7P8kN+Y5iWMq
Nh9tUpbAwFbzriiyPu69nMhjDQn8PBdSakr2S+AUbQvVkUC5A2l7JsjzktQ4
Az12SGC427cbduQ8KdY/NSx3kv3T1xzJJed9cGluUstEAuOfhXQMk3zS04YT
RPZJYGgsrXGW5JvR1GH201oCP6ZP/jdA6pHJrGR5e0gC3XKeSqWSej0SKnhe
5SSBpmL5joakntm6ae7prhKouEl1vpnU+/GRqA03TksgDkblKZJ+5N641uN6
TgK3nTwe5kr69fSJd7CJnwTmmpr7BJF+FnQf36oSKIEDbhJ7Lq5iwLP1u9M/
h0igbquq8YoUA54b6Nr0R0ighmOJVhi5Ly/clLhexEig8OHkyB96DKCX8Jy9
nC6BQV6hfM7kvjHe/JF1zJZAm9np947kPlb+I4bwqQSmalhG/BfCgNq93cBR
TurFfqXu2jMG1J+r/TpbJYHtzuXEp1YGNMYX53Q0SOD4Z+ZW3XEGtHy4L3Cv
WwKjlhrdDwpVwMvLB8fWz5A/X2mjPhRYAT0P99xfISSwxf60r1hyBfS1bDN+
vyiBPBxXxDXpFTC4Tqowe4WcZ6+Yy8JSBYzkvb+iKSqJ2g9mgqOuVoJnqP7T
+xskcduPfb+fZFcCy8nkN98pktjjn32h9iV5/xUOaDNoJFbHDxMyVXAqvXVu
5x5JPBJr1fulvwqWr8iLZVmQ/dJEa2ZYqyH8yHUjTltJfC76YfuQVjUUSe5I
6zgmiW7bm5fSY6vhR0yhjU2AJLIEhF/vPVEDIed5r7+4LonjuUOrb6XWgITV
yULxO5IoV++6QntVAzsEZHlGYiWxfHp6bbFsLdy4E1fjWiiJfnpx9+KTa0Hw
SqCy34Qkhjp4hX15WAcZDsN2b2Yl8fYGq/L+xjrYvF335vYFSQwyUc1Qma0D
25+fx/79kcSrURG7t2vUQ6q3S2yIyHrkMzcv6m6qB2W3vSxJJuuR68EDzYsc
jWBoKTFYWbAeTQyP/50aboYf9pqyz56vx1f0J4Z+XC2Q67rnbA5jPeoW6Xsd
12kBwcuXeKKb1+PS9O8R0/st8C7rjb7b6HqMzb3XYLq/FXz+JOYI8W/AZ1VX
/IpH2iArW/LSCY8NWHsD7nFv6QLOv+s3CKpKYXvCdY87R/vAtDZtIlhLCtXO
H+qLD+6DsBuyT35tlcJMk0Dbtpw+WMujovNhlxTyyMeZx3zqg41i2yxfOEmh
9oE3b2oC+0Fb82Cww30ptBz54LI+YwCOucYQj39LYZ/31ghDliGo7uKtMmjb
iLfPCLh5L78FO7VT5b40aVy8LLD+FccHuG5VmHZaSxptA1RitCU+wFO/b7ec
t0hj3rsm43AV8vel+isHTLdLY9ph2WqqJfnc9v6ilLE0/nuaGcKT+AFYgipV
mxylcUex6oAJdRJy+/gfrouQRuXH9cLZO6dgYMk6hOseeV7zoRvj1lPwb0Oi
19/7ZP0FQ3MB1ymwcZPVn0mUxpNcXx323Caf/9F9y8iSRrXwMluVDvK5/FGR
Y1XS+HCTm8sty2lY8Su5U0RII1HmejTFcgbOXipQm1qQRstllk/uR2fgg/+T
Xomv0lj4ozSY4j0DrYFpEjd+SeORO7VyDvdnIPrG3ScHOGSw5NTFkMmBGVCI
PN72e5MMOnJF7pO3mYV92eu4d1nLYJTC3n3mO+egNoc//5KtDDpIR/WetpyD
zU+49xcckkFTW3DzdpwD8af/EsScZTDd7dd/uv5zMFHMVJo/I4NVbgbJyUVz
4FvVYBJ5SwaF1QUEi8Xn4cHA+ZA3dBlsqa0wUn41DzJnzCqHKmUw1dzogNXY
PDxaLf/5VQ3ZvzON99jcPORpDdr1Nclg4KEpka1/56E8aqtiR68MluFuaqUs
E/rM/jZVzsng4oBntdAZJhyYfPWLQcjg5PlD8rk+THh9uUCNviCDPmOZk0qB
TBjLdYot/S6DV6MvSr8JZwLBVe9SsIqCU4GPb7GS+YOj6dbqdAkKdtalJ5yc
Y8IdByfdBxsoOCPYIOH0mQm833RPp2yiYL3z9tH/lsg8IjvXlyBPwah/rN8e
sBEgfW1vxj1NCh6RnCuR30hAprjcYKQ2BZs4hQsN5cj8X7TMHaFLwYHLjpd2
KxOgNpZ/LlSPgq6PX+z6vYWAbXqCBjf2UPD6l/vWEmYEVA3M+lwzo+A/D00H
h/1k3j1T9/iqBQV/nv388oYtAcbJ3oIBByjodnaq8aozATa/BsZ8jlKwu45R
rXyegKGo/HXnXSg4xNs4EelHgL3SLeNzbhR0Gj+6/s1lApztdAs9PCjIt6j9
SCyYAI/SxCsnLlGwUXJS1Og+Ae6/47MPBFAwlxZ6oYzMny4Q99LoKgXzb+VV
CJD51KEteqPsTVI//ZfvPdPJ/M1/b/faEApONoo/v0DmW2vrSM9Vdyko/O2s
1VEy/5qO3K0eiyL5GzoPT+cRsJsSOv3yPok/CZcHkfl5p1sIf3UcBQPOrTX9
V0TAf1+CHVNSKHjq3+MLuaUEaOvcuHU3jYK8MVvYh8oI0Lh8rcA/g4LPlBa1
Z+kEKLFfWTn4mIJq208dL68iQM40QMEkj4J2yZ8P+ZH5XzrSf59uAXle745x
yToyzw9c9FUopqDPZMtiRj0BYhJ+D0SeU9B9YVeEQCOZhx0vNLOVUdBDNbvQ
uYkA/szzn77SKXjg11qbuGYCeGbPiX6opKDy6JeLRS0EcKid1e+roWBL9If1
ha0EsHp7nqirp+Dn1Y3botsI+PviTERRE4ntcvsPtRPw88+pF2mtFCxfnJ1k
7yDgG54cjeigoN8lPo84En++6cZx5SUFn78aP7Wmk8zv7a7qHr0U/K3rNuJC
4lkBF1uHAVJvifGGDBJ/sDl2Ze8QBVuhWaqJxKOJztnbhinYQ++e7yDx8Kjj
S+oIBdMmPyqXkXhQ9sgP8XEKupw0H71F4j73wxu5PlAwRM+WfTuJX+Yf2r00
RcH2h3np/eQ8bYt2ntOz5D5JqxZbkrhR1zbuFZOcN/yL7jOST22ATXXjJ1IP
lv06P0m+lXVW0yVfKLhrYDifQuJyjv38md8omPrIPl2T1Of5Xgud6CUKZhgP
CciT+hVGmTte+01Bro7olWVS79xXe2+d/UvBWU8eLzrpR7akaYETiyw6p/84
bt9AwINHu1f0OGRRd6POzJ5aApLmjBTUuGVx+JNMQEI1AXHqhvs28Mqih3FJ
RkclAeHl8OC3kCzy7Lr2fKycgJC/es1zwrJYVKf+uPYFAcE7d3x6LSaLNseP
6996TkBA51b9MilZFF/ocK0pJOCikO6JbGlZDHpvvGpzPgHnbbdExMrKouXX
Yeu7uQScGtccPU+VRd4hhy3zjwg49E35isYWWVy+DAlHEwhIERk75rRVFreu
+nS7KIaAcZ37xhHbZdHIlJI4FkXet0t/BAkDWcx5JGY8GkKA70pHZs4+WbSo
KvnqSN5fxqagkMH9sphe+VqgyJvcJ9T2YD8gi4KaWZnvPcj5b6ToHD8si1fj
dY9PHycgmsujbaO7LI7cbMj120f6TZUpMD8ti/Z6F+a7TAiQ2PsqOsCTxGoz
a9gNCUgP13MY9pFFDc8ldVFd0o+1/Aux12TRYdfJzCYpAjo3FArzJctigmPK
M7cpJgjqH/+1/YEs+g1VxPePMMHaSWz01ENZVBJP9JAZZMLww6s5rTmyOFTb
/9/xZibMKVhuC34ui42PO0KuZZHvW80vTn+6ZJHvoVHydkcmmFplGSn3kvol
2dv02DAh/Pwh6qEBWXy2yeCQyV4mCL+oW3wxLIuvEg/nTOgygbI9+qb3jCye
TY7laRBgAuzanDfHIof5yn9u7mHMQ8xy46aJ1XIoyF5JHy2ch9kS25hhDjl8
1yRv75A1D1EU/8AOXjk0K/ygJxQ1DxP/ai3yxeVQe3lcwcVlHoIZ+76d1ZBD
tu/tAw1c89BGO6X300kOW4T2BGwymIONM3+KPx+TQ6Mbe1cWN8+B94NwhTlX
ORTWXbv5mcIcSPIVCwyflkP/fzzK39bMwZn5pfcVfnIovUC7e+fVLPBn3bx1
NZJ8vpEvVth1FqwlH3Zz1MhhO3pohPjOwOf8WRaol8PIn17r6lxnIMxAQ8uv
SQ5zn6p3TNvMQKN7TcxMhxxuCKxx+6U1A9plI4daX5PzT/xQxE/TIGojOXln
UQ6P3bP/4X90GobD7//kVZDHyb2HL85un4Kjq27JrAuXRwv7RDndjgkI2z0Y
4GCngOM6nOvTQt/CMykZLQt7BTSWtnW67PoWhr6dnjE4ooB9fyweHcW3QMlc
ZaV4XAHjjdK9zX8MQ9k/VcVFTwXUTVAkco8Nw0T5jd7btxSQkLl2uEHvDfyn
oqlQUqqA7/877RrzbxAcWQPeZpUrYJcK/Z3pu0EIftMclVChgKO7XtBE6IPw
8rbDn8A6Bcy1iE2a9h4El8nbPSZdCkhxFxoKnnkFUamj/qOTClgfXcP8PDAA
0wJh3dzCinhZJU0zvL4PrBvCDHaIKWIH3eVXfFof1PqGl3hKKqLYl4sLjQF9
kDwSEd8vrYhLJQrtt3T7wDLvnlOqmiKK55qOlRT0QsXu+AUNY0W8Glga8i+z
B6ICMwQO+iui95hqz/5DXfBXI/NaaKAiVilm+elJdcGpycyvlUGKGBJQYHj9
fSfs2ps1JHNbER24hPMkTnfCb/HHacz7ili0ao1G1PUOcHmeT7uar4h8vNkD
Gxra4D9muUX2uCL+/mJ6PiSiGcq14/dnfFBELRXj2jdHm0HnygXrB9OK6P/W
o/z2lmbQEtKyiyMUcd5DWfvPSBMo6+Y53vqpiBf3nPliurkJJG+kepwQVMKk
Rd6osYUGSOi87HVsnRKKuUxyKLU1gKio/TlHUSWMjVr83JfRAGufiF6w3aCE
Z+vx/H67BuDpjgzYraSE0TF6lr8b6+G35PW7CqiEStkjYQYldXDRxTmcYqiE
7XfReii6Dn7k60du3K2EQT+GLg1418Ei/okWNVPC7RuHV3No18H8CZ8kjoNK
mMHN/sC8ohbci6xSWA8rYXmh6j/5B7Uw/UvjwcoRJVxsOfre7VotTIR9fPjj
uBJGznMpUffUwvCzE0+mvZRwaew81/6KGji4bJQ34a2E5hymPjm3a2Bwl2z+
6AVynr0BBQM2NdD3eqxo8LIS/lWttSz9Ug3tKwfLm2+T/NyNdJO3VIOJiS6j
PlQJj4SH8D3nqobmeyKV1eFK6GH+jiPnXRV59fpqXtxXwrLzcnMbbldBhene
luw0JRx/V1pgNV0Jzwwsqu5nkPVEfTJbXSU83mpdEpSlhC6yGjOhKZUQo3A4
zT5PCVv+xneL2JJ5lPW0H3+ZEg7TZv+p9leAyy9Pjz90JXx0MJc99HkFHP7s
fXy2UgnVGvY+roqrAJNRf4v6eiUUZnrUPTlSARRGqKLvSyX8TZh2JH9ngHhx
hNTxXpLP2gKz5yMMEHgcvc5ygORflqWT1cyA5dikf9RhJWzUfM8plMyAxbAH
30VHlNAYXc3CbjFg7kYGc/W4Ek76/y0Z92bA4LncoZEpJUy/+yNaZB8DOt0L
utpnlZAvfe2hHzsY0OD0rKGMqYSM5+VjRaoMYNi+oD/6pISWiow9u6QYUGTO
KLz3hdRLTLS8hJ8B2UbVWVe+KaGdzK89yywMSN1en3x6SQmDxas2bPpGh1Bq
++1df0n9Wmlfvr6jQ5D0y0AtFirelvOWy+6jg59Y3/lNq6k4Ylr5R6uNDp78
gyd5Oaio3bn7blItHVzYh51+cVGRRdt36l05HeyXRw5Mr6Hi0viw5O9iOuz/
+n5vPz8V099rbFvMo4PJ/JRBrRAVZwacLJuy6aD/fk43X5iKdi/93c9n0EH7
9Ue1JDHyfP3au8sP6KDS/UX2tiQVjcYS65xT6EBp/i7hI0XFoswUgfQkOohX
/RI4Kk3FU09DLjES6cD//C/7PlkqHoE9q4pIzJ63anmbAhV7Gr5lB5H1yw/Z
FxWpVBSr73RXJfstJnDPCqtS0WVGz7CEPG82km90FY2ch29cQ4ScZ+yW0MAn
TSrm7vJVtiLnHQwUaX+rTcX4uU8Kp0g+nT4Sta26VDTPP77+CMm3/rTUi9Jt
VNQrk/ijTOpBPybzNEOP7F9xray/hg5Fh+QzIpHsL7kV7VrpkG1JTQgwpKIH
G/uN0l46pBirRZzcTcWy9HenP72lw319zWDbPVSc1x2bXDVD+rVli7+hGRWF
jx8aXFgk/VL976yGBRXd9BsVyv/RwVdW74SUFRUn05oY9nwM8JA0cOA5QMWu
/RoXhtYzwJ5rj8mkPRXbBbzGHLczIOEt6x9BRyrWPrsQP23OgKGCyny9o1QM
7R0I8TzKAJsDGuvi3ahok29geeUuA6KV5psaTpH+9x6oZM9gQM+fzIufPaiY
s6cnPIzOAPMMsdE9PiT/Jftz8UwGhF3ojfL1o6LgxwPs6zkqoN3krmGmP5V8
P4WzpspUwO6FlcfLQVREqz/SyYcrAHdMny8MJ/081Vnh97YCrgikK7yLIvkt
612a/lsBVROH3nDFUPH5t0TafplK2HanS/9YEhXzNR9vkjhdCZsHn3OL5JD1
FxoL3HmqwPuJZ6VBLhUDP0ZPP9WugqIAJS/PfNIPtr1c805VoCqbMtBSQsWB
0J3W5vQqUDh7I82/loqp1yk38vyqwcVQzyqngYqKyxCf+6QaMkWX2Aaaqahh
dnPuwbtqkK46dUqti6w3SjRy3VUDEjxWW8bfUPGqt4uEmlAt8D6S7tj1lYoW
UMn2nK0OTP2GA71/UDFKPLxjh3wd3DGN0Uj7RUWlV45p23fXAccXzrif/6io
lmcjnXSnDv7pLTjn8SqjsTybYq9IPSwOVf0QVFDGoA0t114bNoCBwYH/OKnK
yHsz3pfp3gBRucTlvypkfcQXXeeIBlAPXL9qXlMZxdV6Bz2GG+A05dKaBj1l
5MsIsRH0a4TJM9rSFw6QWCRLVKG+CQZX5e15E6yMNeK++VyprSB/emdY921l
nKXqGGZ3tYLPwJuXTaHKOLJauTdxpRXW5nDZPItSRrO9AYrXjraBhdkJx7sp
yjgh96DXSKUdWuNkzus9V0ZFSomT/ssOoKskpDz8oIwukenrWvd1g+W5qeSh
aWUUtHNa0Y7ohpkXWsl888r4e+DAne9d3SCysyvx0mdl3Bs45aur2APnDrLG
7/+rjC27Wo8mPOkB6s0z91aJqaD6v9cmBaW9kDiKt46aqiDvmjvLTbP9cOne
nJdMsQr6z20iXLJfg/vl9G3s51SxRBfW3xV6DyFsX6q+n1fFuuV+rT1y7+Fx
uIHBtK8qZq/m6GfTfQ9zaRPGLQGqaCB/ao2Pw3s41Sh34E6IKjK9Uj+r5byH
03xPvPjSVTHiuJUxsX0CPNOKH4l0q2KkLYz6H/0APg31/ApqaqgCFeZ7Yqbg
nVLbPlsNNWSuF+lJy54Co4juiFub1XDL+9LvM+VTIHzoHf/Mf2oIoiLnzEam
4Pmn7/yPd6thyvmLG47KT8N3CaqAsrMaDtkNn7j3bBp8z0YKqN9Xw5FbpkeG
amZg9FWshWOcGi4cuWa+pmcGdm9PiYxIVMMkZ89jKuMzIMrxRGAhTQ2/QYEt
jWUWypLrBYqequHM4YFfBjALP5u/C2g1q+G4aZaTF30WLkk5COr8UkPOIse4
sZQ5WBTHcdqyGkre3m3u/mQOTgnLFVH/qWHumkPpb0vnwGENYSHFro4tO4mn
117OAf66HMkmpI7Oo41urStzwPEqmb9fSR2lG04bUg/Pw9Weq6OdKur4nVds
u8WJefjZcbygWV0d3bjKVR3PzcNcvco+hrY6CtZJp+jcnofOoorwh6iOih+f
8XQXz8P9sLe8Zw+q4zvr3vY7rEzgDal5d/KwOrpkex3S5mWSeSzz6XFHdXzG
We3dLMIEX//TZnYu6sjmNP45XYkJ9u5/7uqfVceDo0eGVM2ZIG20fg1fiDrm
/+H8EHGPCYnwb5jjrjqGzSpkP05kwtrtH3JZItRxRqqT8fghE1Zr5Zl+u6+O
MeHc0YeLmTC9aXvo2zR1FHngLRrazYT8P/bcuWXquOurnPwyBwGe/d9iPzDU
MfJ3+/llPgLU8yIoUtXqGJ3tfnpEmIAi+/rtUY3qKFxlzW9AIeAZnerp26uO
SefNd4ZvJ/PuvYbfhQPq6PPr7fcoAwK0Tx65PTekjv7FJp0+xgSUit9LdxhV
Rxb97kfvrMi87/ezbyfzf/13nlFxJ+CSRbRTwCd1THiqmaJO5tVtiqpE6Rd1
9JNOChQi82zFoBM79ac6LssdpvheJvN3wa97x/6o4xivSdfSVQJ23Lq/MWVF
HUMth34eDCagekuLrgA7DTmlsx/Rwwi4yne00YSLhkZTUgJ0Mk/j1G/L62to
2FL8+GU8mbfrYtRPfReiYbQFn/zXZAIav8amvN1Iw+CTe5WlnxBws4NGFaHQ
sMtwp47EUwJ2Z7aV7pOnYZGitOWXAgJarP6+rFOh4QCHdZT+cwJClOMP/1Gn
YfvxscclLwgwYdWc1daiYXxxXQknnYD2YpdVj7fScKgwJ8SsioDQOyvh77fT
sHRztLFeDQF7jyZIrgcayp9Jn+CtI4D3P60cm500zOCTOlBRT+Ztwc7NEbto
GLDqSZJJIwHhs661LSY0pJ3bXvi8iYB9tf/MVpnRcLJHJvLf/z5vlJD4ZpsF
DXnn/ulQWwno9tp8wseKhtJj3ZmabQREGXct5h+goZ/eRJ94OwGWm9yuzhyk
4c7fI3WjJBZaYuGVcSD5BtZ63uggoO9lUoK9Ew035IwMcXQSEJ2tLR9zjIan
esf+uJPY+srL4i5XGgYNtrx5QmJhW3d9zpM0nBD6ePZ/ny8aUGPtwDM0dDr2
t7aFxLHsKXb+XjQklP+2PSKx7ciWyRJvGiZZGYc5k1i0tPvsxws0fGQYzvWH
PH8o7ORfhUs0zJ0bBB8SJ7isDnUOoOHvguubO8l5D+5IFU26SkOuS7umWEks
Iayb2X+dhj8zle3ESb7DzB4a3y0a2v29f5eX1GPduagi3TukXmxD5lOkXmY/
LDSPhdHQ/HLAmgeknjcvCzwLi6RhrW95iw6pdzVLt1ZZNA39DQRuFZJ+LN2M
KHkfS8MlywOmXKRfGmv2afMmkvx2FIobkH5minRtOZpGQ8aZuimrCgLeJYW9
uJtBwxkF608q5D6ISpvpvsgi+0fkCU+9+N/+dGxd85SG2pF9vUvF5H4WhtK3
FNIwreWXz/5CAn5rm25zfkbq/TJh311yH89A2/bScnJeTYe6tGwCshpDKscq
aNjjbnvSP5OA0T0mejw1NDzC4uO6JZ2A/TYt+k5NNFyIUb9slkiAzskmA+4+
Glb53xFhCSXA61Nw/eZXNHROtD8wepOAx+eNDB1f01BD8/rm1GsESF5pMCoZ
Jf31bf1eeZGAf9F1xkeYNBwfY+256UrAVvFrrbc/0fDqb039U84EeKfinmdf
yPqY6Me0wwRM5tSYcv6kYaBnWvYRSwJcRkezD7Jq4MHot23G/xHA8lB/5uNq
DYz3PJm4ZTMBqccfKN5g10DBb2cH2dQIGJw98jifSwPPJO8eMpYmYM/Xd09Y
BTTQvkmDfpSdgOnSHfPxghrINhJX5rDChOsXU5TV1pJ4aTLnf3+fr/x7OM9O
RANf6fFnJ84yQZ3r7dOn6zXQXP/lpm9t5PtU6k2hrZIGWnzq1ZG7zYSyXMXy
HqoGOitwPRq/wgSHrb61pioa5P38+++GLxOyrdf16qtroJz23q6rrkzYFmq+
qKCtgWpNR9vMdzLh6FKd9hJooOXacDubpXnguCmod86A5KM28izk4zzkrnXa
xdypgTHUd/9lfZiHb2rLB8Z2aWC99GGZ+O55CHHR8WvZq4HCWQPVztnzUNSb
S4+300BFvuqNaRbzcMDpV53QIQ0yr1+sdTaah9+Ecftdew30bqxeWfPfPBhx
TQ1fPaKBNhe/lWyizMNr/U3Lbsc10G2uuVb/6xz8y7uvv9VLA39WPFg5d28O
9t0KaHh9SwN/P1Z1Ol09C2KsCrneIRpoRi8+4144C+OB3VG8oRro4/p5i0X6
LHhfoDhiuAZ+3PQkbvjaLMS6tP7Mua+BbVAzTBjOwrudwup+6RoopNDnRWmc
gVP/8hJEGBo4LX8m61vpNNy++NbD6qMGXmheYE67T8KQ6sd1K2aa+GrbvV/v
vcZAJ+q5fmuuJuZfzhw/tG8QZpMZu5yeaqKTkpceQ2kQEnNqzX7ka+Kl323+
m1cPwnJ1p71csSZ6Wh9b613+Cuo/TvoGlWmisJk7u7LcKzDfK1K4tVETLY58
eDDIMgAuHL6bnoxoosyX5JL03l4QXRuggGOa2GJumNhd2AstUtfVhsZJ7FCb
T4noBeUtEdvZJzVxoe14mc7eXlg4nm13dF4TH9lz39rU0gP+dYOREkuauGgX
s/VSWDfcC9BlCRXUwoM69vTHLR1gaq3azb5WC59H3jWVju4ANmWZB9fWaaGZ
nsWaWYcOuDjEs+OSqBYKF3gtnPzaDs5ao37uG7Tw9w7daUO5dlCfDV7YraSF
P1sn7EtiW2G2+lJ1PVULy45tMTzu2goZsZ7h+ipaaETlP3hqSyuIGB5U0VEn
69O+PL062ALLqSpu8tpamHAk0LlvQwu0W/eNrkYtHFGq2X+W0QTByi35Vw20
UOl8yav6yCbQX1UZ8Gcn2e/XsQZv1yYoLsiS/LqLfL662IIQaoIE7ku2E3u1
MOXGhJKlVyO41Wx6WWunhZteHBFW2tEA0nHCqTsOaaFU9oF1l8UaYPgM95ly
ey2MZzYxNb7Wwz7Jr9xFR7Qw/G+5W3NePehcaN6VdlwLJTlz1j6UqQc2FY+q
QC8tzPxvW6ytdB3weNuXy5/TwhbFuOhLK7UgQDcu6fLWQvOy/CtSI7UgaUx5
IuWrhVGHCiPnkmtB4/hQTFWAFp6l3IOUTbWgk9sY6XpFC/XGV7v1rKqF7V+K
Q/mCtPDblrMugm01sPtqWNCRG1qY0xc0w2lXAw7JBmf+3tHC9Kdz8ievVsOx
CXW3rLtamLpuMnODWTW4UTccMw8n9e//uPGdRDV4l/2wS40i5xfL0bhWXgUh
/XmGevFamK8fIu3NWgURkon6Uwkk/9NTP+8PVcL9o7f+C0/Swnl/uc6m/Ep4
sOBMG0kl9ZjlUjl8pBKerxFdH/hIC33GllIOtlUAw2q1qHy2Fhp3WWzmyKmA
msTPgl05WrjUMsXZcpPMs4odHFJ5WviZM/XVjd0V0ONZvqrpqRYqrzMKCFKq
gFelWctnCkj8Vqvy3poKGDcMWqws1kKeL047vw4wYDrU46NLiRYG13puNKpg
ALPXfpa3VAvZSl1qcsl8/cNpy6hDOYnTF+wZPgxYzqa8YWNooan8rf7jTgxY
9Ulg4GkFOf99dj65vQzgDZhvW67WQk4kUufkGbC2YajxUS3pT9DZwwvCDBDj
aaoxq9fCR3Gi2bzsDNiw/xnjWwPZb925JwY/6EBJSCtNaSLnNVkXETFLB6Wx
sCKjFi20fB116etbOqgp+OcRrVrItz8w4mwPHbQ83LJj2kk+HacJ9mY6bH1u
83BHpxbW3v9UWFJJB/0/BimTXWS/sbjFS8/pYLiTFh/WrYUx1761H8yng8md
DdHavaT/xbFmljl02NfDHf6uj7wffRwhzhl0sBFbuh08oIXSJn2hdx7Qwd5x
8rrqIOnnviCnjmQ6OGf1Bg4Mkfs5HsenkEQHV6L6YsAbLfz//zf7P+iQvIU=

            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2]], 
           Line[CompressedData["
1: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
//9/s/8B4c/IVQ==
            "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, 
         "PlotRange" -> {{0, 6 Pi}, {0., 0.8999999999999706}}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], 
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
    Axes -> {True, True}, AxesLabel -> {
      FormBox[
       TagBox["\"\[Phi]\"", HoldForm], TraditionalForm], 
      FormBox[
       TagBox["\"Probability\"", HoldForm], TraditionalForm]}, 
    AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotRange -> 
    NCache[{{0, 6 Pi}, {0., 0.8999999999999706}}, {{0, 18.84955592153876}, {
       0., 0.8999999999999706}}], PlotRangeClipping -> True, 
    PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Output 5\"", "\"Output 6\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.924955313760704*^9, 3.924955425489326*^9, {3.9249554639353943`*^9, 
   3.9249554866217*^9}, {3.924955994654184*^9, 3.924956004098787*^9}, {
   3.9249561668542423`*^9, 3.924956177518112*^9}, 3.924956227067098*^9, 
   3.924965358692028*^9, 3.92496545112413*^9, 3.925395616706379*^9, 
   3.926679351164156*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"26050781-bf3e-0b42-8cbb-cf2cc64ba051"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interference of coherent states", "Section",
 CellChangeTimes->{{3.926447442885458*^9, 
  3.926447448022734*^9}},ExpressionUUID->"e1465a1f-c3a4-1b4d-abb1-\
b1f59f4e4c65"],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s analyze interferometry of coherent states in a Mach ",
 StyleBox["Zehnder",
  IgnoreSpellCheck->True],
 " interferometer, we should expect similar results than using classical \
light. Calling ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["c", "^"], TraditionalForm]],ExpressionUUID->
  "59e79d91-562a-294c-a08b-af1b85d0a60f"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["d", "^"], TraditionalForm]],ExpressionUUID->
  "197b9e0a-5fb6-bb41-8220-946bb6a6fc29"],
 " the final output modes after the second BS:"
}], "Text",
 CellChangeTimes->{{3.9264625501357327`*^9, 3.926462599502498*^9}, {
  3.9264626494325523`*^9, 3.926462689228012*^9}, {3.926462796095844*^9, 
  3.9264628630882845`*^9}},ExpressionUUID->"870dc513-860f-604e-b24f-\
f94ed9ba1542"],

Cell[BoxData[
 RowBox[{"setFockSize", "[", "40", "]"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"6b3a5a08-dcca-7546-a738-b64a3dadbe58"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"c", " ", "=", " ", 
   RowBox[{"QuantumTensorProduct", "[", 
    RowBox[{"a", ",", 
     RowBox[{"QuantumOperator", "[", 
      RowBox[{"\"\<I\>\"", "[", 
       RowBox[{"fockBasis", "[", "\"\<Dimension\>\"", "]"}], "]"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", " ", "=", " ", 
   RowBox[{"QuantumTensorProduct", "[", 
    RowBox[{
     RowBox[{"QuantumOperator", "[", 
      RowBox[{"\"\<I\>\"", "[", 
       RowBox[{"fockBasis", "[", "\"\<Dimension\>\"", "]"}], "]"}], "]"}], 
     ",", "a"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.926462884076214*^9, 3.926462885971615*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"1c07f9b6-3e6f-eb4d-99a1-1a610c43cf18"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Theta]", " ", "=", " ", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9264648281534176`*^9, 3.926464845830017*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"eed50549-a62e-fe48-84c8-deea829ffefa"],

Cell["\<\
The MZI can be describe as  BS evolution, a path difference and a second BS \
evolution\
\>", "Text",
 CellChangeTimes->{{3.926678450698532*^9, 
  3.9266784907142878`*^9}},ExpressionUUID->"fdb4c697-4d4a-2f41-b768-\
78bbe9bc0cd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"backevolveMZI", "[", "\[Theta]1_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"Inverse", "[", 
    RowBox[{
     RowBox[{"BSMatrixEvolve", "[", 
      RowBox[{
       RowBox[{"1", "/", 
        SqrtBox["2"]}], ",", " ", 
       RowBox[{"1", "/", 
        SqrtBox["2"]}]}], "]"}], ".", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "\[Theta]1"}]], ",", "1"}], "}"}], 
      "]"}], ".", " ", 
     RowBox[{"BSMatrixEvolve", "[", 
      RowBox[{
       RowBox[{"1", "/", 
        SqrtBox["2"]}], ",", " ", 
       RowBox[{"1", "/", 
        SqrtBox["2"]}]}], "]"}]}], "]"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.9265106968707657`*^9, 3.926510708628496*^9}, 
   3.9265107411497498`*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"b69dc2e0-dc71-dd48-a9fb-77e177cc69b1"],

Cell["Relating the operators:", "Text",
 CellChangeTimes->{{3.926678498105995*^9, 
  3.926678502459568*^9}},ExpressionUUID->"7df985e7-797d-cc41-bceb-\
5911869022ad"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a0", ",", "a1"}], "}"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"backevolveMZI", "[", "\[Theta]", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"c", ",", "d"}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.926463245469789*^9, 3.926463295736147*^9}, {
  3.926510748177685*^9, 3.926510753890869*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"a883e8ba-217d-5441-a7a2-b9569932ee88"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"outstate", " ", "=", 
  RowBox[{"QuantumState", "[", 
   RowBox[{
    RowBox[{"MatrixExp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Alpha]coh", " ", 
          RowBox[{"a1", "[", "\"\<Dagger\>\"", "]"}]}], "-", 
         RowBox[{
          RowBox[{"\[Alpha]coh", "\[Conjugate]"}], " ", "a1"}]}], ")"}], "[", 
       "\"\<Matrix\>\"", "]"}], ",", 
      RowBox[{"PadRight", "[", 
       RowBox[{
        RowBox[{"{", "1", "}"}], ",", 
        SuperscriptBox[
         RowBox[{"fockBasis", "[", "\"\<Dimension\>\"", "]"}], "2"]}], 
       "]"}]}], "]"}], ",", 
    RowBox[{"a1", "[", "\"\<OutputDimensions\>\"", "]"}]}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{
  3.926462765993708*^9, {3.926464475030227*^9, 3.926464479561481*^9}, {
   3.9264649760753784`*^9, 3.9264649814055176`*^9}, {3.926465533866832*^9, 
   3.9264655625003376`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"d3325aa4-624b-c740-ac61-c95e6f69d1d1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[
             SparseArray[
              Automatic, {10, 10}, 0.93, {
               1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                 10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 0., 
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {10, 
              10}}, {0, 1}], AspectRatio -> 1, Axes -> False, Frame -> False, 
             FrameLabel -> {None, None}, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> None, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               TagBox[
                TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, "RowDefault"],
                 "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vector\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1600", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[
             SparseArray[
              Automatic, {10, 10}, 0.93, {
               1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                 10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 0., 
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {10, 
              10}}, {0, 1}], AspectRatio -> 1, Axes -> False, Frame -> False, 
             FrameLabel -> {None, None}, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> None, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               TagBox[
                TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, "RowDefault"],
                 "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vector\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1600", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Purity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["$Aborted", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"0", "\"\[RightArrow]\"", "2"}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Von Neumann Entropy: \"", "SummaryItemAnnotation"],
                  "\[InvisibleSpace]", 
                 TagBox["$Aborted", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    RowBox[{"{", "}"}], "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{"40", ",", "40"}], "}"}]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}], ""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumState[
   SparseArray[Automatic, {1600}, 
    Complex[0., 0.], {1, {{0, 496}, CompressedData["
1:eJwt1VV0EAQYBeANRvdGjXT0Rnd3KM1GSbONTmlGSrNREgbdKs0oBSxawqBb
BZNUwKL9UM/5v4f//Z57w2IGRg1IEhAQ8FtgQID714s/KUEkIzkpSEkqUpOG
tKQjPRnISCaCCSEzWchKNrITSg5ykovc5CEv4URQlGIUpwQlKUVpylCWcpSn
AhWpRGWqUJVqVKcGNalFbepQl3rUpwGRRNGSVrSmDW15lXa0pwMd6URnutCV
aGKIpRvd6UFPetGbPvSlH/2JYxSjGcNYxjGe15nARCYxmSlMZRrTiSeBGcxk
FrOZwxvMZR7zWcBKVrGaNazlXd7jfdaxng1sZBOb2cJWEtnGdnawk118wIfs
Zg97OcoxjnOCL/iSr/iak5ziNGc4yznOc4GLXOIyV7jKN3zLd1zjOve4zwN+
5w/+5C/+5iGPeMwTnvKM57wIeiBJSEoQyUhOClKSilBykJNc5CYPeXmJMPKR
nwIUpBCFKUI4ERSlGMUpQUlKUZs61KUe9WnAy7xCQxrRmCY0pRnNaUEkUbSk
Fa1pQ1t604e+9KM/AxjIawxiMEMYyjCGM4KRxDGK0YxhLOOYyzzms4A3eYu3
eYeFLGIxS1jKMpazgpWsYjVrWMtu9rCXj/iYT/iUz9jHfg5wkEMc5gifc5Rj
HOcE17jO9/zAj/zEz/zCDW5yi9vc4S6/Bv7Xhfe4zwNSKcTUpCEt6UhPBjKS
iWBCyEwWspKN7ISSg9KUoSzlKE8FKlKJylShKtWoTg1qUovatKM9HehIJzrT
ha5EE0Ms3ehOD3rSiwlMZBKTmcJUpjGdeBKYwUxmMZs5rGM9G9jIJjazha0k
so3t7GAnuzjJKU5zhrOc4zwXuMglLnOFqzzkEY95wlOe8fz/cQokCUkJIox8
5KcABSlEYYoQTgRFaUgjGtOEpjSjOS2IJIpBDGYIQxnGcEYwkjgWsojFLGEp
y1jOCvaxnwMc5BCHOcINbnKL29zhLpkMbzAhZCYLlalCVaoRTQyxxJNAIv8A
uQ7qLg==
      "]}, {
      Complex[0.2609217907116902, 1.3285704955095114`*^-17], 
      Complex[0.009040352322279992, -0.17288122854637503`], 
      Complex[-0.0807757752657882, -0.00847106167531551], 
      Complex[-0.004856349426866893, 0.030730511540604334`], 
      Complex[0.010096560859880678`, 0.0021412284184667077`], 
      Complex[0.0007909220622249881, -0.0029585763000975866`], 
      Complex[-0.0007890974287023439, -0.00025579047287334437`], 
      Complex[-0.00007439163844842507, 0.00019426489775007925`], 
      Complex[0.000044596618840714226`, 0.00001980647049807235], 
      Complex[4.88950614810327*^-6, -9.620840485179497*^-6], 
      Complex[-1.962241952237923*^-6, -1.1298891516046931`*^-6], 
      Complex[-2.462225405889517*^-7, 3.8020329251740654`*^-7], 
      Complex[7.025878137270148*^-8, 5.089775801778532*^-8], 
      Complex[1.0028447132737199`*^-8, -1.2422089715753626`*^-8], 
      Complex[-2.1068602762411787`*^-9, -1.8908821559578596`*^-9], 
      Complex[-3.4233461406273264`*^-10, 3.4351967935324887`*^-10], 
      Complex[5.3936927344839816`*^-11, 5.968145417656155*^-11], 
      Complex[1.0043995685125467`*^-11, -8.166085443095076*^-12], 
      Complex[-1.193283396709917*^-12, -1.6352726701794657`*^-12], 
      Complex[-2.5805633127227083`*^-13, 1.683878639231868*^-13], 
      Complex[2.294857476134301*^-14, 3.953745996127126*^-14], 
      Complex[5.890092866151544*^-15, -3.0191216683591525`*^-15], 
      Complex[-3.829782768316928*^-16, -8.543498509766054*^-16], 
      Complex[-1.2080144684134904`*^-16, 4.673891613027125*^-17], 
      Complex[5.466996806039406*^-18, 1.666874536772383*^-17], 
      Complex[2.2467643493573607`*^-18, -6.089587837360335*^-19], 
      Complex[-6.385944443468168*^-20, -2.9607207646610726`*^-19], 
      Complex[-3.82041835375219*^-20, 6.172810408390559*^-21], 
      Complex[5.185884160440655*^-22, 4.7855123192538135`*^-21], 
      Complex[6.486219783103479*^-22, -3.616592503710634*^-23], 
      Complex[-2.951102661020907*^-25, -8.539699895808949*^-23], 
      Complex[-0.02042408994492696, 0.3905756806533544], 
      Complex[0.25807948948630116`, 0.027065135127193808`], 
      Complex[0.0190032513787681, -0.12025074484415697`], 
      Complex[-0.045620581982943144`, -0.00967498616256769], 
      Complex[-0.003995545221692611, 0.014946005382139967`], 
      Complex[0.004366803116479384, 0.0014155243617330223`], 
      Complex[0.0004446624967190948, -0.0011611831149319007`], 
      Complex[-0.0002849733743899187, -0.0001265637817241226], 
      Complex[-0.000033139321277010444`, 0.00006520661067517255], 
      Complex[0.000014018770136538545`, 8.072223854988796*^-6], 
      Complex[1.8449368650431143`*^-6, -2.848849942406974*^-6], 
      Complex[-5.498555258832498*^-7, -3.9833331797613105`*^-7], 
      Complex[-8.168883899488094*^-8, 1.0118676135386822`*^-7], 
      Complex[1.7809720786238423`*^-8, 1.5984013566087594`*^-8], 
      Complex[2.995392936519704*^-9, -3.0057621368713678`*^-9], 
      Complex[-4.87420231500965*^-10, -5.393326917766471*^-10], 
      Complex[-9.35595956790392*^-11, 7.606690367937153*^-11], 
      Complex[1.1437660690548978`*^-11, 1.5674142445633605`*^-11], 
      Complex[2.541257523279838*^-12, -1.658230681317141*^-12], 
      Complex[-2.3186119748485816`*^-13, -3.9946719600086877`*^-13], 
      Complex[-6.098024258228364*^-14, 3.125702359974183*^-14], 
      Complex[4.058287770594669*^-15, 9.053248609062666*^-15], 
      Complex[1.3088606527337387`*^-15, -5.064072482068548*^-16], 
      Complex[-6.050786080916488*^-17, -1.8448705209768097`*^-16], 
      Complex[-2.5379606635041555`*^-17, 6.8788408506635084`*^-18], 
      Complex[7.356464915773743*^-19, 3.4106839831514772`*^-18], 
      Complex[4.484873140311753*^-19, -7.246397917033795*^-20], 
      Complex[-6.1995359870349945`*^-21, -5.720906005947601*^-20], 
      Complex[-7.891290252151454*^-21, 4.400033012276404*^-22], 
      Complex[3.6517606392523215`*^-24, 1.0567216234950077`*^-21], 
      Complex[-0.41228340225983445`, -0.043236702052814296`], 
      Complex[-0.04293241032758026, 0.271672158460979], 
      Complex[0.1262303565646681, 0.026770306295429706`], 
      Complex[0.01276581088378115, -0.04775265141300227], 
      Complex[-0.015598792251798214`, -0.0050564382815212585`], 
      Complex[-0.00173999695267299, 0.004543794667606548], 
      Complex[0.001204469106620447, 0.000534934765151702], 
      Complex[0.00014973763285915697`, -0.0002946313669991309], 
      Complex[-0.00006718518692316454, -0.00003868626586361597], 
      Complex[-9.320170757040573*^-6, 0.000014391694603488623`], 
      Complex[2.9133140066669634`*^-6, 2.110499903984576*^-6], 
      Complex[4.5205961105594584`*^-7, -5.599595800903349*^-7], 
      Complex[-1.0258199651086803`*^-7, -9.206612745625072*^-8], 
      Complex[-1.790441680795904*^-8, 1.7966396818260175`*^-8], 
      Complex[3.0157236474363306`*^-9, 3.33691186231178*^-9], 
      Complex[5.978478723340195*^-10, -4.860691860593138*^-10], 
      Complex[-7.533625538612426*^-11, -1.0324062150387733`*^-10], 
      Complex[-1.7223733227998735`*^-11, 1.1238893588646333`*^-11], 
      Complex[1.6145341494392545`*^-12, 2.7816358947523584`*^-12], 
      Complex[4.356588149878373*^-13, -2.2330835832828583`*^-13], 
      Complex[-2.970946608198683*^-14, -6.627602518274088*^-14], 
      Complex[-9.807246987448311*^-15, 3.7944917581757224`*^-15], 
      Complex[4.635729404627743*^-16, 1.413423050733221*^-15], 
      Complex[1.986245232320944*^-16, -5.383481722155771*^-17], 
      Complex[-5.875996558496939*^-18, -2.7242932001410617`*^-17], 
      Complex[-3.65324835462732*^-18, 5.90270681893544*^-19], 
      Complex[5.146161693891878*^-20, 4.748856592450214*^-19], 
      Complex[6.670669033863079*^-20, -3.719437889762751*^-21], 
      Complex[-3.141547730852905*^-23, -9.090796868640137*^-21], 
      Complex[0.05599922315020226, -0.35435769175950954`], 
      Complex[-0.23284962219319874`, -0.04938158994816434], 
      Complex[-0.028840697841798008`, 0.10788345551138102`], 
      Complex[0.04069281186483654, 0.013190809158470714`], 
      Complex[0.005074931920894788, -0.013252579876765867`], 
      Complex[-0.0038482920295818375`, -0.001709122452177787], 
      Complex[-0.000516745512787041, 0.0010167747006279873`], 
      Complex[0.0002478650273640607, 0.00014272450202251877`], 
      Complex[0.00003647051153470057, -0.00005631575619405091], 
      Complex[-0.000012016667035285129`, -8.705266430651206*^-6], 
      Complex[-1.955639409314956*^-6, 2.4224217241840453`*^-6], 
      Complex[4.6350935202042157`*^-7, 4.1599415620415685`*^-7], 
      Complex[8.420319806690398*^-8, -8.449468564449742*^-8], 
      Complex[-1.471811832654188*^-8, -1.628566452914114*^-8], 
      Complex[-3.020181537082703*^-9, 2.455502895326808*^-9], 
      Complex[3.9306172138749125`*^-10, 5.386508288398768*^-10], 
      Complex[9.262932125126991*^-11, -6.044282449981494*^-11], 
      Complex[-8.934705017386632*^-12, -1.539335429604781*^-11], 
      Complex[-2.4769659533802927`*^-12, 1.2696339007850741`*^-12], 
      Complex[1.7330319750341763`*^-13, 3.866056377549652*^-13], 
      Complex[5.862103621232867*^-14, -2.2680884762878427`*^-14], 
      Complex[-2.8361300977764206`*^-15, -8.64729432022868*^-15], 
      Complex[-1.2424917580740352`*^-15, 3.367626293408235*^-16], 
      Complex[3.754774713211431*^-17, 1.7408293414453724`*^-16], 
      Complex[2.382571445126396*^-17, -3.849620762282701*^-18], 
      Complex[-3.422684219687164*^-19, -3.158438752483978*^-18], 
      Complex[-4.5211405313714*^-19, 2.5209017734142418`*^-20], 
      Complex[2.1683001956515974`*^-22, 6.274479434233954*^-20], 
      Complex[0.263028555623635, 0.055781788074739956`], 
      Complex[0.04607317324376331, -0.1723444128563365], 
      Complex[-0.07961697822836687, -0.02580830169890555], 
      Complex[-0.011465356915491913`, 0.02994041313393543], 
      Complex[0.009720316049357816, 0.004317034745418411], 
      Complex[0.001429814515665069, -0.002813375617483175], 
      Complex[-0.0007407840734242048, -0.0004265548839626767], 
      Complex[-0.00011652368506782095`, 0.00017992945980119086`], 
      Complex[0.00004072233242979488, 0.000029500588843643617`], 
      Complex[6.985799920818893*^-6, -8.653207441203436*^-6], 
      Complex[-1.736529662940804*^-6, -1.5585148146627283`*^-6], 
      Complex[-3.2949328788186403`*^-7, 3.3063390014509013`*^-7], 
      Complex[5.994477421931242*^-8, 6.632916392921847*^-8], 
      Complex[1.2765106093119491`*^-8, -1.037843407290204*^-8], 
      Complex[-1.7196249743600468`*^-9, -2.356569890507454*^-9], 
      Complex[-4.1853890674392257`*^-10, 2.7310654277649154`*^-10], 
      Complex[4.1613288931223484`*^-11, 7.169437588544939*^-11], 
      Complex[1.1870900154530962`*^-11, -6.084741394389807*^-12], 
      Complex[-8.533176696202516*^-13, -1.903585315352374*^-12], 
      Complex[-2.961391675811055*^-13, 1.145782942040386*^-13], 
      Complex[1.4681254208333238`*^-14, 4.47628006307211*^-14], 
      Complex[6.5831267879881695`*^-15, -1.784278303659223*^-15], 
      Complex[-2.0341134193766432`*^-16, -9.430777063186324*^-16], 
      Complex[-1.318496301391106*^-16, 2.1303498567527257`*^-17], 
      Complex[1.9331439711616984`*^-18, 1.7838972107119897`*^-17], 
      Complex[2.6041262958634*^-18, -1.4520111798969925`*^-19], 
      Complex[-1.272707647064328*^-21, -3.682874711403875*^-19], 
      Complex[-0.04655008527249004, 0.17412838209023682`], 
      Complex[0.11376090654634391`, 0.036876252565975695`], 
      Complex[0.020064140585589998`, -0.052395111878133095`], 
      Complex[-0.019641865715616186`, -0.008723442358107254], 
      Complex[-0.0032302568784333217`, 0.00635601739975652], 
      Complex[0.0018333256631471299`, 0.0010556571659198007`], 
      Complex[0.0003114838878280303, -0.0004809762722578844], 
      Complex[-0.00011637240088683714`, -0.00008430397146894322], 
      Complex[-0.000021174333724974726`, 0.000026228335226926747`], 
      Complex[5.548231352963522*^-6, 4.979471956802759*^-6], 
      Complex[1.1041174419598277`*^-6, -1.1079395832314671`*^-6], 
      Complex[-2.0980426273212664`*^-7, -2.3214936609644754`*^-7], 
      Complex[-4.6501660465395105`*^-8, 3.780731737754313*^-8], 
      Complex[6.500849586298381*^-9, 8.908748492379732*^-9], 
      Complex[1.6377734296975559`*^-9, -1.068685926275339*^-9], 
      Complex[-1.681761434549711*^-10, -2.897459910884161*^-10], 
      Complex[-4.9451613795981074`*^-11, 2.534772237713872*^-11], 
      Complex[3.657794875971316*^-12, 8.159827061320367*^-12], 
      Complex[1.3042024381422286`*^-12, -5.046049527310784*^-13], 
      Complex[-6.633618818513322*^-14, -2.022574859202191*^-13], 
      Complex[-3.04799480774224*^-14, 8.261227802939614*^-15], 
      Complex[9.639596633392514*^-16, 4.4692142514071534`*^-15], 
      Complex[6.388739642283534*^-16, -1.0322554994966165`*^-16], 
      Complex[-9.568462876116395*^-18, -8.829737717490223*^-17], 
      Complex[-1.3155410469712344`*^-17, 7.335206095226275*^-19], 
      Complex[6.556735787806845*^-21, 1.8973435476695178`*^-18], 
      Complex[-0.1049239851275454, -0.03401171363042721], 
      Complex[-0.02617081774343535, 0.06834197147693101], 
      Complex[0.03137798838677136, 0.013935747090854796`], 
      Complex[0.005958662513520233, -0.011724566819459927`], 
      Complex[-0.0037809971755304833`, -0.0021771564337453755`], 
      Complex[-0.000703708739947736, 0.0010866282967490833`], 
      Complex[0.00028397541791541045`, 0.00020572107602301665`], 
      Complex[0.00005523781358998038, -0.00006842226588370372], 
      Complex[-0.00001535173799952198, -0.000013778003113725887`], 
      Complex[-3.2203049792764223`*^-6, 3.2314527612974284`*^-6], 
      Complex[6.417891686930316*^-7, 7.101426193131337*^-7], 
      Complex[1.485733161171831*^-7, -1.2079479442366318`*^-7], 
      Complex[-2.1618398932152532`*^-8, -2.9625801418386746`*^-8], 
      Complex[-5.651966406829033*^-9, 3.688041853185159*^-9], 
      Complex[6.007471950275858*^-10, 1.0350106016282816`*^-9], 
      Complex[1.8244089460904148`*^-10, -9.351486820765065*^-11], 
      Complex[-1.3909949101755255`*^-11, -3.1030383865347595`*^-11], 
      Complex[-5.1034397656201335`*^-12, 1.9745561780768686`*^-12], 
      Complex[2.6669142129072853`*^-13, 8.131359045867135*^-13], 
      Complex[1.257219051777395*^-13, -3.407542873284025*^-14], 
      Complex[-4.074274086152831*^-15, -1.8889591030081078`*^-14], 
      Complex[-2.7638105052380314`*^-15, 4.465604725408316*^-16], 
      Complex[4.232410929478627*^-17, 3.905651190142184*^-16], 
      Complex[5.944177331090474*^-17, -3.3143599654685693`*^-18], 
      Complex[-3.023705019460371*^-20, -8.749791656082695*^-18], 
      Complex[0.022347329430509832`, -0.05835738743427611], 
      Complex[-0.03789207898624778, -0.016828817162851176`], 
      Complex[-0.008812877919331288, 0.0173406659300628], 
      Complex[0.006457206670861598, 0.0037181590979415277`], 
      Complex[0.0013436503984447846`, -0.002074790976728128], 
      Complex[-0.000593970273994899, -0.0004302914836393156], 
      Complex[-0.00012479403820827426`, 0.0001545805365572336], 
      Complex[0.0000370775373923786, 0.00003327665086893662], 
      Complex[8.249480426340859*^-6, -8.278037786644066*^-6], 
      Complex[-1.733008614418359*^-6, -1.917581873875335*^-6], 
      Complex[-4.207707068372879*^-7, 3.4209986261477355`*^-7], 
      Complex[6.394734058798286*^-8, 8.763328031086937*^-8], 
      Complex[1.7401215530983227`*^-8, -1.1354704992057298`*^-8], 
      Complex[-1.919393888735758*^-9, -3.3068702442311356`*^-9], 
      Complex[-6.033595078935641*^-10, 3.09267749335534*^-10], 
      Complex[4.751096706048052*^-11, 1.0598770239314247`*^-10], 
      Complex[1.7967836711125223`*^-11, -6.951880420659299*^-12], 
      Complex[-9.661701963753049*^-13, -2.9458303263452885`*^-12], 
      Complex[-4.679463803581707*^-13, 1.2683130686050682`*^-13], 
      Complex[1.555870970037716*^-14, 7.213497594448664*^-14], 
      Complex[1.0814993151801058`*^-14, -1.7474238712245569`*^-15], 
      Complex[-1.6951475479861532`*^-16, -1.5642751019628182`*^-15], 
      Complex[-2.4342434680174423`*^-16, 1.3572877535805776`*^-17], 
      Complex[1.264891807940649*^-19, 3.660257768445169*^-17], 
      Complex[0.0302664021736951, 0.013442063934873945`], 
      Complex[0.00995508830195062, -0.019588137056765292`], 
      Complex[-0.008933418481808992, -0.005144000013774536], 
      Complex[-0.00214648889309742, 0.003314489983555559], 
      Complex[0.0010608697782624012`, 0.0007685287476870613], 
      Complex[0.0002441641107540128, -0.0003024424867587355], 
      Complex[-0.00007835600156381546, -0.00007032358378959934], 
      Complex[-0.000018637341136723245`, 0.000018701858323070607`], 
      Complex[4.152736173185475*^-6, 4.5950213671381826`*^-6], 
      Complex[1.06281545769658*^-6, -8.641025056039791*^-7], 
      Complex[-1.6940693896348128`*^-7, -2.3215485792356668`*^-7], 
      Complex[-4.8148479165739585`*^-8, 3.141802225078808*^-8], 
      Complex[5.5277468849880544`*^-9, 9.523601069527467*^-9], 
      Complex[1.8032358931384491`*^-9, -9.242958781555457*^-10], 
      Complex[-1.4697784131327755`*^-10, -3.278789018053009*^-10], 
      Complex[-5.740743571104335*^-11, 2.2211334326783683`*^-11], 
      Complex[3.1819288327348598`*^-12, 9.701626573566703*^-12], 
      Complex[1.585786475094133*^-12, -4.2980858380389763`*^-13], 
      Complex[-5.417048735399379*^-14, -2.5115108369730266`*^-13], 
      Complex[-3.863257098606625*^-14, 6.242026767865973*^-15], 
      Complex[6.204824722604399*^-16, 5.7257864291189656`*^-15], 
      Complex[9.119850485445958*^-16, -5.085054778215388*^-17], 
      Complex[-4.845400307768879*^-19, -1.4021289414951783`*^-16], 
      Complex[-0.007496891405719442, 0.01475126406725535], 
      Complex[0.009514123401339605, 0.005478378854321088], 
      Complex[0.002799789473659582, -0.0043232807755729675`], 
      Complex[-0.0015978211909349947`, -0.0011575139042120848`], 
      Complex[-0.00041115249851023783`, 0.0005092885424581588], 
      Complex[0.00014453865026798916`, 0.00012972172750134875`], 
      Complex[0.000037133772983578755`, -0.0000372623195682974], 
      Complex[-8.845358467275748*^-6, -9.78742917009127*^-6], 
      Complex[-2.4011274924934733`*^-6, 1.9521924220362093`*^-6], 
      Complex[4.034291717789319*^-7, 5.528583576895266*^-7], 
      Complex[1.202582888311177*^-7, -7.84713797777899*^-8], 
      Complex[-1.4420319239864504`*^-8, -2.4844366175423724`*^-8], 
      Complex[-4.896213228716539*^-9, 2.5096825784655625`*^-9], 
      Complex[4.141445836208339*^-10, 9.238758036783452*^-10], 
      Complex[1.674364012759526*^-10, -6.478230286984027*^-11], 
      Complex[-9.58487727931726*^-12, -2.92240665978303*^-11], 
      Complex[-4.923855209761986*^-12, 1.3345524557066346`*^-12], 
      Complex[1.730753022863784*^-13, 8.024304718989654*^-13], 
      Complex[1.2681379963043824`*^-13, -2.0489838279556597`*^-14], 
      Complex[-2.0896840077263196`*^-15, -1.9283517049235998`*^-14], 
      Complex[-3.147266138550235*^-15, 1.7548556022591175`*^-16], 
      Complex[1.7115007997608495`*^-18, 4.952624452698331*^-16], 
      Complex[-0.006797138796361351, -0.003913897253700581], 
      Complex[-0.0028287706178674317`, 0.004368031863033888], 
      Complex[0.0019771797879784996`, 0.0014323336733148403`], 
      Complex[0.0005874762142461487, -0.0007276981313900685], 
      Complex[-0.00023090128785183435`, -0.00020723117233273206`], 
      Complex[-0.0000649833447931474, 0.00006520829869267296], 
      Complex[0.000016719443422264127`, 0.00001850013980373569], 
      Complex[4.851964024024392*^-6, -3.944799861441957*^-6], 
      Complex[-8.646610810292003*^-7, -1.184929446494773*^-6], 
      Complex[-2.7168920194144687`*^-7, 1.7728363470240288`*^-7], 
      Complex[3.416870944188595*^-8, 5.8868317337186*^-8], 
      Complex[1.2117368186594706`*^-8, -6.211075052121711*^-9], 
      Complex[-1.0667951194513196`*^-9, -2.379811875665065*^-9], 
      Complex[-4.4758060305947706`*^-10, 1.7317203406849108`*^-10], 
      Complex[2.652097855851921*^-11, 8.086184319816381*^-11], 
      Complex[1.4070924188024208`*^-11, -3.813756828584186*^-12], 
      Complex[-5.098200575476669*^-13, -2.3636829978469385`*^-12], 
      Complex[-3.8437941892733325`*^-13, 6.210579727729099*^-14], 
      Complex[6.5075090046648675`*^-15, 6.005102224811899*^-14], 
      Complex[1.0055549892797946`*^-14, -5.60678293043913*^-16], 
      Complex[-5.603303054974676*^-18, -1.6214456767899117`*^-15], 
      Complex[0.0019268980976503694`, -0.0029754099657968948`], 
      Complex[-0.0019046806756486798`, -0.0013798129463142845`], 
      Complex[-0.0006931255857634755, 0.0008585644513726534], 
      Complex[0.0003145700464339106, 0.0002823228926513906], 
      Complex[0.00009898014350823473, -0.00009932278467773214], 
      Complex[-0.000027897061303066302`, -0.00003086822456857968], 
      Complex[-8.74435151677956*^-6, 7.109433722301309*^-6], 
      Complex[1.6659114785971338`*^-6, 2.2829610463024047`*^-6], 
      Complex[5.552066361263959*^-7, -3.6228547089845253`*^-7], 
      Complex[-7.360199587465109*^-8, -1.26806827666947*^-7], 
      Complex[-2.737572706418491*^-8, 1.4032147309855366`*^-8], 
      Complex[2.5172865696635657`*^-9, 5.615575440595082*^-9], 
      Complex[1.0992689191348832`*^-9, -4.253147554063305*^-10], 
      Complex[-6.759500085052572*^-11, -2.06095576288575*^-10], 
      Complex[-3.712182065717418*^-11, 1.0061428455514602`*^-11], 
      Complex[1.3891141159733852`*^-12, 6.440361396900278*^-12], 
      Complex[1.079557060672332*^-12, -1.7442856890331864`*^-13], 
      Complex[-1.8806676140161505`*^-14, -1.73547224674823*^-13], 
      Complex[-2.9856826282406854`*^-14, 1.6647597171904258`*^-15], 
      Complex[1.7069473486381842`*^-17, 4.939447985952127*^-15], 
      Complex[0.0012421925227548713`, 0.0008998848713200896], 
      Complex[0.0006392837474668081, -0.0007918713595180872], 
      Complex[-0.0003553405162380721, -0.00031891390664129154`], 
      Complex[-0.00012910551961709728`, 0.0001295524462900869], 
      Complex[0.00004068273990037765, 0.00004501563579286191], 
      Complex[0.000013969149586701973`, -0.00001135735942831197], 
      Complex[-2.8745354952793*^-6, -3.93925646485279*^-6], 
      Complex[-1.0241566211132248`*^-6, 6.682864353755744*^-7], 
      Complex[1.440050032074622*^-7, 2.481022071195754*^-7], 
      Complex[5.645889804983861*^-8, -2.8939489808981606`*^-8], 
      Complex[-5.44497307409761*^-9, -1.2146673103527748`*^-8], 
      Complex[-2.483483660558399*^-9, 9.608770222279045*^-10], 
      Complex[1.5894723927615515`*^-10, 4.846264141713143*^-10], 
      Complex[9.058577853998988*^-11, -2.4552199049834502`*^-11], 
      Complex[-3.5087327396389963`*^-12, -1.6267566954048644`*^-11], 
      Complex[-2.816257288267358*^-12, 4.550345195742429*^-13], 
      Complex[5.057119797419278*^-14, 4.666689100983699*^-13], 
      Complex[8.261266436554191*^-14, -4.606324679812562*^-15], 
      Complex[-4.852478959834236*^-17, -1.4041773136207348`*^-14], 
      Complex[-0.0004005708532295232, 0.0004961812143466885], 
      Complex[0.0003148802407440154, 0.00028260128837248854`], 
      Complex[0.00014011709327778585`, -0.0001406021388940643], 
      Complex[-0.00005098305689197943, -0.00005641298315393943], 
      Complex[-0.000019572245389184692`, 0.00001591285312856136], 
      Complex[4.411933755614172*^-6, 6.046103308811885*^-6], 
      Complex[1.6978568809336039`*^-6, -1.1078918002831213`*^-6], 
      Complex[-2.552162109649691*^-7, -4.3970489790470597`*^-7], 
      Complex[-1.0613028590436706`*^-7, 5.439986314721411*^-8], 
      Complex[1.0789005599123081`*^-8, 2.4068167526502876`*^-8], 
      Complex[5.161112569405885*^-9, -1.996870185148986*^-9], 
      Complex[-3.45008102178061*^-10, -1.0519216324865546`*^-9], 
      Complex[-2.04652653201616*^-10, 5.5468670231328204`*^-11], 
      Complex[8.226213732207203*^-12, 3.813926354526605*^-11], 
      Complex[6.834451095017853*^-12, -1.1042709710973936`*^-12], 
      Complex[-1.2675027639374364`*^-13, -1.1696462751291909`*^-12], 
      Complex[-2.1343064244624552`*^-13, 1.1900485758191566`*^-14], 
      Complex[1.2899877778537635`*^-16, 3.7328787770203254`*^-14], 
      Complex[-0.00019012479076751672`, -0.00017063474893024464`], 
      Complex[-0.0001196463508714622, 0.00012006053258645723`], 
      Complex[0.00005331873528617708, 0.00005899742186627604], 
      Complex[0.00002363545613835064, -0.000019216371687428313`], 
      Complex[-5.956721909387312*^-6, -8.163077244799962*^-6], 
      Complex[-2.5111349035481236`*^-6, 1.638574958989436*^-6], 
      Complex[4.0770929909207776`*^-7, 7.024309899996438*^-7], 
      Complex[1.81249855079825*^-7, -9.290436964128774*^-8], 
      Complex[-1.9543215165956658`*^-8, -4.359710191076069*^-8], 
      Complex[-9.854547153721072*^-9, 3.812792519980947*^-9], 
      Complex[6.909060204540912*^-10, 2.106556293439629*^-9], 
      Complex[4.280567430387797*^-10, -1.1601969458232739`*^-10], 
      Complex[-1.790873893514366*^-11, -8.303043614544482*^-11], 
      Complex[-1.544048715278889*^-11, 2.4947843660563173`*^-12], 
      Complex[2.964066103500648*^-13, 2.7352278636666965`*^-12], 
      Complex[5.154779625750821*^-13, -2.8742068533253784`*^-14], 
      Complex[-3.2114665034808395`*^-16, -9.293123051057551*^-14], 
      Complex[0.0000697928906511455, -0.00007003449383363959], 
      Complex[-0.00004398519948143314, -0.000048669822263229434`], 
      Complex[-0.000023880111163025943`, 0.00001941528394289053], 
      Complex[6.9494278401818284`*^-6, 9.523479042586782*^-6], 
      Complex[3.275418332003506*^-6, -2.1372879853856234`*^-6], 
      Complex[-5.825563906614573*^-7, -1.0036701716988093`*^-6], 
      Complex[-2.7972959505876904`*^-7, 1.4338274470620732`*^-7], 
      Complex[3.224428385142242*^-8, 7.193070931126627*^-8], 
      Complex[1.7245256380324562`*^-8, -6.672309088015988*^-9], 
      Complex[-1.2744731949744897`*^-9, -3.8858389566921095`*^-9], 
      Complex[-8.281507775527771*^-10, 2.2446042923586324`*^-10], 
      Complex[3.6188231279101085`*^-11, 1.6777979942181182`*^-10], 
      Complex[3.247464432060317*^-11, -5.247064690549406*^-12], 
      Complex[-6.469394446173761*^-13, -5.969930268871678*^-12], 
      Complex[-1.164574996299034*^-12, 6.493448175462044*^-14], 
      Complex[7.49333444354015*^-16, 2.168370087966637*^-13], 
      Complex[0.0000248429939019174, 0.000027488885169275976`], 
      Complex[0.000019074304386280908`, -0.000015508011380037464`], 
      Complex[-6.798405169064688*^-6, -9.316517940692397*^-6], 
      Complex[-3.699935369511722*^-6, 2.41429539997832*^-6], 
      Complex[7.35733175948427*^-7, 1.2675741865782676`*^-6], 
      Complex[3.870003953386726*^-7, -1.9836720842636738`*^-7], 
      Complex[-4.8183586426292224`*^-8, -1.0748818503069365`*^-7], 
      Complex[-2.7549391807444354`*^-8, 1.0659050423619425`*^-8], 
      Complex[2.15948070152143*^-9, 6.5842061404553465`*^-9], 
      Complex[1.479131482188947*^-9, -4.009010151140638*^-10], 
      Complex[-6.778928708945719*^-11, -3.142920388426142*^-10], 
      Complex[-6.353783214675395*^-11, 1.0266074426557263`*^-11], 
      Complex[1.3174455484306369`*^-12, 1.2157332687942695`*^-11], 
      Complex[2.461097652346904*^-12, -1.372261134839132*^-13], 
      Complex[-1.6391477914534403`*^-15, -4.743254244855331*^-13], 
      Complex[-0.000010451571748378423`, 8.497457644101978*^-6], 
      Complex[5.268111269499173*^-6, 7.219406895485936*^-6], 
      Complex[3.511459491402565*^-6, -2.291310428598708*^-6], 
      Complex[-8.062750725125256*^-7, -1.3891088544171323`*^-6], 
      Complex[-4.741647974570377*^-7, 2.4304561012991617`*^-7], 
      Complex[6.467071241386583*^-8, 1.442677479527607*^-7], 
      Complex[3.993870078801361*^-8, -1.5452559843381072`*^-8], 
      Complex[-3.3467804101226203`*^-9, -1.0204255176515337`*^-8], 
      Complex[-2.431425308883412*^-9, 6.590089429121273*^-10], 
      Complex[1.1746107309263176`*^-10, 5.445857558320013*^-10], 
      Complex[1.1546799721358898`*^-10, -1.8656649325747756`*^-11], 
      Complex[-2.5006689109022597`*^-12, -2.307606863027384*^-11], 
      Complex[-4.862206726140909*^-12, 2.711073781844431*^-13], 
      Complex[3.3605861113485798`*^-15, 9.724635216524416*^-13], 
      Complex[-2.8052788981096484`*^-6, -3.844347392210518*^-6], 
      Complex[-2.6443794052002206`*^-6, 1.7255201499951697`*^-6], 
      Complex[7.436438077482397*^-7, 1.2812031936650299`*^-6], 
      Complex[5.049872458973778*^-7, -2.5884446493115047`*^-7], 
      Complex[-7.700408291157295*^-8, -1.7178109240123992`*^-7], 
      Complex[-5.209435484036542*^-8, 2.0155666553746993`*^-8], 
      Complex[4.715169875390544*^-9, 1.4376442644272643`*^-8], 
      Complex[3.6620732933619763`*^-9, -9.92561458132346*^-10], 
      Complex[-1.8764470955872616`*^-10, -8.699787367201012*^-10], 
      Complex[-1.9443871339539228`*^-10, 3.141627965069175*^-11], 
      Complex[4.4164533052966836`*^-12, 4.07548472855027*^-11], 
      Complex[8.969023220869469*^-12, -5.000956370720225*^-13], 
      Complex[-6.452199838625972*^-15, -1.8670936466370584`*^-12], 
      Complex[1.3705797907603917`*^-6, -8.94335752835798*^-7], 
      Complex[-5.45080344189877*^-7, -9.391037355568661*^-7], 
      Complex[-4.533374471080353*^-7, 2.323700051501488*^-7], 
      Complex[7.982231266594558*^-8, 1.78068013399958*^-7], 
      Complex[6.037487210312268*^-8, -2.3359456011397765`*^-8], 
      Complex[-5.986231759760667*^-9, -1.8251880594735596`*^-8], 
      Complex[-5.021767593737389*^-9, 1.3610904441144567`*^-9], 
      Complex[2.7508181149625676`*^-10, 1.2753641039119901`*^-9], 
      Complex[3.0233230216183616`*^-10, -4.884909998781531*^-11], 
      Complex[-7.238593703927802*^-12, -6.679744142467757*^-11], 
      Complex[-1.541778725451514*^-11, 8.596664262555233*^-13], 
      Complex[1.1584545260646044`*^-14, 3.352256811056509*^-12], 
      Complex[2.7536128636235916`*^-7, 4.7441228693536504`*^-7], 
      Complex[3.238761386201457*^-7, -1.6601121411714855`*^-7], 
      Complex[-6.984370896611284*^-8, -1.5580769447421049`*^-7], 
      Complex[-6.099982369016612*^-8, 2.360125410716616*^-8], 
      Complex[6.76208910526705*^-9, 2.061745149092442*^-8], 
      Complex[6.214047881323242*^-9, -1.6842438509274131`*^-9], 
      Complex[-3.676658186091546*^-10, -1.704612110626273*^-9], 
      Complex[-4.3198822082297404`*^-10, 6.979815137730149*^-11], 
      Complex[1.097028261070646*^-11, 1.0123331134101358`*^-10], 
      Complex[2.4629999839437894`*^-11, -1.3733218386732472`*^-12], 
      Complex[-1.9409649528336196`*^-14, -5.616632191219594*^-12], 
      Complex[-1.59671227347154*^-7, 8.184367772324519*^-8], 
      Complex[4.869563153969832*^-8, 1.0863045782473011`*^-7], 
      Complex[5.208790831723625*^-8, -2.015317234931697*^-8], 
      Complex[-6.667432009464183*^-9, -2.032884422021168*^-8], 
      Complex[-6.850263989581836*^-9, 1.8566826683713707`*^-9], 
      Complex[4.439934793638639*^-10, 2.058490682723189*^-9], 
      Complex[5.634671939344623*^-10, -9.104176133195458*^-11], 
      Complex[-1.5297149816499866`*^-11, -1.4116146182893415`*^-10], 
      Complex[-3.642783615376814*^-11, 2.031146701246684*^-12], 
      Complex[3.0259754789567436`*^-14, 8.756361757144229*^-12], 
      Complex[-2.345503149134467*^-8, -5.232360128897955*^-8], 
      Complex[-3.5481170093153547`*^-8, 1.3727910356617955`*^-8], 
      Complex[5.562438736876944*^-9, 1.6959745582097025`*^-8], 
      Complex[6.599078911983313*^-9, -1.7886019373455346`*^-9], 
      Complex[-4.781978419771918*^-10, -2.2170726552532823`*^-9], 
      Complex[-6.647988793137532*^-10, 1.0741434737595972`*^-10], 
      Complex[1.949420630493246*^-11, 1.7989172441985902`*^-10], 
      Complex[4.962772714256516*^-11, -2.767147459719885*^-12], 
      Complex[-4.372528781751568*^-14, -1.2652925997847919`*^-11], 
      Complex[1.6714422414403903`*^-8, -6.466925751466643*^-9], 
      Complex[-3.7057291930334852`*^-9, -1.1298681618430564`*^-8], 
      Complex[-5.384400912923714*^-9, 1.4593778969383495`*^-9], 
      Complex[4.5053760670680087`*^-10, 2.088831275069928*^-9], 
      Complex[7.002751592916075*^-10, -1.1314639894783006`*^-10], 
      Complex[-2.2494410856401185`*^-11, -2.0757748715026886`*^-10], 
      Complex[-6.185386554175981*^-11, 3.448853630069529*^-12], 
      Complex[5.826008454346856*^-14, 1.685890648526694*^-11], 
      Complex[1.7089344949011934`*^-9, 5.210501296463069*^-9], 
      Complex[3.5115925934778776`*^-9, -9.517754522464242*^-10], 
      Complex[-3.5986815091119936`*^-10, -1.6684597186447277`*^-9], 
      Complex[-6.45877943744845*^-10, 1.0435721233990978`*^-10], 
      Complex[2.3195907203762716`*^-11, 2.140508662469684*^-10], 
      Complex[6.987055748661985*^-11, -3.8958490906283115`*^-12], 
      Complex[-7.108400157571266*^-14, -2.0569804258855064`*^-11], 
      Complex[-1.5866877843327994`*^-9, 4.300528729648438*^-10], 
      Complex[2.2995653923207258`*^-10, 1.0661494266057854`*^-9], 
      Complex[5.054735500325668*^-10, -8.167148468812777*^-11], 
      Complex[-2.0961806717035036`*^-11, -1.9343467994021925`*^-10], 
      Complex[-7.059380068810092*^-11, 3.9361757528183545`*^-12], 
      Complex[7.867465494675623*^-14, 2.276633583527284*^-11], 
      Complex[-1.0188645415478466`*^-10, -4.723770197567394*^-10], 
      Complex[-3.1672629254823045`*^-10, 5.117479747558239*^-11], 
      Complex[1.608644297233854*^-11, 1.4844502622009818`*^-10], 
      Complex[6.255575128621551*^-11, -3.4879894411697424`*^-12], 
      Complex[-7.794540773466521*^-14, -2.2555311243571443`*^-11], 
      Complex[1.3770813392969087`*^-10, -2.2250081633242317`*^-11], 
      Complex[-9.891234487172194*^-12, -9.127590016775252*^-11], 
      Complex[-4.7108941675993014`*^-11, 2.626704783685535*^-12], 
      Complex[6.777913233013548*^-14, 1.961346370435992*^-11], 
      Complex[4.223075444685015*^-12, 3.897036443629558*^-11], 
      Complex[2.8444394155264413`*^-11, -1.5860051943120828`*^-12], 
      Complex[-5.0122759708940025`*^-14, -1.4504182843847873`*^-11], 
      Complex[-1.1933148557793511`*^-11, 6.653696153220948*^-13], 
      Complex[2.973776545788261*^-14, 8.6053120393462*^-12], 
      Complex[-1.2266059376470471`*^-14, -3.5494687244461786`*^-12]}}], 
   Wolfram`QuantumFramework`QuantumBasis[<|
    "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
          
          Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
           False], 1} -> 1|>], "Output" -> 
     Wolfram`QuantumFramework`QuditBasis[<|{
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[2, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[3, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[4, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{5}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[5, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{6}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[6, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{7}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[7, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{8}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[8, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{9}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[9, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{10}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[10, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{11}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[11, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{12}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[12, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{13}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[13, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{14}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[14, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{15}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[15, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{16}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[16, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{17}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[17, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{18}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[18, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{19}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[19, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{20}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[20, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{21}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[21, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{22}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[22, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{23}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[23, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{24}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[24, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{25}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[25, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{26}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[26, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{27}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[27, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{28}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[28, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{29}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[29, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{30}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[30, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{31}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[31, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{32}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[32, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{33}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[33, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{34}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[34, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{35}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[35, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{36}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[36, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{37}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[37, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{38}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[38, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{39}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[39, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{40}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[2, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[3, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[4, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{5}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[5, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{6}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[6, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{7}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[7, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{8}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[8, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{9}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[9, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{10}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[10, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{11}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[11, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{12}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[12, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{13}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[13, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{14}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[14, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{15}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[15, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{16}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[16, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{17}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[17, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{18}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[18, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{19}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[19, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{20}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[20, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{21}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[21, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{22}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[22, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{23}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[23, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{24}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[24, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{25}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[25, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{26}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[26, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{27}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[27, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{28}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[28, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{29}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[29, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{30}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[30, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{31}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[31, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{32}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[32, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{33}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[33, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{34}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[34, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{35}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[35, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{36}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[36, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{37}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[37, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{38}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[38, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{39}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[39, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{40}}}, {1}}]|>], 
     "Picture" -> "Schrodinger", "Label" -> None, "ParameterSpec" -> {}|>]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.92650701766131*^9, 3.9265108175042305`*^9, {3.926681657888697*^9, 
   3.926681685180376*^9}, 3.926681867604002*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"69b954e8-bd75-7145-acad-d8b3b3647af3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumEntanglementMonotone", "[", 
  RowBox[{"outstate", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "2", "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.926464966009094*^9, 3.926464996860977*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"2c8439f5-9ccd-d841-a77f-9e069a014794"],

Cell[BoxData["4.0372473130587614`*^-10"], "Output",
 CellChangeTimes->{3.92646499925013*^9, 3.926465364163673*^9, 
  3.9264658438542137`*^9, 3.926467270812628*^9, 3.926467377850269*^9, 
  3.926467453422796*^9, 3.9264678244775734`*^9, 3.9264679975275803`*^9, 
  3.92650314971142*^9, 3.9265032719388924`*^9, 3.926503854560251*^9, 
  3.9265043726959896`*^9, 3.926504447881657*^9, 3.926510819767531*^9, 
  3.926681871310205*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"ff805f86-df7b-a849-8293-293cf03b03ca"]
}, Open  ]],

Cell[TextData[{
 "The expression that relates the evolution of the coherent state in port 1 \
is:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox[Cell[
      "|0\[RightAngleBracket]",ExpressionUUID->
       "b646bc65-0d9d-6542-b71b-7f04aefd13eb"], "0"], 
     SubscriptBox[Cell[
      "|\[Alpha]\[RightAngleBracket]",ExpressionUUID->
       "489f4131-f392-6742-90fd-d988335bbbf3"], "1"]}], 
    OverscriptBox["\[DoubleRightArrow]", "BS"], 
    RowBox[{
     SubscriptBox[Cell[TextData[{
       "|\[ImaginaryI] ",
       Cell[BoxData[
        FormBox[
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]], "+", "1"}], ")"}], 
           " ", "\[Alpha]"}], "2"], TraditionalForm]],ExpressionUUID->
        "db591e5a-9db2-8544-9b2d-526b0c30bab4"],
       "\[RightAngleBracket]"
      }],ExpressionUUID->"96cf1d21-7ea3-5b45-96a5-9a41869df105"], "c"], 
     SubscriptBox[Cell[TextData[{
       "|",
       Cell[BoxData[
        FormBox[
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], ")"}], " ", 
           "\[Alpha]"}], "2"], TraditionalForm]],ExpressionUUID->
        "e09d1ce0-764b-5541-8e5b-6ca67e963b6f"],
       "\[RightAngleBracket]"
      }],ExpressionUUID->"76eeb163-2825-3747-8dfa-7fba4a3f8ca4"], "d"]}]}], 
   TraditionalForm]],
  FontSize->18,ExpressionUUID->"41bc3396-c65a-3d4a-bc64-848439aaeced"]
}], "Text",
 CellChangeTimes->{{3.9265077649087276`*^9, 3.926507778070614*^9}, {
  3.926507846848593*^9, 
  3.9265081257038584`*^9}},ExpressionUUID->"e221cdde-bb39-c846-b114-\
a848563b60d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"outstate", " ", "-", 
    RowBox[{"QuantumTensorProduct", "[", 
     RowBox[{
      RowBox[{"coh", "[", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]], "+", "1"}], ")"}], 
         "\[Alpha]coh"}], "2"], "]"}], ",", 
      RowBox[{"coh", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], ")"}], 
         "\[Alpha]coh"}], "2"], "]"}]}], "]"}]}], ")"}], "//", 
  "Chop"}]], "Input",
 CellChangeTimes->{{3.9264650381517467`*^9, 3.926465227103945*^9}, {
   3.926465263862615*^9, 3.9264652670857487`*^9}, {3.926465384970444*^9, 
   3.926465389901661*^9}, {3.926465446849747*^9, 3.926465452824802*^9}, {
   3.926465497940746*^9, 3.9264655129425106`*^9}, {3.926465865226753*^9, 
   3.926465918828983*^9}, {3.9264664647079754`*^9, 3.926466488788526*^9}, {
   3.926467287926199*^9, 3.926467304551548*^9}, {3.9264674060815563`*^9, 
   3.92646744288933*^9}, {3.926468010312212*^9, 3.926468016444847*^9}, {
   3.926468974729046*^9, 3.926468983307688*^9}, {3.926469439153982*^9, 
   3.926469605846641*^9}, {3.926470547495554*^9, 3.926470603226303*^9}, 
   3.926503159820711*^9, {3.926503232519356*^9, 3.9265032459550056`*^9}, {
   3.926503793397545*^9, 3.926503814545194*^9}, {3.926503873411066*^9, 
   3.9265038995161304`*^9}, {3.92650393646038*^9, 3.92650396532539*^9}, 
   3.926505670409429*^9, {3.926505998410871*^9, 3.926506015461752*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"8d685cad-651a-3541-803e-9145f07c6ed2"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox["0",
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{"None"}, {
        TemplateBox[{"\"QuantumState: \"", 
          RowBox[{
            RowBox[{"{", "}"}], "\[Rule]", 
            RowBox[{"{", 
              RowBox[{"40", ",", "40"}], "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumState[
    SparseArray[Automatic, {1600}, 0, {1, {{0, 0}, {}}, {}}], 
    Wolfram`QuantumFramework`QuantumBasis[<|
     "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
           
           Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
            False], 1} -> 1|>], "Output" -> 
      Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[2, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[3, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[4, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{5}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[5, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{6}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[6, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{7}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[7, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{8}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[8, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{9}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[9, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{10}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[10, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{11}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[11, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{12}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[12, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{13}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[13, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{14}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[14, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{15}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[15, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{16}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[16, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{17}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[17, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{18}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[18, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{19}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[19, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{20}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[20, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{21}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[21, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{22}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[22, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{23}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[23, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{24}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[24, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{25}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[25, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{26}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[26, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{27}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[27, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{28}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[28, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{29}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[29, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{30}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[30, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{31}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[31, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{32}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[32, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{33}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[33, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{34}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[34, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{35}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[35, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{36}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[36, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{37}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[37, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{38}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[38, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{39}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[39, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{40}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[2, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[3, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[4, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{5}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[5, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{6}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[6, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{7}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[7, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{8}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[8, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{9}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[9, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{10}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[10, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{11}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[11, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{12}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[12, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{13}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[13, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{14}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[14, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{15}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[15, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{16}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[16, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{17}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[17, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{18}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[18, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{19}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[19, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{20}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[20, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{21}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[21, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{22}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[22, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{23}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[23, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{24}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[24, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{25}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[25, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{26}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[26, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{27}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[27, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{28}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[28, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{29}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[29, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{30}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[30, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{31}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[31, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{32}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[32, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{33}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[33, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{34}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[34, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{35}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[35, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{36}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[36, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{37}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[37, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{38}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[38, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{39}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[39, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {40}, 0, {1, {{0, 1}, {{40}}}, {1}}]|>], 
      "Picture" -> "Schrodinger", "Label" -> None, "ParameterSpec" -> {}|>]]],
   TraditionalForm]], "Output",
 CellChangeTimes->{{3.9265031604509487`*^9, 3.926503162961727*^9}, {
   3.926503274441963*^9, 3.9265032774751625`*^9}, 3.9265038196918926`*^9, {
   3.9265038579590893`*^9, 3.92650390044256*^9}, 3.9265039665200043`*^9, {
   3.92650427019256*^9, 3.926504280943377*^9}, {3.926504375478998*^9, 
   3.926504378675608*^9}, {3.9265044505356007`*^9, 3.926504453443485*^9}, {
   3.9265055367362576`*^9, 3.926505538898641*^9}, {3.926505671246403*^9, 
   3.926505681773985*^9}, {3.9265060173889484`*^9, 3.926506021128118*^9}, {
   3.926510822880577*^9, 3.926510825007122*^9}, {3.92668187497726*^9, 
   3.926681877098236*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"f3fdae22-b951-ee4b-8eaa-b3a8d80d1151"]
}, Open  ]],

Cell[TextData[{
 "Phase shift \[Theta] can be measured subtracting the intensities from two \
detectors ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["D", "1"], " ", "and", " ", 
    SubscriptBox["D", "2"]}], TraditionalForm]],ExpressionUUID->
  "75441467-825a-2e4b-82c4-3625539bd38b"],
 ". That can be represented by \[LeftAngleBracket]",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["O", "^"], " ", "\[RightAngleBracket]"}], TraditionalForm]],
  ExpressionUUID->"baae685a-70a7-5342-8f85-d7e6a83649f2"],
 " with  ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["O", "^"], TraditionalForm]],ExpressionUUID->
  "be238578-68d8-b446-a85e-5776b37b388e"],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["c", "\[Dagger]"], "c"}], "-", 
    RowBox[{
     SuperscriptBox["d", 
      RowBox[{" ", "\[Dagger]"}]], "d"}]}], TraditionalForm]],ExpressionUUID->
  "1b58d8ce-e89c-514d-80db-b63438a7cbe6"],
 " the number difference operator. This is simple to calculate because the \
mean of the number operator on a coherent state is just the magnitude of the \
complex squared."
}], "Text",
 CellChangeTimes->{{3.926508372180947*^9, 3.926508411762955*^9}, {
  3.926508446833669*^9, 3.926508494832311*^9}, {3.926508626660784*^9, 
  3.926508702146416*^9}, {3.926509337009561*^9, 
  3.9265094147693157`*^9}},ExpressionUUID->"b2bb3aa9-91d1-934c-b1b1-\
fd6e6b7cc9d6"],

Cell[BoxData[
 RowBox[{"Clear", "[", "\[Theta]", "]"}]], "Input",
 CellChangeTimes->{{3.926681901056164*^9, 3.92668190378429*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"6f7880aa-6b65-4c40-8940-7aa27ef41b33"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ocurrent", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"c", "[", "\"\<Dagger\>\"", "]"}], "@", "c"}], " ", "-", 
    RowBox[{
     RowBox[{"d", "[", "\"\<Dagger\>\"", "]"}], "@", "d"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9266819097309303`*^9, 3.9266819401009235`*^9}, {
  3.926681971420845*^9, 3.926681978630165*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"ead72244-dc8a-2146-a440-24d2f9505e85"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OmeanSymbolic", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]], "+", "1"}], ")"}], 
         "\[Alpha]"}], "2"], "]"}], "2"], "-", 
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], ")"}], 
         "\[Alpha]"}], "2"], "]"}], "2"]}], ",", 
    RowBox[{"Element", "[", 
     RowBox[{"\[Theta]", ",", "Reals"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9265087852310905`*^9, 3.926508794400812*^9}, {
  3.9265090912451878`*^9, 3.926509138426737*^9}, {3.9265092154620647`*^9, 
  3.926509287353379*^9}, {3.926509450303137*^9, 3.9265094724878483`*^9}, {
  3.9265106147710247`*^9, 3.926510632341027*^9}, {3.926510775819485*^9, 
  3.92651078483119*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"ef10b1e6-db2d-0c45-af8b-71852d7cf214"],

Cell[BoxData[
 RowBox[{"\[Alpha]", " ", 
  RowBox[{"Conjugate", "[", "\[Alpha]", "]"}], " ", 
  RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], "Output",
 CellChangeTimes->{
  3.9265091392970963`*^9, 3.926509232423538*^9, {3.9265092729982376`*^9, 
   3.926509288740313*^9}, 3.926509474375223*^9, 3.9265106389612236`*^9, 
   3.9265107914954014`*^9, 3.9266818802660637`*^9, {3.926681982371649*^9, 
   3.9266819910884852`*^9}},
 CellLabel->"Out[20]=",ExpressionUUID->"7db53f1a-440a-8e41-8569-e604650645d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OmeanNumeric", " ", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a1", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"backevolveMZI", "[", "\[Theta]", "]"}], ".", 
         RowBox[{"{", 
          RowBox[{"c", ",", "d"}], "}"}]}], ")"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", 
     RowBox[{"outstate", " ", "=", 
      RowBox[{"QuantumState", "[", 
       RowBox[{
        RowBox[{"MatrixExp", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Alpha]coh", " ", 
              RowBox[{"a1", "[", "\"\<Dagger\>\"", "]"}]}], "-", 
             RowBox[{
              RowBox[{"\[Alpha]coh", "\[Conjugate]"}], " ", "a1"}]}], ")"}], 
           "[", "\"\<Matrix\>\"", "]"}], ",", 
          RowBox[{"PadRight", "[", 
           RowBox[{
            RowBox[{"{", "1", "}"}], ",", 
            SuperscriptBox[
             RowBox[{"fockBasis", "[", "\"\<Dimension\>\"", "]"}], "2"]}], 
           "]"}]}], "]"}], ",", 
        RowBox[{"a1", "[", "\"\<OutputDimensions\>\"", "]"}]}], "]"}]}], " ", 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"outstate", "[", "\"\<Dagger\>\"", "]"}], "@", " ", 
         RowBox[{"Ocurrent", " ", "@", " ", "outstate"}]}], ")"}], "[", 
       "\"\<Scalar\>\"", "]"}], "//", "Chop"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", 
      RowBox[{"N", " ", "@", " ", 
       RowBox[{"Subdivide", "[", 
        RowBox[{"0", ",", 
         RowBox[{"2", "Pi"}], ",", "39"}], "]"}]}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.926509715826212*^9, 3.926509802066458*^9}, {
  3.926509880324423*^9, 3.9265099059849663`*^9}, {3.9265100494589996`*^9, 
  3.926510082819259*^9}, {3.926510139425714*^9, 3.926510148167273*^9}, {
  3.9265102083672256`*^9, 3.926510234216337*^9}, {3.926510271650076*^9, 
  3.926510273856415*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"bdb3b8e6-fef9-e349-a961-925b8241796b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.6870691380196847`", ",", "2.6522722984085623`", ",", 
   "2.548782999443177`", ",", "2.3792815596063055`", ",", 
   "2.1481579771547157`", ",", "1.8613982314702804`", ",", 
   "1.5264292493382574`", ",", "1.1519265514447565`", ",", 
   "0.7475895609480049`", ",", "0.32389039351342525`", ",", 
   RowBox[{"-", "0.10819736498135721`"}], ",", 
   RowBox[{"-", "0.5374828685565842`"}], ",", 
   RowBox[{"-", "0.9528478481629543`"}], ",", 
   RowBox[{"-", "1.3435345690098428`"}], ",", 
   RowBox[{"-", "1.6994244502456046`"}], ",", 
   RowBox[{"-", "2.0113001308865868`"}], ",", 
   RowBox[{"-", "2.271084194624948`"}], ",", 
   RowBox[{"-", "2.472048370668147`"}], ",", 
   RowBox[{"-", "2.608987792418288`"}], ",", 
   RowBox[{"-", "2.6783558007830135`"}], ",", 
   RowBox[{"-", "2.678355800783012`"}], ",", 
   RowBox[{"-", "2.6089877924182883`"}], ",", 
   RowBox[{"-", "2.4720483706681486`"}], ",", 
   RowBox[{"-", "2.271084194624949`"}], ",", 
   RowBox[{"-", "2.0113001308865885`"}], ",", 
   RowBox[{"-", "1.6994244502456035`"}], ",", 
   RowBox[{"-", "1.3435345690098428`"}], ",", 
   RowBox[{"-", "0.952847848162955`"}], ",", 
   RowBox[{"-", "0.5374828685565843`"}], ",", 
   RowBox[{"-", "0.10819736498135853`"}], ",", "0.32389039351342536`", ",", 
   "0.7475895609480036`", ",", "1.1519265514447554`", ",", 
   "1.5264292493382559`", ",", "1.8613982314702822`", ",", 
   "2.148157977154717`", ",", "2.379281559606306`", ",", 
   "2.5487829994431745`", ",", "2.6522722984085587`", ",", 
   "2.687069138019684`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.926510201147724*^9, {3.9265102426758347`*^9, 3.926510263325056*^9}, 
   3.926510330501377*^9, 3.9266820547941113`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"43a1478d-a7b5-7747-8b31-9fc6c259d3ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"OmeanSymbolic", "/.", 
      RowBox[{"\[Alpha]", "->", "\[Alpha]coh"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", "Red"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Thread", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"N", " ", "@", " ", 
        RowBox[{"Subdivide", "[", 
         RowBox[{"0", ",", 
          RowBox[{"2", "Pi"}], ",", "39"}], "]"}]}], ",", "OmeanNumeric"}], 
      "}"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.926510334383341*^9, 3.926510342388024*^9}, {
  3.926510422535511*^9, 3.926510535671498*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"1d5e121a-773a-1741-a280-15c3d3dd420e"],

Cell[BoxData[
 GraphicsBox[{
   InterpretationBox[{
     TagBox[{{{}, {}, 
        TagBox[
         {RGBColor[1, 0, 0], AbsoluteThickness[2], Opacity[1.], 
          LineBox[CompressedData["
1:eJw12Xk0Vd/bAHD33rO51xQZ7r1m+lZSqWTMcJ4klUqGJAqlDBEyhAypCE0y
RFKmFBpMIVNlk4QkoTJEktIgU0gU7/n98f5112ets9Z+9t7PfvZ57lF09LJw
ovPw8ETReHj+98uo5m/5pHHaYL1EgZRcGIKl357oyiU4kIFeUyHSlGcL1xzu
ivciRWqns8QoF02Tb0TzA8jPUyWXeSl/FnedeRgfRrbprIfJkwguchuE8qvC
yQy6f+l7ytnK+9N58qNImkD4aDVlrDW21jLjAploeXAklXK3cUTt7fjL5Bcl
7gN/yrMqgiohtXHkIVSywYRylNpbn9tVCeSBl3rRHMriGzKqWkoSSYmE6pSP
oQgyN7oRM3lXyZSSbT63KatuU9+pmHONHHjzTfgw5Sqz+USTjOtkeX/BMVnK
bxzil6fGp5MHy36Fnwqh5rNeVfvTswyyv/iqhgrlAK2E9wG1meSmubz7LcEI
CNJuaWZVFhnx4sIPPspNhrWNGuW3SKXi8OIbQQjijJd7NpXcJkWyTDeuoixn
Ov7wV14O2WPdnK97AsGg+Z590XdzyRe5FTFVgQjuWVUtyOTcIRWkRtU1KWvb
nd1qnHGP9PQt7ZAOQGBxlNudHF9A6jVddMr1QyCoTVYnbSkku3kuB8/7Ihir
8Bb9+KyQDI/lsdlF+eHjt6XHa4tIFNrr9tEbwaZnGfNpVcWkzN+A0XpPBMu2
tJt90ykhRaI+b/7lgYC/EWWtLy8hP0xucJKi3NrstqWhpJTc1eu9sNcdgV2H
eux4XhnZeX9p7lUXBLDHZUB3VTmpofVhe4ozgv86r6lH3i0nw1xNKq86Ifje
M98plVNB2leozZw5RK3fpwZFo4wqktkTsiDlQK3PxP7ipPhqMnnq/glzKwSX
JFL0sBAmq3Kb9g9aImgrOiuvYYFJPVHtZd4WCPZ93/9ZrgeTf/zvewTuQuC5
T8B7YriG5Hjx9uhvQ3BF3zX6mkgd+fz4pcRbugi6uizdha3qSLtWXbG3OtT6
+5Om4dfqyKlneSdp2ghy8iXFPZSekd9tpxWM1RFUyj9LB/V6UmXL2puRqxB8
oCmVDVk3kDViuRKfpan5pQml7L/RQIYGqD4o5SJw3fAn5HV/AznwIXfzKTaC
CZ9Ww6ojjeTNg/TdDDEqPwZPtsQEN5GuGk4KNSwEKvU9nzXSm8kQtxPCMtME
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
Cia0FismjVIWWO5kqVLDBPpZS42ZQIR5w4X6xJ4xwSFV8LXfCYR5PpS6/mtg
wul9TJNhypNJvCdbW5lwrGJP+4sghEcm8pmVHdT4n3w/rQ9G+KupdUJWJxPW
NLi2JlHu5c3N9e9ngpxNCOwMQbjT0Wz9gUEmzBzyeppBue3JzONtX5lw+MuA
0ijlZqnMreuHqeeV6uy1Q6n18t/WLjPGhHMJtIAQyrht3I53kglZ4+fdqyhX
qqZ8Hf3NBElVc70pyiXnDX275pigddz424qTCBd8+f6vdoGav6q9jw3lu4YJ
0fcZLNg6e/FdOOVbabpiSXwssH7YwLlDOW32U2qYAAvsTjA1Gykn77mofGQR
C9YmGq0ZpBz/QL3YQowFR5L8iVnKF4V79fXYLNhrdK2UPwzhSLezDUulWSCc
mWsoSfl0/WrLRfIssP2WeU+GcojS294ZJRY0XAkfk6Xsf/Kk68AyFuRa7RSV
onyse9mvFyosQFweYVHKbpqvQktVWZDHm/aFTvlwfAAzXY0Fq06rXB+lxrcf
kU+I1mRBy9K7K99R3mvSIOuzgQXJzUrJFZQts4/l7jNggWn09f4kyqZ07vrN
hizwypZBXpS32tc8VjVmgWpBATKkbFh5ZCvHhAUnnBwGFlHWk1zcTjNlwfd6
reud1Ppq+lTa/TBnQYeA8doblNe2OH7tsGKBWk5ypi3lpZHF/3LsWBDRZsJt
oPZTYWBfdNxBFjzweCkfQFnKgBALdmJB9fFuuiJl4endyqYeVLwuQ/ZOVL4w
Lf490PJmgeM68c4FKr/o+bf1FY+zgEd5qWoi5d9O0xaTISwI+2DrXUjl40RN
Wm/vKRYE735or0l5WHaL6/MIFhyzP7SijMrn/jdXQ1MusmCNzGrrO1S+N27W
yYUbLFD3UuCYUecl8PlJ1bAMFtwCuw9p1PlS3lZX8vgWC1Jpt24M+VL7uWNX
zYY8Fsxay886+yBsZOnUrf6EBd05741lqfM62XH3gG8tC24eOFqnS53vrD1j
X4rqqf3f2Kaz24OK3zb4l+orFnh0LRPydafy90Cc4Ip+Ftiww+xcqfpxbOBt
vMsgCyy7yMw9VH2RPyzDzf7Kgs03F30wcEL4pEvO0iXj1PjjHJN/VD3S83xs
IEvnB2+h7i/rqHpWFvztmOh//PCysz86yBJh53+qv3cp84PjmTVJTAvqvIf5
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

           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
            Annotation[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]], 
              Line[CompressedData["
1:eJw12Xk0Vd/bAHD33rO51xQZ7r1m+lZSqWTMcJ4klUqGJAqlDBEyhAypCE0y
RFKmFBpMIVNlk4QkoTJEktIgU0gU7/n98f5112ets9Z+9t7PfvZ57lF09LJw
ovPw8ETReHj+98uo5m/5pHHaYL1EgZRcGIKl357oyiU4kIFeUyHSlGcL1xzu
ivciRWqns8QoF02Tb0TzA8jPUyWXeSl/FnedeRgfRrbprIfJkwguchuE8qvC
yQy6f+l7ytnK+9N58qNImkD4aDVlrDW21jLjAploeXAklXK3cUTt7fjL5Bcl
7gN/yrMqgiohtXHkIVSywYRylNpbn9tVCeSBl3rRHMriGzKqWkoSSYmE6pSP
oQgyN7oRM3lXyZSSbT63KatuU9+pmHONHHjzTfgw5Sqz+USTjOtkeX/BMVnK
bxzil6fGp5MHy36Fnwqh5rNeVfvTswyyv/iqhgrlAK2E9wG1meSmubz7LcEI
CNJuaWZVFhnx4sIPPspNhrWNGuW3SKXi8OIbQQjijJd7NpXcJkWyTDeuoixn
Ov7wV14O2WPdnK97AsGg+Z590XdzyRe5FTFVgQjuWVUtyOTcIRWkRtU1KWvb
nd1qnHGP9PQt7ZAOQGBxlNudHF9A6jVddMr1QyCoTVYnbSkku3kuB8/7Ihir
8Bb9+KyQDI/lsdlF+eHjt6XHa4tIFNrr9tEbwaZnGfNpVcWkzN+A0XpPBMu2
tJt90ykhRaI+b/7lgYC/EWWtLy8hP0xucJKi3NrstqWhpJTc1eu9sNcdgV2H
eux4XhnZeX9p7lUXBLDHZUB3VTmpofVhe4ozgv86r6lH3i0nw1xNKq86Ifje
M98plVNB2leozZw5RK3fpwZFo4wqktkTsiDlQK3PxP7ipPhqMnnq/glzKwSX
JFL0sBAmq3Kb9g9aImgrOiuvYYFJPVHtZd4WCPZ93/9ZrgeTf/zvewTuQuC5
T8B7YriG5Hjx9uhvQ3BF3zX6mkgd+fz4pcRbugi6uizdha3qSLtWXbG3OtT6
+5Om4dfqyKlneSdp2ghy8iXFPZSekd9tpxWM1RFUyj9LB/V6UmXL2puRqxB8
oCmVDVk3kDViuRKfpan5pQml7L/RQIYGqD4o5SJw3fAn5HV/AznwIXfzKTaC
CZ9Ww6ojjeTNg/TdDDEqPwZPtsQEN5GuGk4KNSwEKvU9nzXSm8kQtxPCMtME
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
Cia0FismjVIWWO5kqVLDBPpZS42ZQIR5w4X6xJ4xwSFV8LXfCYR5PpS6/mtg
wul9TJNhypNJvCdbW5lwrGJP+4sghEcm8pmVHdT4n3w/rQ9G+KupdUJWJxPW
NLi2JlHu5c3N9e9ngpxNCOwMQbjT0Wz9gUEmzBzyeppBue3JzONtX5lw+MuA
0ijlZqnMreuHqeeV6uy1Q6n18t/WLjPGhHMJtIAQyrht3I53kglZ4+fdqyhX
qqZ8Hf3NBElVc70pyiXnDX275pigddz424qTCBd8+f6vdoGav6q9jw3lu4YJ
0fcZLNg6e/FdOOVbabpiSXwssH7YwLlDOW32U2qYAAvsTjA1Gykn77mofGQR
C9YmGq0ZpBz/QL3YQowFR5L8iVnKF4V79fXYLNhrdK2UPwzhSLezDUulWSCc
mWsoSfl0/WrLRfIssP2WeU+GcojS294ZJRY0XAkfk6Xsf/Kk68AyFuRa7RSV
onyse9mvFyosQFweYVHKbpqvQktVWZDHm/aFTvlwfAAzXY0Fq06rXB+lxrcf
kU+I1mRBy9K7K99R3mvSIOuzgQXJzUrJFZQts4/l7jNggWn09f4kyqZ07vrN
hizwypZBXpS32tc8VjVmgWpBATKkbFh5ZCvHhAUnnBwGFlHWk1zcTjNlwfd6
reud1Ppq+lTa/TBnQYeA8doblNe2OH7tsGKBWk5ypi3lpZHF/3LsWBDRZsJt
oPZTYWBfdNxBFjzweCkfQFnKgBALdmJB9fFuuiJl4endyqYeVLwuQ/ZOVL4w
Lf490PJmgeM68c4FKr/o+bf1FY+zgEd5qWoi5d9O0xaTISwI+2DrXUjl40RN
Wm/vKRYE735or0l5WHaL6/MIFhyzP7SijMrn/jdXQ1MusmCNzGrrO1S+N27W
yYUbLFD3UuCYUecl8PlJ1bAMFtwCuw9p1PlS3lZX8vgWC1Jpt24M+VL7uWNX
zYY8Fsxay886+yBsZOnUrf6EBd05741lqfM62XH3gG8tC24eOFqnS53vrD1j
X4rqqf3f2Kaz24OK3zb4l+orFnh0LRPydafy90Cc4Ip+Ftiww+xcqfpxbOBt
vMsgCyy7yMw9VH2RPyzDzf7Kgs03F30wcEL4pEvO0iXj1PjjHJN/VD3S83xs
IEvnB2+h7i/rqHpWFvztmOh//PCysz86yBJh53+qv3cp84PjmTVJTAvqvIf5
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

               "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0, 2 Pi}, {-2.687068823829211, 
              2.6870691380196603`}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0, 2 Pi}, {-2.687068823829211, 
             2.6870691380196603`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           RGBColor[1, 0, 0]], 
          Line[CompressedData["
1:eJw12Xk0Vd/bAHD33rO51xQZ7r1m+lZSqWTMcJ4klUqGJAqlDBEyhAypCE0y
RFKmFBpMIVNlk4QkoTJEktIgU0gU7/n98f5112ets9Z+9t7PfvZ57lF09LJw
ovPw8ETReHj+98uo5m/5pHHaYL1EgZRcGIKl357oyiU4kIFeUyHSlGcL1xzu
ivciRWqns8QoF02Tb0TzA8jPUyWXeSl/FnedeRgfRrbprIfJkwguchuE8qvC
yQy6f+l7ytnK+9N58qNImkD4aDVlrDW21jLjAploeXAklXK3cUTt7fjL5Bcl
7gN/yrMqgiohtXHkIVSywYRylNpbn9tVCeSBl3rRHMriGzKqWkoSSYmE6pSP
oQgyN7oRM3lXyZSSbT63KatuU9+pmHONHHjzTfgw5Sqz+USTjOtkeX/BMVnK
bxzil6fGp5MHy36Fnwqh5rNeVfvTswyyv/iqhgrlAK2E9wG1meSmubz7LcEI
CNJuaWZVFhnx4sIPPspNhrWNGuW3SKXi8OIbQQjijJd7NpXcJkWyTDeuoixn
Ov7wV14O2WPdnK97AsGg+Z590XdzyRe5FTFVgQjuWVUtyOTcIRWkRtU1KWvb
nd1qnHGP9PQt7ZAOQGBxlNudHF9A6jVddMr1QyCoTVYnbSkku3kuB8/7Ihir
8Bb9+KyQDI/lsdlF+eHjt6XHa4tIFNrr9tEbwaZnGfNpVcWkzN+A0XpPBMu2
tJt90ykhRaI+b/7lgYC/EWWtLy8hP0xucJKi3NrstqWhpJTc1eu9sNcdgV2H
eux4XhnZeX9p7lUXBLDHZUB3VTmpofVhe4ozgv86r6lH3i0nw1xNKq86Ifje
M98plVNB2leozZw5RK3fpwZFo4wqktkTsiDlQK3PxP7ipPhqMnnq/glzKwSX
JFL0sBAmq3Kb9g9aImgrOiuvYYFJPVHtZd4WCPZ93/9ZrgeTf/zvewTuQuC5
T8B7YriG5Hjx9uhvQ3BF3zX6mkgd+fz4pcRbugi6uizdha3qSLtWXbG3OtT6
+5Om4dfqyKlneSdp2ghy8iXFPZSekd9tpxWM1RFUyj9LB/V6UmXL2puRqxB8
oCmVDVk3kDViuRKfpan5pQml7L/RQIYGqD4o5SJw3fAn5HV/AznwIXfzKTaC
CZ9Ww6ojjeTNg/TdDDEqPwZPtsQEN5GuGk4KNSwEKvU9nzXSm8kQtxPCMtME
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
Cia0FismjVIWWO5kqVLDBPpZS42ZQIR5w4X6xJ4xwSFV8LXfCYR5PpS6/mtg
wul9TJNhypNJvCdbW5lwrGJP+4sghEcm8pmVHdT4n3w/rQ9G+KupdUJWJxPW
NLi2JlHu5c3N9e9ngpxNCOwMQbjT0Wz9gUEmzBzyeppBue3JzONtX5lw+MuA
0ijlZqnMreuHqeeV6uy1Q6n18t/WLjPGhHMJtIAQyrht3I53kglZ4+fdqyhX
qqZ8Hf3NBElVc70pyiXnDX275pigddz424qTCBd8+f6vdoGav6q9jw3lu4YJ
0fcZLNg6e/FdOOVbabpiSXwssH7YwLlDOW32U2qYAAvsTjA1Gykn77mofGQR
C9YmGq0ZpBz/QL3YQowFR5L8iVnKF4V79fXYLNhrdK2UPwzhSLezDUulWSCc
mWsoSfl0/WrLRfIssP2WeU+GcojS294ZJRY0XAkfk6Xsf/Kk68AyFuRa7RSV
onyse9mvFyosQFweYVHKbpqvQktVWZDHm/aFTvlwfAAzXY0Fq06rXB+lxrcf
kU+I1mRBy9K7K99R3mvSIOuzgQXJzUrJFZQts4/l7jNggWn09f4kyqZ07vrN
hizwypZBXpS32tc8VjVmgWpBATKkbFh5ZCvHhAUnnBwGFlHWk1zcTjNlwfd6
reud1Ppq+lTa/TBnQYeA8doblNe2OH7tsGKBWk5ypi3lpZHF/3LsWBDRZsJt
oPZTYWBfdNxBFjzweCkfQFnKgBALdmJB9fFuuiJl4endyqYeVLwuQ/ZOVL4w
Lf490PJmgeM68c4FKr/o+bf1FY+zgEd5qWoi5d9O0xaTISwI+2DrXUjl40RN
Wm/vKRYE735or0l5WHaL6/MIFhyzP7SijMrn/jdXQ1MusmCNzGrrO1S+N27W
yYUbLFD3UuCYUecl8PlJ1bAMFtwCuw9p1PlS3lZX8vgWC1Jpt24M+VL7uWNX
zYY8Fsxay886+yBsZOnUrf6EBd05741lqfM62XH3gG8tC24eOFqnS53vrD1j
X4rqqf3f2Kaz24OK3zb4l+orFnh0LRPydafy90Cc4Ip+Ftiww+xcqfpxbOBt
vMsgCyy7yMw9VH2RPyzDzf7Kgs03F30wcEL4pEvO0iXj1PjjHJN/VD3S83xs
IEvnB2+h7i/rqHpWFvztmOh//PCysz86yBJh53+qv3cp84PjmTVJTAvqvIf5
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

           "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{0, 2 Pi}, {-2.687068823829211, 2.6870691380196603`}},
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           RGBColor[1, 0, 0]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], {{}, 
    InterpretationBox[{
      TagBox[
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.012833333333333334`], AbsoluteThickness[2], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQNZouul5OpZHaROHpTVmn/EXpH5Xectcxj/in3T
msjwF8ksDivWLtLZ/+6eveFD46NHOJih8k/sebRFinP1GR0SrI2Wfjn20l78
C3+z54m/9hD17+wf8cwUdsz5Yf+9n/OWC/cn+03TZDu98j7ZQ/R/sVf3TP7o
8Oa5vR1TVSK/8Xd7VdsXR+ftumIPMe+n/b2d0hMubdq9v6Xk1YubUX/sl3Rf
duU3frgfYv4/e48Jtkd31b7bn1qsaxF0kMEhB+yfr/sh9jE58NvZbrxu8Ht/
55qn1eahzA7dJ5+0qogzHIDYz+KQyLzZQE+b6cCap3P3y7xkddhndNH74DHm
AxD3sDtEn3nw1+Q+y4HzcmHMTLUcDicDo8+55rIegLiP0+EYlP8pnM/9uQC3
QwxUPcS9PA6HoOaJTTzWdWYJr0MK1D6I+/kc+qHukU21fx4hI+DABXUvxD8C
cP+sa5Tu9E4TdPCD+hfiPyGHpdDwcJj3Xctug5CD7S5IeEH8K+ygDg3Pi7su
nzH4JewgDQ1viP9FHNZC4yP5+vo8ZRdRh9vQ+IKEh6iDPDQ+v37uFhDrE3Pg
h8Y3JHzEHYyg6aFNIGMTxw1xhxpoeoGEl4SDJDQ9Sei6hPxWlHTIgKY3AICY
GeE=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ],
       {"WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
      StyleBox[
       DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{
            Annotation[{
              Directive[
               PointSize[0.012833333333333334`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]], 
              Point[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQNZouul5OpZHaROHpTVmn/EXpH5Xectcxj/in3T
msjwF8ksDivWLtLZ/+6eveFD46NHOJih8k/sebRFinP1GR0SrI2Wfjn20l78
C3+z54m/9hD17+wf8cwUdsz5Yf+9n/OWC/cn+03TZDu98j7ZQ/R/sVf3TP7o
8Oa5vR1TVSK/8Xd7VdsXR+ftumIPMe+n/b2d0hMubdq9v6Xk1YubUX/sl3Rf
duU3frgfYv4/e48Jtkd31b7bn1qsaxF0kMEhB+yfr/sh9jE58NvZbrxu8Ht/
55qn1eahzA7dJ5+0qogzHIDYz+KQyLzZQE+b6cCap3P3y7xkddhndNH74DHm
AxD3sDtEn3nw1+Q+y4HzcmHMTLUcDicDo8+55rIegLiP0+EYlP8pnM/9uQC3
QwxUPcS9PA6HoOaJTTzWdWYJr0MK1D6I+/kc+qHukU21fx4hI+DABXUvxD8C
cP+sa5Tu9E4TdPCD+hfiPyGHpdDwcJj3Xctug5CD7S5IeEH8K+ygDg3Pi7su
nzH4JewgDQ1viP9FHNZC4yP5+vo8ZRdRh9vQ+IKEh6iDPDQ+v37uFhDrE3Pg
h8Y3JHzEHYyg6aFNIGMTxw1xhxpoeoGEl4SDJDQ9Sei6hPxWlHTIgKY3AICY
GeE=
               "]]}, "Charting`Private`Tag#1"]}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{0, 6.283185307179586}, {-2.6783558007830135`, 
               2.6870691380196847`}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0, 6.283185307179586}, {-2.6783558007830135`, 
              2.6870691380196847`}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.012833333333333334`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>],
        ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}],
       Selectable->False]},
     Annotation[{{
        Annotation[{
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          Point[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQNZouul5OpZHaROHpTVmn/EXpH5Xectcxj/in3T
msjwF8ksDivWLtLZ/+6eveFD46NHOJih8k/sebRFinP1GR0SrI2Wfjn20l78
C3+z54m/9hD17+wf8cwUdsz5Yf+9n/OWC/cn+03TZDu98j7ZQ/R/sVf3TP7o
8Oa5vR1TVSK/8Xd7VdsXR+ftumIPMe+n/b2d0hMubdq9v6Xk1YubUX/sl3Rf
duU3frgfYv4/e48Jtkd31b7bn1qsaxF0kMEhB+yfr/sh9jE58NvZbrxu8Ht/
55qn1eahzA7dJ5+0qogzHIDYz+KQyLzZQE+b6cCap3P3y7xkddhndNH74DHm
AxD3sDtEn3nw1+Q+y4HzcmHMTLUcDicDo8+55rIegLiP0+EYlP8pnM/9uQC3
QwxUPcS9PA6HoOaJTTzWdWYJr0MK1D6I+/kc+qHukU21fx4hI+DABXUvxD8C
cP+sa5Tu9E4TdPCD+hfiPyGHpdDwcJj3Xctug5CD7S5IeEH8K+ygDg3Pi7su
nzH4JewgDQ1viP9FHNZC4yP5+vo8ZRdRh9vQ+IKEh6iDPDQ+v37uFhDrE3Pg
h8Y3JHzEHYyg6aFNIGMTxw1xhxpoeoGEl4SDJDQ9Sei6hPxWlHTIgKY3AICY
GeE=
           "]]}, "Charting`Private`Tag#1"]}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, 
         "PlotRange" -> {{0, 6.283185307179586}, {-2.6783558007830135`, 
           2.6870691380196847`}}, "Frame" -> {{False, False}, {False, False}},
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
         "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
         GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         ListPlot, "GroupHighlight" -> False|>|>, 
      "DynamicHighlight"]], {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi}, {-2.687068823829211, 2.6870691380196603`}}, {{
     0, 6.283185307179586}, {-2.687068823829211, 2.6870691380196603`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.926510345662096*^9, {3.926510424244286*^9, 3.926510439946284*^9}, {
   3.926510510021551*^9, 3.926510536459013*^9}, 3.926682063143694*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"64132dfe-3d5f-5d45-814f-f3144c96ad91"]
}, Open  ]],

Cell[TextData[{
 StyleBox["We observe the result analogous to classical coherent light, but \
coherent states are still quantum states and possess quantum mechanical \
fluctuations. Using error propagation the uncertainty  of phase measurement \
is ",
  FontSize->14],
 Cell[BoxData[
  FormBox["\[CapitalDelta]\[Theta]", TraditionalForm]],
  FontSize->20,ExpressionUUID->"f22340c3-8eeb-8548-aea4-a374c6b70321"],
 StyleBox[" = \[CapitalDelta]",
  FontSize->20],
 Cell[BoxData[
  FormBox["O", TraditionalForm]],
  FontSize->20,ExpressionUUID->"c75287b6-b646-f845-8e85-0a1fe3408c84"],
 StyleBox["/ |",
  FontSize->20],
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[DifferentialD]", " ", 
     RowBox[{"\[LeftAngleBracket]", "O", "\[RightAngleBracket]"}]}], 
    RowBox[{"\[DifferentialD]", "\[Theta]"}]], TraditionalForm]],
  FontSize->20,ExpressionUUID->"6c357e5d-a4be-3843-9d7a-6b6de7fd29f9"],
 StyleBox["| = ",
  FontSize->20],
 Cell[BoxData[
  FormBox[
   RowBox[{
   "1", Cell["/",ExpressionUUID->"fae359bf-ee2e-0d49-b949-8cd57fa0538c"], 
    Cell[TextData[Cell[BoxData[
     FormBox[
      RowBox[{
      Cell["(",ExpressionUUID->"8092bba8-ca98-964b-8d36-49a93aeb0ef2"], 
       SqrtBox[
        OverscriptBox["n", "\[LongDash]"]]}], TraditionalForm]],
     ExpressionUUID->"e1364a78-b0a6-f846-a00d-7d61ee6459f8"]],ExpressionUUID->
     "3279426e-0f1f-6f48-81d7-acd40274591c"], Cell[
    "|",ExpressionUUID->"44818a2f-e376-ae4f-9226-760c48ce1750"], 
    StyleBox[
     RowBox[{"sin", "(", "\[Theta]", ")"}],
     FontSize->18], 
    StyleBox[Cell[
     "| )",ExpressionUUID->"72b4bb5c-8495-664b-9a44-ae81e35a41d0"],
     FontSize->18]}], TraditionalForm]],
  FontSize->20,ExpressionUUID->"63204f04-2f07-764e-b9a3-b9f474d49282"],
 StyleBox[", which is optimal or minimum for odd multiples of \[Pi]/2. That \
is the best result with classical-like states determining a standard quantum \
limit.",
  FontSize->14]
}], "Text",
 CellChangeTimes->{{3.926510881573585*^9, 3.926510953913839*^9}, {
  3.926511971258013*^9, 3.9265119785877495`*^9}, {3.9265120968084145`*^9, 
  3.9265124009436836`*^9}, {3.926677955145033*^9, 3.92667796231196*^9}, {
  3.926678042152284*^9, 3.926678119883993*^9}, {3.9266781574914665`*^9, 
  3.926678230617817*^9}},ExpressionUUID->"664dc76d-7f39-9447-a398-\
6251a7b83abb"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152, 579.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
FrontEndVersion->"14.0 for Microsoft Windows (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"3e6eebd5-dcf1-7345-a423-07973e1e224d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 178, 3, 98, "Title",ExpressionUUID->"20abd8c8-a984-4647-9dc7-1d14845a7e13"],
Cell[CellGroupData[{
Cell[783, 29, 182, 3, 67, "Section",ExpressionUUID->"f7f69500-eaed-7340-8307-f9417bc0394d"],
Cell[968, 34, 2567, 57, 110, "Text",ExpressionUUID->"a90ab608-82db-f74e-afe7-8ba7df2aa86e"],
Cell[3538, 93, 1961, 47, 19, "Input",ExpressionUUID->"2d79e99f-d422-5240-b8b7-82a435ca1f76",
 CellOpen->False],
Cell[5502, 142, 364, 6, 35, "Text",ExpressionUUID->"02fbcd87-44c6-d24c-b864-bfb4224162de"],
Cell[5869, 150, 14933, 265, 275, "Input",ExpressionUUID->"95bb4512-4c8c-874c-82eb-b970fd2c95e0"],
Cell[20805, 417, 475, 8, 58, "Text",ExpressionUUID->"c96b4591-49f7-fd43-a757-7be54a9a1af1"],
Cell[21283, 427, 156, 3, 28, "Input",ExpressionUUID->"ab5008cc-0c9a-3045-917b-593e6e36d2fc"],
Cell[21442, 432, 2902, 85, 117, "DisplayFormula",ExpressionUUID->"8387f8d0-d389-e247-8265-3acd17ba0e7a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24381, 522, 180, 3, 67, "Section",ExpressionUUID->"820c52a7-ceb4-6f42-a610-b039788cfefd"],
Cell[24564, 527, 209, 3, 28, "Input",ExpressionUUID->"2f9b6557-83a0-334e-a403-772b9dab2ef0"],
Cell[24776, 532, 795, 19, 48, "Input",ExpressionUUID->"e935656d-3c80-844e-92b9-49793630e025"],
Cell[25574, 553, 910, 27, 73, "Text",ExpressionUUID->"07a7c569-b4b4-c148-b519-d9245ae50d9e"],
Cell[26487, 582, 1017, 26, 28, "Input",ExpressionUUID->"09e41dbe-65b0-2843-a198-93d6f3bf8e84"],
Cell[27507, 610, 588, 18, 35, "Text",ExpressionUUID->"3b5fcf11-a847-9c43-919e-70f95bf39cf1"],
Cell[28098, 630, 799, 20, 37, "Input",ExpressionUUID->"780b7d1b-a728-a846-be97-5bd7b0f858ae"],
Cell[28900, 652, 282, 6, 28, "Input",ExpressionUUID->"98091a52-6916-ff43-b29b-3c9609072a05"],
Cell[29185, 660, 1455, 40, 43, "Text",ExpressionUUID->"687f07d2-ff2f-9a41-a997-4eac83f08bee"],
Cell[CellGroupData[{
Cell[30665, 704, 212, 3, 28, "Input",ExpressionUUID->"f88b694c-5e01-d24b-9f62-01a7dee527c4"],
Cell[30880, 709, 732, 24, 51, "Output",ExpressionUUID->"c30fafeb-aa03-4645-829d-1089831b8b37"]
}, Open  ]],
Cell[31627, 736, 240, 4, 35, "Text",ExpressionUUID->"92530059-97ca-b14e-80da-f87dd2c4df22"],
Cell[CellGroupData[{
Cell[31892, 744, 815, 13, 28, "Input",ExpressionUUID->"1c181c6f-7ba9-e448-83d4-e854c7cca65c"],
Cell[32710, 759, 617, 8, 32, "Output",ExpressionUUID->"63019719-8f84-ea45-89c9-9ca6e0c788a3"]
}, Open  ]],
Cell[33342, 770, 1704, 44, 66, "Text",ExpressionUUID->"1337fbee-746f-a94c-95c9-535a6b1edac9"],
Cell[CellGroupData[{
Cell[35071, 818, 304, 6, 28, "Input",ExpressionUUID->"9184447e-52f5-984a-87e3-55ac89cd0e60"],
Cell[35378, 826, 13972, 221, 53, "Output",ExpressionUUID->"d2679bcd-f228-3b4f-a800-e94ccd439416"]
}, Open  ]],
Cell[49365, 1050, 1156, 33, 37, "Text",ExpressionUUID->"8809a3e9-c902-2446-89a0-2225619daa16"],
Cell[50524, 1085, 690, 18, 28, "Input",ExpressionUUID->"6b7e4782-9802-e044-9fd5-4bba019f6877"],
Cell[CellGroupData[{
Cell[51239, 1107, 545, 14, 28, "Input",ExpressionUUID->"9cdf8c7c-70a6-5740-87c7-a0f5dfc28399"],
Cell[51787, 1123, 586, 9, 32, "Output",ExpressionUUID->"9785447c-242e-a846-801e-ea6f37969ccf"]
}, Open  ]],
Cell[52388, 1135, 424, 11, 28, "Input",ExpressionUUID->"18223fb3-5014-a848-88b7-309e974f3e3b"],
Cell[CellGroupData[{
Cell[52837, 1150, 1342, 30, 53, "Input",ExpressionUUID->"ff18b1b9-941c-2949-9a73-84ab5821b85b"],
Cell[54182, 1182, 54236, 854, 62, "Output",ExpressionUUID->"40ccd12b-9cfa-b34a-98e6-cfd521b14457"]
}, Open  ]],
Cell[108433, 2039, 262, 6, 35, "Text",ExpressionUUID->"6dfa2768-f2cd-6548-bbb3-5c1071b27651"],
Cell[CellGroupData[{
Cell[108720, 2049, 453, 10, 28, "Input",ExpressionUUID->"a31e82a0-b791-5941-b657-7902b609544b"],
Cell[109176, 2061, 336, 5, 32, "Output",ExpressionUUID->"b0cad6d4-485a-b348-a8e5-546af33c94a3"]
}, Open  ]],
Cell[109527, 2069, 2331, 60, 100, "Text",ExpressionUUID->"9aab44e5-f923-6945-a411-39c55d5173b7"],
Cell[111861, 2131, 162, 3, 35, "Text",ExpressionUUID->"ce610fce-797a-324d-90d8-cad506830886"],
Cell[CellGroupData[{
Cell[112048, 2138, 656, 16, 37, "Input",ExpressionUUID->"3751a749-dfbd-1744-ad6e-60acbd6bcf72"],
Cell[112707, 2156, 13232, 193, 31, "Output",ExpressionUUID->"61c52f97-c735-1248-a62a-923aa6ff6fc0"]
}, Open  ]],
Cell[125954, 2352, 2035, 59, 72, "Text",ExpressionUUID->"886c5ee5-92c2-8541-91a2-a98c3652e013"],
Cell[127992, 2413, 274, 5, 28, "Input",ExpressionUUID->"4a2deb9e-5ae0-1045-9945-0d7385bfbc27"],
Cell[128269, 2420, 326, 9, 31, "Input",ExpressionUUID->"adf3092d-0ee9-4b49-97df-5434e92dd990"],
Cell[CellGroupData[{
Cell[128620, 2433, 1240, 28, 50, "Input",ExpressionUUID->"352a0394-5f1b-9942-8a39-52fcd9c243d5"],
Cell[129863, 2463, 18965, 342, 68, "Output",ExpressionUUID->"6ba0fcff-cb4d-e74d-8376-c1aef6cda676"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148865, 2810, 617, 19, 57, "Input",ExpressionUUID->"4d9e1da9-1a11-5948-be7a-77ba5af37e66"],
Cell[149485, 2831, 1035, 34, 66, "Output",ExpressionUUID->"4bae1c2a-9340-c64f-b62e-346646d8ca12"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150557, 2870, 362, 8, 28, "Input",ExpressionUUID->"1bf9ecae-f4f7-134a-b6aa-fe0ada629231"],
Cell[150922, 2880, 322, 4, 32, "Output",ExpressionUUID->"21052eca-f079-6c45-ba5f-0640246433a8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[151293, 2890, 363, 9, 67, "Section",ExpressionUUID->"e260609f-1da8-eb4d-8806-f77271dcdc43"],
Cell[151659, 2901, 213, 5, 35, "Text",ExpressionUUID->"d4668f41-2877-0c4d-a657-062dc9adfb91"],
Cell[151875, 2908, 47517, 794, 239, "Input",ExpressionUUID->"a7c72224-9ec9-f740-afcb-288f23654f45"],
Cell[199395, 3704, 210, 3, 28, "Input",ExpressionUUID->"a13fde38-db65-aa4a-95c7-5022ddb01c62"],
Cell[199608, 3709, 941, 21, 48, "Input",ExpressionUUID->"f4429ee0-db2d-fc43-b2c4-8f6b62695f4c"],
Cell[CellGroupData[{
Cell[200574, 3734, 327, 7, 28, "Input",ExpressionUUID->"1f7345f1-4f85-8044-9e28-fe69587fa776"],
Cell[200904, 3743, 5876, 113, 31, "Output",ExpressionUUID->"6e0c496c-ed4a-b342-9713-01b21d970e84"]
}, Open  ]],
Cell[206795, 3859, 266, 6, 35, "Text",ExpressionUUID->"f7297ddc-acc3-0d40-a055-3c1173c7a3a6"],
Cell[207064, 3867, 735, 21, 28, "Input",ExpressionUUID->"7312e1ea-2a09-e74d-8dbc-822b3eefeaff"],
Cell[207802, 3890, 228, 4, 28, "Input",ExpressionUUID->"48ed03ec-f537-5a4b-b709-8da64240b950"],
Cell[208033, 3896, 1117, 23, 48, "Input",ExpressionUUID->"883ec6cc-d309-894a-a3e4-512f2be33012"],
Cell[CellGroupData[{
Cell[209175, 3923, 1372, 31, 37, "Input",ExpressionUUID->"56088c61-5209-4a46-8125-6d0e9340829b"],
Cell[210550, 3956, 1416, 41, 56, "Output",ExpressionUUID->"0c30c707-2b55-af47-8702-7f536f13e712"]
}, Open  ]],
Cell[211981, 4000, 270, 6, 35, "Text",ExpressionUUID->"8474990e-d8bc-0943-9b2e-f2fe39be7844"],
Cell[CellGroupData[{
Cell[212276, 4010, 408, 9, 28, "Input",ExpressionUUID->"ce141670-ce10-bd4a-9679-03f4d9ff6c8d"],
Cell[212687, 4021, 39005, 768, 62, "Output",ExpressionUUID->"a8c72b5d-6dea-104e-a727-7b5a9120587c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251729, 4794, 790, 15, 28, "Input",ExpressionUUID->"9388ef32-38ee-234a-a78f-077870c5bd9b"],
Cell[252522, 4811, 3453, 87, 62, "Output",ExpressionUUID->"23141020-d7db-d945-afbf-7ca35f624ae3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256012, 4903, 562, 12, 28, "Input",ExpressionUUID->"970832b7-1ab0-444b-9409-c77e93e461d8"],
Cell[256577, 4917, 999, 23, 48, "Output",ExpressionUUID->"6d663ce5-a705-844a-be3b-0e21358e937a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257613, 4945, 837, 18, 28, "Input",ExpressionUUID->"09e97ac5-de05-e14d-84e9-5ae498ae6b18"],
Cell[258453, 4965, 121522, 2083, 244, "Output",ExpressionUUID->"26050781-bf3e-0b42-8cbb-cf2cc64ba051"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[380024, 7054, 176, 3, 67, "Section",ExpressionUUID->"e1465a1f-c3a4-1b4d-abb1-b1f59f4e4c65"],
Cell[380203, 7059, 797, 20, 60, "Text",ExpressionUUID->"870dc513-860f-604e-b24f-f94ed9ba1542"],
Cell[381003, 7081, 143, 2, 28, "Input",ExpressionUUID->"6b3a5a08-dcca-7546-a738-b64a3dadbe58"],
Cell[381149, 7085, 742, 18, 48, "Input",ExpressionUUID->"1c07f9b6-3e6f-eb4d-99a1-1a610c43cf18"],
Cell[381894, 7105, 342, 8, 28, "Input",ExpressionUUID->"eed50549-a62e-fe48-84c8-deea829ffefa"],
Cell[382239, 7115, 239, 6, 35, "Text",ExpressionUUID->"fdb4c697-4d4a-2f41-b768-78bbe9bc0cd7"],
Cell[382481, 7123, 925, 26, 37, "Input",ExpressionUUID->"b69dc2e0-dc71-dd48-a9fb-77e177cc69b1"],
Cell[383409, 7151, 165, 3, 35, "Text",ExpressionUUID->"7df985e7-797d-cc41-bceb-5911869022ad"],
Cell[383577, 7156, 446, 11, 28, "Input",ExpressionUUID->"a883e8ba-217d-5441-a7a2-b9569932ee88"],
Cell[CellGroupData[{
Cell[384048, 7171, 997, 26, 31, "Input",ExpressionUUID->"d3325aa4-624b-c740-ac61-c95e6f69d1d1"],
Cell[385048, 7199, 52923, 844, 62, "Output",ExpressionUUID->"69b954e8-bd75-7145-acad-d8b3b3647af3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[438008, 8048, 356, 8, 28, "Input",ExpressionUUID->"2c8439f5-9ccd-d841-a77f-9e069a014794"],
Cell[438367, 8058, 503, 7, 32, "Output",ExpressionUUID->"ff805f86-df7b-a849-8293-293cf03b03ca"]
}, Open  ]],
Cell[438885, 8068, 1826, 49, 68, "Text",ExpressionUUID->"e221cdde-bb39-c846-b114-a848563b60d1"],
Cell[CellGroupData[{
Cell[440736, 8121, 1770, 36, 54, "Input",ExpressionUUID->"8d685cad-651a-3541-803e-9145f07c6ed2"],
Cell[442509, 8159, 13458, 196, 31, "Output",ExpressionUUID->"f3fdae22-b951-ee4b-8eaa-b3a8d80d1151"]
}, Open  ]],
Cell[455982, 8358, 1401, 38, 59, "Text",ExpressionUUID->"b2bb3aa9-91d1-934c-b1b1-fd6e6b7cc9d6"],
Cell[457386, 8398, 209, 3, 28, "Input",ExpressionUUID->"6f7880aa-6b65-4c40-8940-7aa27ef41b33"],
Cell[457598, 8403, 452, 11, 28, "Input",ExpressionUUID->"ead72244-dc8a-2146-a440-24d2f9505e85"],
Cell[CellGroupData[{
Cell[458075, 8418, 1226, 30, 49, "Input",ExpressionUUID->"ef10b1e6-db2d-0c45-af8b-71852d7cf214"],
Cell[459304, 8450, 497, 9, 32, "Output",ExpressionUUID->"7db53f1a-440a-8e41-8569-e604650645d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[459838, 8464, 2078, 53, 74, "Input",ExpressionUUID->"bdb3b8e6-fef9-e349-a961-925b8241796b"],
Cell[461919, 8519, 1808, 36, 71, "Output",ExpressionUUID->"43a1478d-a7b5-7747-8b31-9fc6c259d3ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[463764, 8560, 846, 22, 28, "Input",ExpressionUUID->"1d5e121a-773a-1741-a280-15c3d3dd420e"],
Cell[464613, 8584, 37585, 694, 235, "Output",ExpressionUUID->"64132dfe-3d5f-5d45-814f-f3144c96ad91"]
}, Open  ]],
Cell[502213, 9281, 2308, 55, 92, "Text",ExpressionUUID->"664dc76d-7f39-9447-a398-6251a7b83abb"]
}, Open  ]]
}, Open  ]]
}
]
*)

